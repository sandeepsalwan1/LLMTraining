[
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0000_06cde1c.png",
    "code": "import tube;\nimport graph3;\nsize(12cm,0);\n\ncurrentprojection=perspective(1,-1,0);\n\n\npath3 p=scale3(20)*randompath3(20,false,operator--)--cycle;\n\npath section=scale(1,0.25)*polygon(4);\ndraw(tube(roundedpath(p,0.05),section, corner=10), purple);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0001_0731819.png",
    "code": "import tube;\nsize(10cm,0);\n\ncurrentprojection=orthographic(0,0.5,1);\npath section=rotate(90)*(N+W--W--E--N+E);\n\n// The tubed curve has three nodes joined with linear segments.\npath3 p=scale(10,20,1)*(X--Y--(X+Y)--cycle);\n\n// We may use the routine roundedpath in order to obtain rounded corner:\ndraw(tube(roundedpath(p,r=0.05),\n          section,\n          corner=100), // Controls the number of elementary tubes at the corners\n     purple, bp+yellow+thin());\ndraw(p,red); dot(p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0002_040df1f.png",
    "code": "import tube;\nimport graph;\nsize(12cm,0);\ncurrentprojection=perspective(0,3,6);\n\nreal f(real t) {return cos(2*t);}\npath g=polargraph(f,0,2pi,10,operator --)&cycle;\npath3 p=path3(scale(20)*g);\n\ndraw(tube(p,2W--2E), red, bp+black);\ndraw(tube(p,unitcircle), orange, bp+black);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0003_02c9630.png",
    "code": "import tube;\nimport graph3;\nsize(12cm,0);\n// currentprojection=perspective((2,1,6),-Z); real q=1;\ncurrentprojection=perspective((-1,1,1)); real q=2;\n\nreal x(real t){return (1-cos(t))*cos(q*t);}\nreal y(real t){return (1-cos(t))*sin(q*t);}\nreal z(real t){return cos(3t);}\n\npath3 p=graph(x,y,z,0,2pi,20,operator ..);\ndraw(tube(p,scale(0.4,0.1)*unitcircle), purple);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0004_06d9a6a.png",
    "code": "import tube;\nsize(10cm,0);\n\ncurrentprojection=orthographic(0,0.5,1);\npath section=rotate(180)*(N+W--W--E--N+E);\n\npath3 p=scale(5,10,1)*unitcircle3;\n\ndraw(tube(p, section,\n          relstep=1/6), // Fix the sample step of the relative time (reltime) of the elementary tubes.\n     purple, bp+yellow);\ndraw(p,red); dot(p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0005_0299699.png",
    "code": "import tube;\nimport solids;\n\nsize(12cm,0);\ncurrentprojection=perspective((0,0,1));\n\nint p=8, q=3;\nreal n=p/q, R=2, r=1;\n\nreal x(real t){return (R+r*cos(n*t))*cos(t);}\nreal y(real t){return (R+r*cos(n*t))*sin(t);}\nreal z(real t){return r*sin(n*t);}\n\npath3 p=graph(x,y,z,0,6pi,200,operator ..)&cycle;\n\nrevolution torus=revolution(Circle(R*X,r,Y,10),Z);\n\ntransform T(real t){return scale(0.3+0.25*sin(t*20pi));}\n\npen[] bpen={0.5red,0.5blue};\nbpen.cyclic=true;\npen pen(real t){return bpen[ceil(sin(t*20pi)-1e-3)];}\n\ndraw(tube(p,coloredpath(polygon(3),pen),T));\n// draw(surface(torus),yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0006_087cb2e.png",
    "code": "import tube;\nimport graph3;\n\nsize(10cm,0);\ncurrentprojection=perspective(4,3,4);\n\ntriple f(real t){\n  return t*Z+(cos(2pi*t),sin(2pi*t),0)/sqrt(1+0.5*t^2);\n}\n\npath3 p=graph(f,0,2.7,operator ..);\ndraw(tube(p,scale(0.2)*polygon(5)), purple);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0007_00efc26.png",
    "code": "import tube;\nimport graph3;\nsize(12cm,0);\ncurrentprojection=orthographic(1,0,6);\n\nreal x(real t) {return sin(t);}\nreal y(real t) {return 0.5*sin(2*t);}\n\npath g=graph(x,y,0,2pi,50,operator ..);\npath3 p=path3(scale(5)*g);\n\npen[] pens(real t){\n  real tt=1-2*abs(t-0.5);\n  return new pen[] {interp(red,blue,tt), interp(blue,red,tt)};\n}\n\ndraw(tube(p,\n          coloredpath(polygon(5),pens,colortype=coloredNodes)));\nlabel(\"colortype=coloredNodes\",8*X);\n\ndraw(tube(shift(10*Y)*p,\n          coloredpath(polygon(5),pens,colortype=coloredSegments)));\nlabel(\"colortype=coloredSegments\",8*X+10Y);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0008_0679bda.png",
    "code": "import tube;\nimport graph3;\nsize(12cm,0);\ncurrentprojection=perspective((-1,1,1));\n\nint p=7, q=3;\nreal n=p/q;\nreal a=1, b=1;\nreal x(real t){return a*cos(t);}\nreal y(real t){return a*sin(t);}\nreal z(real t){return b*cos(n*t);}\n\nreal R(real t){\n  real st2=(n*sin(n*t))^2;\n  return a*(1+st2)^(1.5)/sqrt(1+st2+n^4*cos(n*t)^2);\n  // return -a*(1+st2)^(1.5)/sqrt(1+st2+n^4*cos(n*t)^2); // Signed radius curvature\n}\n\nreal mt=q*2*pi;\npath3 p=graph(x,y,z,0,mt,operator ..)..cycle;\n\nreal m=R(0), M=R(0.5*pi/n);\n\n// Define a pen depending to the radius curvature of graph(x,y,z) at reltime t\npen curvaturePen(real t){\n  real r=abs(R(t*mt)-m)/(M-m);\n  return interp(red,blue,r);\n}\n\n// Draw the tube, colors depend of the radius curvature R.\ndraw(tube(p,coloredpath(scale(0.1)*unitcircle, curvaturePen)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0009_01d6882.png",
    "code": "import tube;\nimport graph3;\n\nsize(10cm,0);\ncurrentprojection=perspective(4,3,4);\nreal x(real t) {return (1/sqrt(1+0.5*t^2))*cos(2pi*t);}\nreal y(real t) {return (1/sqrt(1+0.5*t^2))*sin(2pi*t);}\nreal z(real t) {return t;}\n\npath3 p=graph(x,y,z,0,2.7,operator ..);\npath section=scale(0.2)*polygon(4);\n\n// Define an array of pen wich depends of a real t. t represent the \"reltime\" of the path3 p.\npen[] pens(real t){\n  return new pen[] {interp(blue,red,t),\n      interp(orange,yellow,t),\n      interp(green,orange,t),\n      interp(red,purple,t)};\n}\n\n// \"pen[] pens(real t)\" allows to color each nodes or segments with a real parameter (the reltime)\n// Note that all arrays of pens are convert to cyclical arrays.\ndraw(tube(p,coloredpath(section,\n                        pens,\n                        colortype=coloredNodes)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0010_02d12f0.png",
    "code": "import tube;\nimport graph;\nsize(12cm,0);\ncurrentprojection=perspective(4,3,6);\n\nreal f(real t) {return cos(2*t);}\npath g=polargraph(f,0,2pi,10,operator ..)&cycle;\npath3 p=path3(scale(20)*g);\n\ndraw(tube(p,rotate(60)*polygon(3)), 0.8*red);\ndraw(tube(shift(Z)*p,scale(0.25)*unitcircle), orange);\ndraw(shift(1.25*Z)*p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0011_0596cb6.png",
    "code": "import tube;\nimport graph3;\n\nsize(10cm,0);\ncurrentprojection=perspective(4,3,4);\nreal x(real t) {return (1/sqrt(1+0.5*t^2))*cos(2pi*t);}\nreal y(real t) {return (1/sqrt(1+0.5*t^2))*sin(2pi*t);}\nreal z(real t) {return t;}\n\npath3 p=graph(x,y,z,0,2.7,operator ..);\npath section=scale(0.2)*polygon(5);\n\n// tube.asy defines a \"colored path\".\n// The value of coloredtype may be coloredSegments or coloredNodes.\n// Here the path scale(0.2)*polygon(5) has fixed colored SEGMENTS.\ncoloredpath cp=coloredpath(section,\n                           // The array of pens become automatically cyclic.\n                           new pen[]{0.8*red, 0.8*blue, 0.8*yellow, 0.8*purple, black},\n                           colortype=coloredSegments);\n\n// Draw the tube, each SEGMENT of the section is colored.\ndraw(tube(p,cp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0012_014c786.png",
    "code": "import tube;\nimport graph3;\nsize(12cm,0);\ncurrentprojection=orthographic(4,3,2);\n\nreal x(real t) {return sin(t);}\nreal y(real t) {return cos(t);}\nreal z(real t) {return sqrt(t);}\n\npath3 p=graph(x,y,z,0,4pi,50,operator ..);\n\npath section=subpath(unitcircle,0,2);\n\npen pens(real t){\n  return interp(red,blue,t);\n}\n\n// Define a transformation wich will be applied to each section at reltime t.\ntransform T(real t){return scale(t^0.75/2);}\n\n// Combination of pens and transform:\ndraw(tube(p,coloredpath(section,pens), T));\ndraw(p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0013_08c7995.png",
    "code": "import tube;\nimport graph3;\n\nsize(10cm,0);\ncurrentprojection=perspective(4,3,4);\nreal x(real t) {return (1/sqrt(1+0.5*t^2))*cos(2pi*t);}\nreal y(real t) {return (1/sqrt(1+0.5*t^2))*sin(2pi*t);}\nreal z(real t) {return t;}\n\npath3 p=graph(x,y,z,0,2.7,operator ..);\npath section=scale(0.2)*polygon(5);\n\n// Here the path scale(0.2)*polygon(5) has colored NODES.\ncoloredpath cp=coloredpath(section,\n                           new pen[]{0.8*red, 0.8*blue, 0.8*yellow, 0.8*purple, black},\n                           colortype=coloredNodes);\n\n// Draw the tube, each NODE of the section is colored.\ndraw(tube(p,cp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0014_021db69.png",
    "code": "import tube;\nimport graph3;\n\nsize(10cm,0);\ncurrentprojection=perspective(4,3,4);\nreal x(real t) {return (1/sqrt(1+0.5*t^2))*cos(2pi*t);}\nreal y(real t) {return (1/sqrt(1+0.5*t^2))*sin(2pi*t);}\nreal z(real t) {return t;}\n\npath3 p=graph(x,y,z,0,2.7,operator ..);\npath section=scale(0.2)*polygon(5);\n\n// Define a pen wich depends of a real t. t represent the \"reltime\" of the path3 p.\npen pen(real t){\n  return interp(red,blue,1-2*abs(t-0.5));\n}\n\n// Here the section has colored segments (by default) depending to reltime.\ndraw(tube(p,coloredpath(section,pen)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0015_0597a95.png",
    "code": "import tube;\nimport graph3;\nsize(12cm,0);\ncurrentprojection=orthographic(4,3,4);\n\nreal x(real t) {return sin(t);}\nreal y(real t) {return 0.5*sin(2*t);}\n\npath g=graph(x,y,0,2pi,50,operator ..);\npath3 p=path3(scale(5)*g);\n\npen pen(real t){\n  return interp(red,blue,1-2*abs(t-0.5));\n}\n\ndraw(tube(p,coloredpath(subpath(unitcircle,1,3),pen)));\ndraw(p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0016_0042eb0.png",
    "code": "// Anneau de Borromm\u00e9e\n// Borromean rings\n\nimport tube;\nimport solids;\n\nsize(12cm,0);\ncurrentprojection=perspective((0,0,1));\n\nreal a=5, b=2, sq3=sqrt(3);\nfor (int i=0; i <= 2; ++i) {\n  real ai, bi;\n  if(i == 0) {\n    ai=a/2;\n    bi=a*sq3/2;\n  } else if(i == 1) {\n    ai=-a/2;\n    bi=a*sq3/2;\n  } else {\n    ai=0;\n    bi=a*sq3;\n  }\n  real x(real t){return a*cos(t)+ai;}\n  real y(real t){return a*sin(t)+bi;}\n  real z(real t){return b*cos(3t);}\n\n  path3 p=graph(x,y,z,0,2pi,100,operator ..)&cycle;\n\n\n  real trig(real t){return 1-2*abs(t%1-0.5);}\n  pen pens(real t) {\n    real tt=trig(t+i/3);\n    return interp(red,yellow,(tt));\n  }\n\n  draw(tube(p, coloredpath(polygon(4),pens)));\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0017_01580bf.png",
    "code": "import tube;\nimport graph3;\nsize(12cm,0);\n\ncurrentprojection=perspective(1,-1,0);\n\nreal x(real t)\n{\nreturn 41*cos(t)-18*sin(t)-83*cos(2t)-83*sin(2t)-11*cos(3t)+27*sin(3t);\n}\n\nreal y(real t)\n{\n  return 36*cos(t)+27*sin(t)-113*cos(2t)+30*sin(2t)+11*cos(3t)-27*sin(3t);\n}\n\nreal z(real t)\n{\n  return 45*sin(t)-30*cos(2t)+113*sin(2t)-11*cos(3t)+27*sin(3t);\n}\n\npath3 p=scale3(0.05)*graph(x,y,z,-pi,pi,200,operator --)&cycle;\n\npath section=scale(2,0.5)*unitcircle;\n// path section=scale(2,0.5)*polygon(4);\n// path section=scale(2)*polygon(6);\ndraw(tube(p,section), purple);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0018_0941fe8.png",
    "code": "import tube;\nsize(12cm,0);\n\ncurrentprojection=orthographic(0,0.5,1);\n\n// The tube's section used is a path (here an U);\npath section=rotate(90)*(N+W--W--E--N+E);\n\n// The tubed curve (yellow tube) has three nodes joined with cubic spline:\npath3 p=shift(20X)*scale(10,20,1)*(X..Y..X+Y..cycle);\n\n// A tube is a surface, here the tube is drawn in yellow with purple meshes.\ndraw(tube(p,section), yellow, bp+purple);\ndraw(p,red); dot(p);\n\n// The tubed curve (purple tube) has three nodes joined with linear segments:\npath3 p=scale(10,20,1)*(X--Y--(X+Y)--cycle);\n\n// Here the tube is drawn in purple with yellow meshes.\ndraw(tube(p,scale(2)*section), purple, bp+yellow);\ndraw(p,red); dot(p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0019_0569cc9.png",
    "code": "import tube;\nimport graph3;\nsize(12cm,0);\n\ncurrentprojection=perspective(1,-1,0);\n\n\npath3 p=scale3(20)*randompath3(20,false,operator--)--cycle;\n\npath section=scale(1,0.5)*unitcircle;\n// path section=polygon(6);\n// path section=scale(1,0.25)*polygon(4);\ndraw(tube(p,section), purple, bp+yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0020_01ebb40.png",
    "code": "import tube;\nimport graph3;\nimport palette;\n\nsize(12cm,0);\ncurrentprojection=perspective(1,1,1);\n\nint e=1;\nreal x(real t) {return cos(t)+2*cos(2t);}\nreal y(real t) {return sin(t)-2*sin(2t);}\nreal z(real t) {return 2*e*sin(3t);}\n\npath3 p=scale3(2)*graph(x,y,z,0,2pi,50,operator ..)&cycle;\n\npen[] pens=Rainbow(15);\npens.push(black);\nfor (int i=pens.length-2; i >= 0 ; --i)\n  pens.push(pens[i]);\n\npath sec=subpath(Circle(0,1.5,2*pens.length),0,pens.length);\ncoloredpath colorsec=coloredpath(sec, pens,colortype=coloredNodes);\ndraw(tube(p,colorsec));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0021_00eb3fc.png",
    "code": "size(6cm,0);\n\npath p = (0,0){up} .. (2cm,0){up};\npath q = (0,1cm){dir(-60)}..(1cm,-1cm)..{dir(60)}(2cm,1cm);\n\ndraw(p^^q);\ndot(intersectionpoint(p,q) , red);\ndot(intersectionpoint(p,reverse(q)) , blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0022_031b5bd.png",
    "code": "path line=(0,0)--(5cm,0);\nDefaultHead=TeXHead;\ndraw(shift(6cm,0)*line,Arrow());\ndraw(shift(6cm,-cm)*line, BeginArrow());\ndraw(shift(6cm,-2cm)*line, MidArrow());\ndraw(shift(6cm,-3cm)*line, Arrows());\n\ndraw(shift(6cm,-4cm)*line, linewidth(bp), Arrow());\ndraw(shift(6cm,-5cm)*line, linewidth(2bp), BeginArrow(5bp));\ndraw(shift(6cm,-6cm)*line, linewidth(2bp), MidArrow(5bp));\ndraw(shift(6cm,-7cm)*line, linewidth(2bp), Arrows(5bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0023_03d4633.png",
    "code": "size(0,0);\n\npair A=0, B=(3cm, 3cm), C=(6cm, 0);\n\ndraw(A..B..C,linewidth(3mm));\ndraw(A{curl 1}..B..{curl 1}C,2mm+.8red);\ndot(A--B--C);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0024_07319e4.png",
    "code": "pair O=0;\n\ndot(\"N\",O,N);\ndot(\"S\",O,S);\ndot(\"E\",O,E);\ndot(\"W\",O,W);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0025_0975949.png",
    "code": "size(0,0);\n\npair A=0, B=(3cm,5cm), C=(6cm,0);\ndefaultpen(1mm);\n\ndraw(A..B..C);\ndraw(A.. tension 10 and 1 ..B.. tension 1 and 10 ..C,grey);\ndraw(A.. tension 1 and 10 ..B.. tension 10 and 1 ..C,.8red);\ndraw(A.. tension 2 and 1 ..B.. tension 1 and 2 ..C,blue+grey);\ndot(A--B--C,linewidth(6bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0026_04f2e50.png",
    "code": "label(rotate(45) * scale(5) * \"\\textbf{Hello}\");\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0027_0228ea9.png",
    "code": "size(10cm,0);\n\npath apath=(0,0)..(1,1)..(2,.5){dir(0)};\nreal l=arclength(apath);\nreal step=l/15;\n\npath arcpath(path apath, real t1, real t2)\n{\n  return subpath(apath, arctime(apath,t1), arctime(apath,t2));\n}\n\nfor(real i=0; i<l-step; i+=step)\n  draw(arcpath(apath,i,i+step),4bp+(i/l*red+(l-i)/l*blue),PenMargins);\ndraw(apath);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0028_04ff54b.png",
    "code": "size(6cm,6cm);\n\npair A, B, C;\nA=(0,0); B=(1,0); C=(0,1);\ndraw(A--B--C--cycle);\ndraw (midpoint(A--B) -- C);\ndraw (B+0.5*(C-B) -- A);\ndraw (interp(A,C,0.5) -- B);\ndot(A/3 + B/3 + C/3);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0029_07fdf68.png",
    "code": "size(10cm,0);\n\npair[] self_intersection(path p, int n=100)\n{\n  pair[] rpair=new pair[];\n  path tpath;\n  real [] tpoint;\n  real l=length(p);\n  int i=1;\n  for (real t1=0; t1<l ; t1+=l/n)\n    {\n      for (real t2=t1+2*l/n; t2<l; t2+=l/n)\n        {\n          tpoint=intersect(subpath(p,t1,t1+l/n),\n                           subpath(p,t2,t2+l/n));\n          if (tpoint.length == 2)\n            {\n              rpair[i]=point(subpath(p,t1,t1+l/n),tpoint[0]);\n              ++i;\n            }\n        }\n    }\n  return rpair;\n}\n\nvoid dott(pair[] pt, pen p)\n{\n  for (int i=1 ; i<pt.length; ++i)\n    {\n      dot(pt[i], p);\n    }\n}\n\nsrand(rand());\npath p = randompath(15);\n\npair[] inter=self_intersection(p);\ndott(inter, .8red);\ndraw(p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0030_08eb4d3.png",
    "code": "size(16cm,0);\n\npath[] P=texpath(\"$\\displaystyle\\int_{-\\infty}^{+\\infty}e^{-\\alpha x^2}\\,dx=\n\\sqrt{\\frac{\\pi}{\\alpha}}$\");\npair m=min(P), M=max(P);\n\naxialshade(P,yellow,m,red,(m.x,M.y));\ndraw(P,0.5*blue);\nshipout(bbox(3mm,Fill));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0031_0173144.png",
    "code": "size(6cm,3cm,false);\n\ndraw(unitsquare);\ndot((0,0)--(1,1)--(0,1)--(1,0));\ndraw((0,0)--(1,1));\ndraw((1,0)--(0,1));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0032_023a1ee.png",
    "code": "DefaultHead=TeXHead;\n\npath line=(0,0)..(2.5cm,2.5cm)..(5cm,0);\ndraw(line,Arrow());\ndraw(shift(0,-2cm)*line,BeginArrow());\ndraw(shift(0,-4cm)*line,MidArrow());\ndraw(shift(0,-6cm)*line,Arrows());\n\ndraw(shift(6cm,0)*line,3bp+.8red,Arrow(5bp));\ndraw(shift(6cm,-2cm)*line,3bp+.8red,BeginArrow(5bp));\ndraw(shift(6cm,-4cm)*line,3bp+.8red,MidArrow(5bp));\ndraw(shift(6cm,-6cm)*line,3bp+.8red,Arrows(5bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0033_093e8d6.png",
    "code": "size(0,0);\n\npath pt1=scale(2cm)*unitcircle;\npath pt2=scale(1cm)*unitcircle;\n\nfilldraw(pt1^^pt2,yellow+.9white);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0034_030c468.png",
    "code": "size(6cm,0);\npath line1=(0,0)--(1,0);\npath line2=(0,0)--(1,1);\npair bissec=dir(line1,line2);\n\ndraw(line1); draw(line2);\ndot(bissec,linewidth(3bp));\ndraw(-.5bissec--bissec,dotted);\ndot(\"$A$\",(0,0),-bissec);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0035_08dcac0.png",
    "code": "size(6cm,0);\n\nimport graph;\n\npath PerfectCircle=Circle((0,0),1);\n\ndraw(PerfectCircle,linewidth(2mm));\ndot(PerfectCircle,.8red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0036_036fbe0.png",
    "code": "label(scale(6)*\"\\textbf{Cancel}\");\nlayer();\ndraw((min(currentpicture).x,0)--(max(currentpicture).x,0), 6bp + red * 0.8);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0037_03cd017.png",
    "code": "size(6cm,0);\n\ndefaultpen(2mm+linecap(0));\n\npath p = (0,0){up} .. (2cm,0){up};\npath q = (0,1cm){dir(-60)}..(1cm,-1cm)..{dir(60)}(2cm,1cm);\n\nreal[] ipq=intersect(p,q);\nreal[] iprq=intersect(p,reverse(q));\n\ndraw(subpath(p, 0, ipq[0]), .8red);\ndraw(subpath(p, ipq[0], iprq[0]), .5red);\ndraw(subpath(p, iprq[0], length(p)), .3red);\n\ndraw(subpath(reverse(q), 0, iprq[1]), .8green);\ndraw(subpath(reverse(q), iprq[1], length(q)-ipq[1]), .5green);\ndraw(subpath(reverse(q), length(q)-ipq[1], length(q)), .3green);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0038_0698ad2.png",
    "code": "size(8cm,0);\nimport palette;\n\nreal[][] v={{1,2},{3,4}};\npen[] Palette=Rainbow();\n\nlatticeshade(box((0,0),(1,1)),palette(v,Palette));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0039_08295f5.png",
    "code": "size(0,0);\npair A, B, C;\nA=(0,0); B=(4cm,0); C=(0,4cm);\n\ndraw(A--B--C--cycle);\nfilldraw(shift(A)*scale(6bp)*unitcircle, white);\nfilldraw(shift(B)*scale(6bp)*unitcircle, white);\nfilldraw(shift(C)*scale(6bp)*unitcircle, white);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0040_07e8fbf.png",
    "code": "size(5cm,0);\npair A, B, C, D;\nA=(0,0);\nB=(2,0);\nC=(4,0);\nD=(4,2);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0041_0675fb3.png",
    "code": "size(0,0);\n\npath p= scale(3cm)*unitcircle;\n\ndraw(p,red+1mm);\ndraw(shift(1mm,2mm)*p);\ndraw(shift(2*(1mm,2mm))*p);\ndraw(shift(3*(1mm,2mm))*p);\ndraw(shift(4*(1mm,2mm))*p);\ndraw(shift(5*(1mm,2mm))*p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0042_08f17f3.png",
    "code": "size(6cm,6cm);\n\npair A=(0,0), B=(1,0), C=(0,1);\ndraw (A--B--C);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0043_03f6a2a.png",
    "code": "size(6cm,0);\n\npath cle=unitcircle;\n\ndraw(cle,red);\ndraw(xscale(2)*cle);\ndraw(yscale(2)*cle);\ndraw(scale(2)*cle,blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0044_0007447.png",
    "code": "size(5cm,0);\npath line=(0,0)--(5,0);\n\ndraw(line,Arrow(20bp,position=.75));\ndraw(shift(0,-2)*line,Arrow(20bp,40,.75,filltype=NoFill));\n\nposition pos=BeginPoint;\npos.position=.75;\ndraw(shift(0,-4)*line,BeginArrow(20bp,pos));\ndraw(shift(0,-6)*line,BeginArrow(20bp,40,pos,filltype=NoFill));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0045_0687e4d.png",
    "code": "path line=(0,0)--(5cm,0);\n\ndraw(line,linewidth(5bp),Arrow);\ndraw(shift(0,-2cm)*line,linewidth(5bp),Arrow(30bp,10));\ndraw(shift(0,-5cm)*line,linewidth(30bp),Arrow(20bp,50));\ndraw(shift(0,-8cm)*line,linewidth(10bp),Arrow(20bp,50,filltype=NoFill));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0046_0773f94.png",
    "code": "// This file was compiled with this unix command: LC_NUMERIC=\"french\" asy\nsize(0,0);\ntexpreamble(\"\\usepackage[frenchb]{babel}\");\n\npair x=0;\n\nx+=(0,-1cm);\nlabel(format(\"$x=%f$\", 666666.666), x, E);\nx+=(0,-1cm);\nlabel(format(\"$x=%f$\", pi), x, E);\nx+=(0,-1cm);\nlabel(format(\"$x=\\nombre{%f}$\", 666666.666), x, E);\nx+=(0,-1cm);\nlabel(format(\"$x=\\nombre{%f}$\", pi), x, E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0047_055e021.png",
    "code": "size(6cm, 6cm);\npair A=(0,0), B=(1,0), C=(0,1);\ndraw (A--B--C--cycle);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0048_072bc22.png",
    "code": "size(8cm,0);\n\npath curv=(0,0)..(1,1)..(1.5,-1)..(3,0);\npair A=(0,-1), B=(3,.75);\n\ndefaultpen(1mm);\ndraw(curv);\ndraw(reflect(A,B)*curv,.8red);\ndraw(A--B,grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0049_003bf78.png",
    "code": "size(10cm,0);\npair A, B, C, D;\nA=(0,0);\nB=(2,0);\nC=(4,0);\nD=(4,2);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0050_077f27d.png",
    "code": "size(0,0);\n\npair O=(2cm,2cm);\npath cle=shift(O)*scale(2cm)*unitcircle;\npair M=point(cle,.6);\n\ndot(\"$O$\",O,SW);\ndot(\"$M$\",M,unit(M-O));\n\ndraw(cle);\ndraw((0,0)--(0,4cm),Arrow);\ndraw((0,0)--(4cm,0),Arrow);\n\ndraw(Label(\"$X_M$\",position=EndPoint),M--(xpart(M),0),dotted);\ndraw(Label(\"$Y_M$\",position=EndPoint),M--(0,ypart(M)),dotted);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0051_05ff8b7.png",
    "code": "size(8cm,0);\n\npen[][] p={{rgb(white),rgb(grey),rgb(black)},\n    {red,green,blue},\n    {cyan,magenta,yellow}};\n\nlatticeshade(unitsquare,p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0052_066f0eb.png",
    "code": "size(8cm,0);\npair A=(0,0), B=(0,1), C=(1,0), D=(1,1);\n\ndraw(A..B..C..D);\ndot(A);dot(B);dot(C);dot(D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0053_033890b.png",
    "code": "size(0,0);\n\ndefaultpen(linewidth(1bp));\nreal u=4cm;\npair A, B, C, D, E;\npath p, q, r;\n\nA = u*up;\np = interp(A, rotate(72)*A, -.2) -- interp(A, rotate(72)*A,1.2);\nfor(int i=0; i<=5; ++i)\n  draw(rotate(72i)*p);\n\nB = midpoint(A--rotate(72)*A );\nC = .8*B;\n\np = B --- C .. (rotate(2*72)*C){right};\n// On allonge le chemin p\np = (point(p,0) - 4mm*dir(p,0.001))\n  --\n  point(p,0)\n  & p &\n  point(p,2)\n  --\n  (point(p,2) + 4mm*dir(p,2));\n\nE = intersectionpoint(p, rotate(72)*p);\nq = firstcut(p,shift(E)*scale(2mm)*unitcircle).before;\nr = lastcut(p,shift(E)*scale(2mm)*unitcircle).after;\n\nfor(int i=0; i<=4; ++i)\n  {\n    draw(rotate(72i)*q);\n    draw( rotate(72i)*r);\n    draw(rotate(72i)*A,linewidth(4bp));\n    draw(rotate(72i)*B,linewidth(4bp));\n    draw(rotate(72i)*C,linewidth(4bp));\n  }\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0054_06651c8.png",
    "code": "size(6cm,0);\n\n//Return Circle AB diameter\npath circle(pair A, pair B)\n{\n  return shift(midpoint(A--B))*scale(abs(A-B)/2)*unitcircle;\n}\n\npair A=(0,0), B=(1,0);\n\ndraw(circle(A,B));\ndot(A--B);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0055_034fcaf.png",
    "code": "label(scale(5)*\"\\textbf{Cancel}\");\ndraw((min(currentpicture).x,0)--(max(currentpicture).x,0), 6bp + red * 0.8);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0056_062d50d.png",
    "code": "size(6cm,0);\npair A=0, B=(1,0), C=(2,2);;\n\ndraw(A--B--C--cycle);\ndot(\"$A$\",A,dir(C--A,B--A));\ndot(\"$B$\",B,dir(C--B,A--B));\ndot(\"$C$\",C,dir(A--C,B--C));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0057_07d8847.png",
    "code": "path line=(0,0)--(5cm,0);\n\ndraw(line,Arrow(20bp,filltype=NoFill));\ndraw(shift(0,-cm)*line,Arrow(20bp,filltype=FillDraw(.8red)));\ndraw(shift(0,-2cm)*line,Arrow(20bp,filltype=Fill(.8red)));\ndraw(shift(0,-3cm)*line,Arrows(filltype=FillDraw(-10,10,.8red)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0058_05ede19.png",
    "code": "size(0,0);\n\npath pt1=scale(2cm)*unitcircle;\npath pt2=scale(1cm)*unitcircle;\n\nfilldraw(pt1^^pt2,evenodd+yellow+.9white);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0059_01a347f.png",
    "code": "size(8cm,0);\n\npair A,B,C;\nA=(0,0);B=(1,0);C=(2,0);\ndraw(A,8bp+black);\ndraw(B,8bp+blue);\ndraw(C,linewidth(8bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0060_0264203.png",
    "code": "// Author: John Bowman\nsize(10cm,0);\n\nreal r=1;\nreal R=3.8;\n\nint step=30;\npath p=arc(0,r,0,step);\npath P=arc(0,R,step,0);\nfor(int h=0; h < 360; h += step) {\n  transform t=rotate(90-h);\n  tensorshade(t*p--t*P--cycle,\n              new pen[] {white,white,hsv(h-step,1,1),hsv(h,1,1)});\n}\n\nfor(int h=0; h < 360; h += 30) {\n  pair v=R*dir(90-h);\n  draw(Label(string(h)+\"$^\\circ$\",EndPoint),(v--1.05v));\n}\n\ndraw(circle(0,r));\ndraw(circle(0,R));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0061_089d90d.png",
    "code": "size(10cm,0);\n\npath apath=(0,0)..(1,1)..(2,.5){dir(0)};\nreal l=length(apath);\nreal step=l/15;\n\nfor(real i=0; i<l-step; i+=step)\n  draw(subpath(apath,i,i+step),4bp+(i/l*red+(l-i)/l*blue),PenMargins);\ndraw(apath);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0062_08e42a5.png",
    "code": "size(6cm,0);\n\npair A=(0,0), B=(1,0), C=(0,1);\ndraw(A--B--C--cycle);\ndraw(A--B,linewidth(4bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0063_03fbfe8.png",
    "code": "size(6cm,0);\npath [] c;\n\nc[1] = xscale(2)*unitcircle;\nc[2] = shift((0,1))*c[1];\ndraw(c[1]^^c[2]);\ndraw(buildcycle(c[1],c[2]), .8red+4bp);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0064_08e843d.png",
    "code": "size(0,0);\n\npair A=0, B=(3cm,5cm), C=(6cm,0);\ndefaultpen(1mm);\n\ndraw(A..B..C);\ndraw(A.. tension 5 and 3 ..B.. tension 1 and 5 ..C,grey);\ndraw(A.. tension 5 and 1 ..B.. tension 3 and 5 ..C,.8red);\ndot(A--B--C,linewidth(6bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0065_009e4c4.png",
    "code": "defaultpen(fontsize(26pt));\n\ndot(Label(\"$A$\"),(0,0),NE);\ndot(Label(\"$B$\"),(2cm,0),NE+N);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0066_01ccb7b.png",
    "code": "size(0,0);\n\npair A=0, B=(3cm,4cm), C=(6cm,0);\n\ndraw(A..B..C);\ndraw(A{curl 0}..B..{curl 0}C,1mm+red+grey);\ndraw(A{curl 5}..B..{curl 0}C,1mm+green+grey);\ndraw(A{curl 10}..B..{curl 0}C,1mm+blue+grey);\ndraw(A{curl 10}..B..{curl 10}C,1mm+yellow+grey);\ndot(A--B--C);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0067_060a062.png",
    "code": "size(10cm, 0);\n\npath cle=unitcircle;\n\ndraw((-1.5, 0)--(2.5, 0), linewidth(10mm));\nfilldraw(cle, red+opacity(.5));\nfilldraw(shift((1, 0))*cle, blue+opacity(.5));\n\nshipout(format=\"pdf\");\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0068_08d12ac.png",
    "code": "size(6cm,0);\n\npath pth1=(0,-0.5)--(2,1);\npath pth2=(0,0.5)--(2,-1);\n\ndraw(pth1^^pth2);\n\ndot(intersectionpoint(pth1,pth2),red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0069_00da4e6.png",
    "code": "path line=(0,0)..(2.5cm,2.5cm)..(5cm,0);\ndraw(line,ArcArrow);\ndraw(shift(0,-2cm)*line,BeginArcArrow);\ndraw(shift(0,-4cm)*line,MidArcArrow);\ndraw(shift(0,-6cm)*line,ArcArrows);\n\ndraw(shift(6cm,0)*line,3bp+.8red,ArcArrow(20bp));\ndraw(shift(6cm,-2cm)*line,3bp+.8red,BeginArcArrow(20bp));\ndraw(shift(6cm,-4cm)*line,3bp+.8red,MidArcArrow(20bp));\ndraw(shift(6cm,-6cm)*line,3bp+.8red,ArcArrows(20bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0070_029719d.png",
    "code": "size(0,0);\n\npath pt1=scale(2cm)*unitcircle;\npath pt2=scale(1cm)*unitcircle;\npath pt3=shift(0,.5cm)*pt2;\n\nfilldraw(pt1^^pt2^^pt3,evenodd+yellow+.9white);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0071_05fa322.png",
    "code": "size(6cm,0);\npair A=0, B=(1,0), C=(1,1);\n\ndraw(\"$1$\",A--B);\ndraw(\"$1$\",B--C);\n\n// draw(rotate(dir(C--A))*\"$\\sqrt{2}$\",C--A);\ndraw(Label(\"$\\sqrt{2}$\",Rotate(-dir(C--A))),C--A);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0072_088e8e8.png",
    "code": "label(scale(15)*Label(\"$\\pi$\"), (0,0));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0073_0587558.png",
    "code": "// Author: John Bowman\nsize(0, 100);\nreal margin=2mm;\npair z1=(0,1);\npair z0=(0,0);\n\nobject label1=draw(\"small box\",box,z1,margin);\nobject label0=draw(\"LARGE ELLIPSE\",ellipse,z0,margin);\n\nadd(new void(frame f, transform t) {\n    draw(f,point(label1,S,t)--point(label0,N,t));\n  });\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0074_08f6f7b.png",
    "code": "unitsize(cm);\npath line=(0,0)--(6,0);\n\ndraw(line,solid);\ndraw(shift(0,-1)*line,dotted);\ndraw(shift(0,-2)*line,dashed);\ndraw(shift(0,-3)*line,longdashed);\ndraw(shift(0,-4)*line,dashdotted);\ndraw(shift(0,-5)*line,longdashdotted);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0075_044c558.png",
    "code": "pen[][] p={{rgb(black),rgb(black)}, {rgb(red),rgb(green)}};\n\nlatticeshade((0,0)--(0,6cm)--(6cm,0)--cycle,p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0076_07c4893.png",
    "code": "size(6cm,0);\nimport roundedpath;\n\ndraw(roundedpath(unitsquare,.4));\ndot(roundedpath(unitsquare,.4),red);\ndraw(unitsquare);\ndot(unitsquare);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0077_06b783c.png",
    "code": "size(5cm, 3cm);\npair A, B, C, D;\nA=(0,0);\nB=(2,0);\nC=(4,0);\nD=(4,2);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0078_06936fc.png",
    "code": "size(6cm,0);\n\npath cle=scale(2)*unitcircle;\n\nradialshade(scale(2)*cle, white, (0,0), 2, yellow, (0,0), 4);\nradialshade(cle, white, (1,.5), 0, 0.8*blue, (0,0), 2);\n\nfor(real i=0; i<=length(cle); i+=.2)\n  draw(point(cle,i)--(-2*I*dir(cle,i)+point(cle,i)),p=2mm+yellow+linecap(0));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0079_00f3f1e.png",
    "code": "// From Asympote's FAQ\nsize(10cm,0);\n\npath p=(0,0)--(1,0);\n\nframe object;\ndraw(object, scale(8cm)*p);\n\nadd(object);\nadd(object, (0, -40));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0080_03600b7.png",
    "code": "size(0,0);\n\npair [] P, Q, R, S;\nreal u=2cm;\n\nfor (int i=0; i<=4; ++i)\n  P[i] = rotate(i*360/5)*(0,-u);\n\nP[5] = P[0];\nfor (int i=0; i<=4; ++i)\n  Q[i] = 3*midpoint(P[i]--P[i+1]);\n\nQ[5] = Q[0];\nfor (int i=0; i<=4; ++i)\n  R[i] = 1/3*( Q[i] + Q[i+1] + P[i+1] );\n\nR[5] = R[0];\nfor (int i=0; i<=5; ++i)\n  S[i] = 1.5*Q[i];\n\nfill(shift(-abs(S[0]),-abs(S[0]))*scale(2*abs(S[0]))*unitsquare,.2grey);\n\nradialshade(scale(abs(S[0]))*unitcircle,lightgrey,(0,0),abs(S[0]),\n            black,(0,0),abs(.85*midpoint(S[0]--S[1])));\n\nP[6]=P[1];\nfor (int i=0; i<=4; ++i)\n  {\n    radialshade(S[i]--Q[i]--R[i]--Q[i+1]--S[i+1]--cycle,\n                lightgrey,(0,0),abs(R[i]),\n                black,(0,0),abs(S[i]));\n    radialshade(R[i]--Q[i+1]--R[i+1]--P[i+2]--P[i+1]--cycle,\n                .8red,(0,0),sqrt(1-(2-2cos(pi/5))/4)*u,\n                black,(0,0),abs(Q[i+1]));\n  }\n\nfor (real i=1; i>0; i-=.05)\n  fill(rotate(90*(1-i))*scale(i)*(P[0]--P[1]--P[2]--P[3]--P[4]--cycle),\n       (1-i)*red);\n\npen p=linewidth(1pt);\nfor (int i=0; i<=4; ++i)\n  {\n    draw(P[i]   -- P[i+1],p);\n    draw(P[i+1] -- R[i],p);\n    draw(Q[i]   -- R[i],p);\n    draw(R[i]   -- Q[i+1],p);\n    draw(Q[i]   -- S[i],p);\n    draw(S[i]   -- S[i+1],p);\n  }\n\nshipout(bbox(0,black+4mm));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0081_046293b.png",
    "code": "size(8cm,0);\n\npath g = (0,0)--(1,0);\ndraw(g,Arrow(Relative(0.75)));\nadd(arrow(reverse(g), invisible, FillDraw(green,red), Relative(0.75)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0082_04051cd.png",
    "code": "size(0,0);\npair O=0;\n\ndefaultpen(linewidth(2mm));\ndraw(arc(O,4cm,0,60), .8red, BeginPenMargin);\ndraw(arc(O,4cm,60,120), .7green, PenMargins);\ndraw(arc(O,-4cm,0,120), .7blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0083_06bee82.png",
    "code": "size(6cm,0);\n\nimport math;\n\npair A=(0,0), B=(1,.5);\npath cle=shift(1.75,2.5)*unitcircle;\npair pt, ptp;\n\npair project(pair pt, pair A, pair B)\n  {\n    return extension(pt,pt-dir(90+degrees(A-B,false)),A,B);\n  }\n\ndraw(A--B);\ndraw(cle);\n\nfor (real t=0; t<=4; t+=.01)\n  {\n    pt=point(cle,t);\n    ptp=project(pt,A,B);\n    dot(ptp, red);\n    draw(pt--ptp,dotted);\n\n  }\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0084_02f85a2.png",
    "code": "void enclose(picture pic=currentpicture, envelope e,\n             Label[] L=new Label[],\n             real xmargin=0, real ymargin=xmargin, pen p=currentpen,\n             filltype filltype=NoFill, bool above=true)\n{\n\n  real H;\n  real[] h;\n  pic.add(new void (frame f, transform t) {\n      frame[] d=new frame[];\n      for (int i=0; i<L.length; ++i) {\n        d[i]=newframe;\n        Label LL=L[i].copy();\n        add(d[i],t,LL);\n        add(f,d[i]);\n        h[i]=ypart(max(d[i])-min(d[i]));\n        if(H < h[i]) H=h[i];\n      }\n      for (int i=0; i<L.length; ++i) {\n        real emy=(H-h[i])/2;\n        e(f,d[i],xmargin,ymargin+emy,p,filltype,above);\n      }\n    });\n}\n\nvoid box(picture pic=currentpicture, Label[] L=new Label[],\n         real xmargin=0, real ymargin=xmargin, pen p=currentpen,\n         filltype filltype=NoFill, bool above=true)\n{\n  enclose(pic,box,L,xmargin,ymargin,p,filltype,above);\n}\n\nbox(new Label[] {\n    Label(\"\\begin{minipage}{3cm}Some text some text some text.\\end{minipage}\",(2.2cm,0)),\n    Label(\"Hello.\",0),\n    Label(\"\\begin{minipage}{3cm}Some text some text some\ntext some text some text some text some text.\\end{minipage}\",(5.4cm,0)),\n    Label(\"Bye.\\rule{0pt}{1.5cm}\",(1cm,-3cm))\n      });\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0085_027dc24.png",
    "code": "path line=(0,0)--(5cm,0);\nDefaultHead=HookHead;\ndraw(shift(6cm,0)*line,Arrow());\ndraw(shift(6cm,-cm)*line, BeginArrow());\ndraw(shift(6cm,-2cm)*line, MidArrow());\ndraw(shift(6cm,-3cm)*line, Arrows());\n\ndraw(shift(6cm,-4cm)*line, linewidth(3bp), Arrow(20bp));\ndraw(shift(6cm,-5cm)*line, linewidth(3bp), BeginArrow(20bp));\ndraw(shift(6cm,-6cm)*line, linewidth(3bp), MidArrow(20bp));\ndraw(shift(6cm,-7cm)*line, linewidth(3bp), Arrows(20bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0086_007fbaf.png",
    "code": "size(0,0);\n\npair A=0, B=(6cm,0);\n\ndraw(A{dir(90)}..B{dir(180)});\ndot(A{dir(90)}..B{dir(180)});\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0087_08e38d2.png",
    "code": "size(10cm,0);\n\npair O=0;\ndot(\"N\",O,10N);\ndraw(\"S\",O,10S);\ndraw(\"E\",O,10E);\ndraw(\"W\",O,10W);\n\ndraw(\"NE\",O,5NE);\ndraw(\"SE\",O,5SE);\ndraw(\"NW\",O,5NW);\ndraw(\"SW\",O,5SW);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0088_00b7b7b.png",
    "code": "size(0,0);\n\npath cle=scale(4cm)*unitcircle;\n\ndraw(cle);\n\nfor(real i=0; i<=length(cle); i+=.2)\n  {\n    dot(point(cle,i));\n    draw((0,0)--point(cle,i),dotted);\n  }\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0089_02363b7.png",
    "code": "dot(Label(\"$A$\", fontsize(26pt)), (0,0), NE);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0090_0331a51.png",
    "code": "size(10cm,0);\n\ntexpreamble(\"\\usepackage{amsmath}\n             \\DeclareMathOperator{\\e}{e}\");\n\npair A=2*expi(pi/3);\npair B=expi(pi/6);\npair C=A*B;\npair D=C-B;\npair Bp=2*B;\npair E=I*D;\n\ndraw((0,-2)--(0,2.5));\ndraw((0,0)--(1,0),linewidth(1mm),Arrow(2mm));\ndraw((-3,0)--(3.5,0));\ndraw((0,0)--(0,1),linewidth(1mm),Arrow(2mm));\n\ndot(Label(\"$A(z_a=2\\e^{i\\frac{\\pi}{3}})$\"),A);\ndot(Label(\"$B(z_a=\\e^{i\\frac{\\pi}{6}})$\"),B);\ndot(Label(\"$B'(z_{b'}=2z_b)$\"),Bp);\ndot(Label(\"$\\overline{A}(\\overline{z_a})$\"),conj(A));\ndot(Label(\"$C(z_c=z_a z_c)$\"),C,NE);\ndot(Label(\"$D(z_d=z_c-z_d)$\"),D,NW);\ndot(Label(\"$E(z_e=iz_d)$\"),E,NW);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0091_02c56d5.png",
    "code": "size(6cm,0);\n\npair A=(0,0), B=(1,0), C=(0,1);\ndraw(A--B--C--cycle);\ndraw(A--B,(red+green));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0092_0524473.png",
    "code": "pair A, B, C, D;\nA=(0, 0);\nB=(3cm, 0);\nC=(6cm, 0);\nD=(6cm, 4cm);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0093_09809ba.png",
    "code": "fill((0,0)--(0,6cm)--(6cm,0)--cycle, gray);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0094_0252ec1.png",
    "code": "size(6cm,0);\n\ndraw((-.5,0)--(1,0));\ndraw((0,-.5)--(0,1));\ndraw((0,0)--(.75,0),linewidth(1mm),Arrow(3mm));\ndraw((0,0)--(0,.75),linewidth(1mm),Arrow(3mm));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0095_01b9aa6.png",
    "code": "unitsize(1cm);\npair A, B, C, D;\nA=(0, 0);\nB=(3, 0);\nC=(6, 0);\nD=(6, 4);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0096_02530ed.png",
    "code": "size(0,6cm);\n\ntexpreamble(\"\\usepackage{amsmath}\n             \\DeclareMathOperator{\\e}{e}\");\n\npair A=2*expi(pi/3);\n\ndraw((0,-2)--(0,2.5));\ndraw((0,0)--(1,0),linewidth(1mm),Arrow(2mm));\ndraw((0,0)--(3.5,0));\ndraw((0,0)--(0,1),linewidth(1mm),Arrow(2mm));\n\ndot(Label(\"$A(z_a=2\\e^{i\\frac{\\pi}{3}})$\"),A,NE);\nlabel(format(\"$\\vert z_a\\vert=%.1f$\",length(A)),(.5,-1),E);\nlabel(format(\"$\\arg(z_a)\\simeq%.4f$\",angle(A)),(.5,-2),E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0097_086191d.png",
    "code": "size(6cm,0);\n\npair A=(0,0), B=(1,0), C=(0,1);\n\ndraw(A--B,.8white+6bp);\ndraw(A--C,.6white+6bp);\ndraw(B--C,.4white+6bp);\n\ndraw(A--B--C--cycle,yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0098_01a953d.png",
    "code": "size(0,0);\n\npath cle=scale(4cm)*unitcircle;\n\ndraw(cle);\n\nfor(real i=0; i<=length(cle); i+=.2)\n  draw(point(cle,i)--2cm*dir(cle,i)+point(cle,i),Arrow,p=i/length(cle)*red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0099_08568a1.png",
    "code": "size(6cm, 6cm);\n\ndot(Label(\"$A$\"),(0,0),S);\ndraw(E--W,invisible);\ndraw(N--S,invisible);\n\nshipout(bbox());\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0100_0667caf.png",
    "code": "size(0,0);\n\npair A=0, B=(6cm,0);\n\ndraw(A{N}..B{N});\ndot(A{N}..B{N});\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0101_0723e02.png",
    "code": "pair O=0;\nlabelmargin=2;\n\ndot(\"N\",O,N);\ndot(\"S\",O,S);\ndot(\"E\",O,E);\ndot(\"W\",O,W);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0102_016d74d.png",
    "code": "import graph;\nsize(8cm,0);\n\npath a = polargraph(new real(real t){return t;}, 0, 3pi, operator ..);\npath b = polargraph(new real(real t){return 2t;}, 0, 3.75pi, operator ..);\n\nreal sharp=40;\npath c=relpoint(a,1){relpoint(a,1)-postcontrol(a,length(a)-1)}..{dir(sharp)}relpoint(b,1);\n\nfill(a..c..reverse(b)&cycle,0.8*red);\nshipout(bbox(2mm, Fill(0.15*blue)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0103_01eb24e.png",
    "code": "path line=(0,0)--(5cm,0);\nDefaultHead=SimpleHead;\ndraw(shift(6cm,0)*line,Arrow());\ndraw(shift(6cm,-cm)*line, BeginArrow());\ndraw(shift(6cm,-2cm)*line, MidArrow());\ndraw(shift(6cm,-3cm)*line, Arrows());\n\ndraw(shift(6cm,-4cm)*line, linewidth(3bp), Arrow(20bp));\ndraw(shift(6cm,-5cm)*line, linewidth(3bp), BeginArrow(20bp));\ndraw(shift(6cm,-6cm)*line, linewidth(3bp), MidArrow(20bp));\ndraw(shift(6cm,-7cm)*line, linewidth(3bp), Arrows(20bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0104_066c171.png",
    "code": "unitsize(8cm);\n\npath g=(0,0)--(1,0);\ndraw(g,Arrow(Relative(0.45)));\nadd(arrow(g,Relative(0.55)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0105_01e5fc0.png",
    "code": "size(8cm,0);\n\npicture pic;\npen [] P={.8red,.7green,blue+.5grey,yellow+.6grey};\n\nfill(scale(10)*unitcircle,.2blue);\n\nfor (int i = 0; i <= 3; ++i)\n  draw(pic, arc((0,0),10,i*90,(i+1)*90), P[i]);\n\nfor (real i = 1; i <= 10; i+=.05)\n  add(rotate(90*i)*scale(1/i)*pic);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0106_02cc6e4.png",
    "code": "// From Asympote's FAQ\nsize(10cm,0);\n\npath p=(0,0)--(1,0);\npicture object;\ndraw(object,scale(8cm)*p);\n\nadd(object);\nadd(object,(0,-40)); // Adds truesize object to currentpicture\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0107_06af345.png",
    "code": "size(0,0);\n\npair [] P, Q, R, S;\nreal u=2cm;\n\nfor (int i=0; i<=4; ++i)\n  P[i] = rotate(i*360/5)*(0,-u);\n\nP[5] = P[0];\nfor (int i=0; i<=4; ++i)\n  Q[i] = 3*midpoint(P[i]--P[i+1]);\n\nQ[5] = Q[0];\nfor (int i=0; i<=4; ++i)\n  R[i] = 1/3*( Q[i] + Q[i+1] + P[i+1] );\n\nR[5] = R[0];\nfor (int i=0; i<=5; ++i)\n  S[i] = 1.5*Q[i];\n\nfor (int i=0; i<=4; ++i)\n  {\n    draw(P[i]   -- P[i+1]);\n    draw(P[i+1] -- R[i]);\n    draw(Q[i]   -- R[i]);\n    draw(R[i]   -- Q[i+1]);\n    draw(Q[i]   -- S[i]);\n    draw(S[i]   -- S[i+1]);\n  }\n\ndraw(P[2] -- P[3] -- P[4] -- P[0] -- P[1] --\n     R[0] -- Q[0] -- R[4] -- Q[4] -- R[3]\n     -- Q[3] -- R[2] -- Q[2] --\n     S[2] -- S[3] -- S[4] -- S[0] -- S[1] --\n     Q[1] -- R[1] -- cycle,\n     linewidth(2bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0108_08cee0c.png",
    "code": "size(10cm,2.5cm);\npair A, B, C, D;\nA=(0,0);\nB=(2,0);\nC=(4,0);\nD=(4,2);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0109_0343e45.png",
    "code": "size(0,0);\n\npath cle=scale(4cm)*reverse(unitcircle);\n\ndraw(cle);\n\nfor(real i=0; i<=length(cle); i+=.2)\n  draw(point(cle,i)--(1cm*I*dir(cle,i))+point(cle,i),Arrow,p=i/length(cle)*red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0110_01a15b8.png",
    "code": "pen[][] p={{rgb(black)}, {rgb(.8red)}};\n\nlatticeshade((0,0)--(0,6cm)--(6cm,0)--cycle, p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0111_0984275.png",
    "code": "size(0,0);\n\npair A=0, B=(6cm,0);\n\ndraw(A{N}..B);\ndot(A{N}..B);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0112_0361c35.png",
    "code": "size(6cm,0);\ndefaultpen(2mm+linecap(0));\n\npath p = (0,0){up} .. (2cm,0){up};\npath q = (0,1cm){dir(-60)}..(1cm,-1cm)..{dir(60)}(2cm,1cm);\n\n\ndraw(firstcut(p,q).before, .8red);\ndraw(firstcut(p,q).after, .8blue);\n\ndraw(lastcut(q,p).before, .8green);\ndraw(lastcut(q,p).after, .8yellow);\n\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0113_0898c71.png",
    "code": "unitsize(1cm);\npath line=(0,0)--(6,0);\npen my_pen=linetype(\"24 8 8 8\");\n\ndraw(line,linetype(\"24 8 8 8\"));\ndraw(shift(0,-1)*line,my_pen+.8red);\ndraw(shift(0,-2)*line,my_pen+.7green+4bp);\ndraw(shift(0,-3)*line,linetype(\"24 8 8 8\",false)+.7blue+4bp);\ndraw(shift(0,-4)*line,linetype(\"24 8 8 8\",true,false)+4bp);\ndraw(shift(0,-5)*line,linetype(\"24 8 8 8\",false,false)+.5red+blue+4bp);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0114_053b252.png",
    "code": "size(0,0);\npair A=0;\ndot(A);\n\narrow(\"1\",A,NE, 3cm);\narrow(\"2\",A,SE, 2cm);\narrow(\"3\",A,SW, 2.5cm, Margin(3,0));\narrow(\"4\",A,NW, 2.5cm,N);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0115_0421d9e.png",
    "code": "size(6cm,0);\npath g=(1,1)--(3,2);\ndraw(Label(\"a text\",Rotate(dir(g))), g);\ndraw(Label(\"a text\",red,Rotate(-dir(g)),align=I*dir(g)), g);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0116_068cc69.png",
    "code": "dot(Label(scale(5) * \"$\\frac{\\pi^2}{2}$\", (0,0), align=E));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0117_05c0b91.png",
    "code": "size(0,0);\n\npath pt1=scale(2cm)*unitcircle;\npath pt2=scale(1cm)*unitcircle;\npath pt3=shift(0,1.5cm)*pt2;\n\nfilldraw(pt1^^pt2^^pt3,evenodd+yellow+.9white);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0118_011f8f4.png",
    "code": "size(6cm,0);\n\nreal a=360/6;\nfor (int i = -1; i < 5; ++i)\n  fill(arc((0,0),1,i*a,(i+1)*a)--cycle,grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0119_0716113.png",
    "code": "path line=(0,0)--(5cm,0);\ntransform T=shift(0,-cm);\n\ndraw(line,linewidth(1mm),Bars);\ndraw(T^2*line,Bars(5mm));\ndraw(T^3*line,linewidth(1mm),Bars(5mm));\ndraw(T^4*line,dotted+red,Bars);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0120_0636566.png",
    "code": "size(0,0);\n\npair [] P, Q, R, S;\nreal u=1cm;\n\nfor (int i=0; i<=4; ++i)\n  P[i] = rotate(i*360/5)*(0,-u);\n\nP[5] = P[0];\nfor (int i=0; i<=4; ++i)\n  Q[i] = 3*midpoint(P[i]--P[i+1]);\n\nQ[5] = Q[0];\nfor (int i=0; i<=4; ++i)\n  R[i] = 1/3*( Q[i] + Q[i+1] + P[i+1] );\n\nR[5] = R[0];\nfor (int i=0; i<=5; ++i)\n  S[i] = 1.5*Q[i];\n\nfor (int i=0; i<=4; ++i)\n  {\n    draw(P[i]   -- P[i+1]);\n    draw(P[i+1] -- R[i]);\n    draw(Q[i]   -- R[i]);\n    draw(R[i]   -- Q[i+1]);\n    draw(Q[i]   -- S[i]);\n    draw(S[i]   -- S[i+1]);\n    label(format(\"\\small$P_%i$\",i),P[i],-unit(P[i]));\n    label(format(\"\\small$Q_%i$\",i),Q[i],rotate(60)*unit(Q[i]));\n    label(format(\"\\small$R_%i$\",i),R[i],unit(R[i]));\n    label(format(\"\\small$S_%i$\",i),S[i],unit(S[i]));\n  }\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0121_06b1c77.png",
    "code": "unitsize(x=2cm, y=1cm);\n\npair A, B, C, D;\nA=(0, 0);\nB=(3, 0);\nC=(6, 0);\nD=(6, 4);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0122_085648d.png",
    "code": "size(10cm,0);\n\npath curv=reverse((0,2){dir(10)}..(1,0)..{dir(-50)}(3,2));\nguide dirc;\n\ndraw(curv,linewidth(1mm)+grey);\n\nfor(real i=0; i<=length(curv); i+=.005)\n  {\n    draw(point(curv,i)--dir(curv,i)+point(curv,i),grey+yellow);\n    dirc=dirc..dir(curv,i)+point(curv,i);\n  }\n\ndraw(dirc,grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0123_0115e85.png",
    "code": "size(10cm, 2.5cm, false);\npair A, B, C, D;\nA=(0,0);\nB=(2,0);\nC=(4,0);\nD=(4,2);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0124_037e953.png",
    "code": "size(6cm,0);\npair A=(0,0), B=(0,1), C=(1,0), D=(1,1);\n\ndraw(A..B..C..D--cycle);\ndot(A);dot(B);dot(C);dot(D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0125_00a0a98.png",
    "code": "filldraw((0,0)--(0,6cm)--(6cm,0)--cycle, fillpen=gray, drawpen=linewidth(1mm) + 0.8 * red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0126_08763bf.png",
    "code": "size(6cm,0);\n\nimport math;\n\npair A=(0,0), B=(1,.5), C=(.25,1);\n\npair project(pair pt, pair A, pair B)\n  {\n    return extension(pt,pt-dir(90+degrees(A-B,false)),A,B);\n  }\n\npair icenter(pair A, pair B, pair C)\n  {\n    return extension(A, A+dir(A--B,A--C), B, B+dir(B--A,B--C));\n  }\n\ndraw(A--B--C--cycle);\n\npair ins=icenter(A,B,C);\npair iAB=project(ins,A,B);\npair iAC=project(ins,A,C);\npair iBC=project(ins,B,C);\n\ndot(ins, red);\ndot(iAB^^iAC^^iBC);\ndrawline(A, ins, dotted);\ndrawline(B, ins, dotted);\ndrawline(C, ins, dotted);\ndraw(shift(ins)*scale(abs(ins-iAB))*unitcircle);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0127_089da06.png",
    "code": "size(0,0);\n\npath cle=scale(4cm)*reverse(unitcircle);\n\ndraw(cle);\n\nfor(real i=0; i<=length(cle); i+=.2)\n  draw(point(cle,i)--2cm*dir(cle,i)+point(cle,i),Arrow,p=i/length(cle)*red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0128_03bd298.png",
    "code": "size(6cm,0);\n\ndraw(E--N--W--S--cycle,.5red+1mm);\n\ndraw(E..N..W..S..cycle);\ndot(E..N..W..S..cycle,red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0129_03dd0a9.png",
    "code": "pair c=0;\nlabel(\"abc xyz ijk\",c,Align,basealign);\nlabel(\"abc xyz ijk\",c,Align,red);\ndraw(c--(c+(2cm,0))); // This is the baseline.\n\nshipout((scale(3)*currentpicture.fit()));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0130_04c7a7a.png",
    "code": "size(6cm); \n \nvoid extra() \n{ \n  label(\"Read the code to understand...\",(0,0),white);\n  plain.exitfunction(); \n} \n\natexit(extra); \nfill(xscale(2)*unitcircle); \n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0131_085f368.png",
    "code": "size(6cm,0);\n\nimport math;\n\npair A=(0,0), B=(1,.5), C=(.25,1);\n\npair ccenter(pair A, pair B, pair C)\n  {\n    pair mAB=midpoint(A--B);\n    pair mAC=midpoint(A--C);\n    return extension(mAB, rotate(90,mAB)*A, mAC, rotate(90,mAC)*A);\n  }\n\ndraw(A--B--C--cycle);\n\npair circ=ccenter(A,B,C);\npair mAB=midpoint(A--B);\npair mAC=midpoint(A--C);\npair mBC=midpoint(B--C);\n\ndot(circ, red);\ndot(mAB^^mAC^^mBC);\ndrawline(mAB, circ, dotted);\ndrawline(mAC, circ, dotted);\ndrawline(mBC, circ, dotted);\ndraw(shift(circ)*scale(abs(circ-A))*unitcircle);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0133_028522b.png",
    "code": "size(0,0);\n\npair A=0, B=(6cm,0);\n\ndraw(A{N}..B{E});\ndot(A{N}..B{E});\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0134_075d642.png",
    "code": "size(8cm,0);\n\npath p1=(0,0)--(1,1);\npath p2=(2,0)--(3,1);\n\ndraw(p1,linewidth(5mm));\ndraw(p2,linewidth(5mm));\ndraw(p1--p2, 3mm+.8blue);\ndraw(reverse(p1)--p2, 1mm+.8red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0135_045c0e8.png",
    "code": "size(6cm,0);\n\npath apath=(0,0)..(1,1)..(2,-1){dir(-90)};\n\ndraw(apath);\n\ndot(apath);\ndot(point(apath,length(apath)),.8green+8pt);\ndraw(point(apath,0)--point(apath,1)--point(apath,2),.8red);\ndraw(point(apath,0.5)--point(apath,1.5)--point(apath,2.5),.8blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0136_025d595.png",
    "code": "dot(Label(\"$A$\"), (0,0), S);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0137_06f928a.png",
    "code": "size(8cm);\npath p1 = (0,0){up}..(5,4)..(10,0){down};\n\npair post0=postcontrol(p1,0);\npair pre1=precontrol(p1,1);\npair post1=postcontrol(p1,1);\npair pre2=precontrol(p1,2);\n\ndot(post0^^pre1^^post1^^pre2);\npath p2 = (0,0)..controls post0 and pre1..(5,4)..controls post1 and pre2..(10,0); \n\ndraw(p1,2mm+red);\ndraw(p2,linewidth(1mm));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0138_00df59a.png",
    "code": "pair O=0;\ndot(O);\nlabel(scale(5) * \"$\\frac{\\pi^2}{2}$\", O);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0139_06fe5d9.png",
    "code": "size(0,0);\n\npair A=0, B=(6cm,0);\n\ndraw(A{N}..B{N}..cycle);\ndot(A{N}..B{N}..cycle);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0140_032f5d8.png",
    "code": "size(0,0);\npair A=(0,0), B=(4cm,0);\npath line=A--B;\ntransform TD=shift(0,-cm);\ntransform TR=shift(2.5cm,0);\n\ndefaultpen(linewidth(3bp));\n\ndraw(\"$AB$\",line,.8red,Arrows(3mm));  \ndraw(\"$A$\",A,N); draw(\"$B$\",B,N);\n\ndraw(\"$AB$\",TD*line,.8red,Arrows(3mm),PenMargins);  \ndraw(\"$A$\",TD*A,N); draw(\"$B$\",TD*B,N);\n\ndraw(\"$AB$\",TD^2*line,.8red,Arrows(3mm),DotMargins);  \ndot(\"$A$\",TD^2*A,dotfactor*NW); dot(\"$B$\",TD^2*B,dotfactor*NE);\n\nmargin BigMargins=Margin(2,2);\ndraw(\"$AB$\",TD^3*line,.8red,Arrows(3mm),BigMargins);  \ndraw(\"$A$\",TD^3*A,N); draw(\"$B$\",TD^3*B,N);\n\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0141_04b70b8.png",
    "code": "size(8cm,0);\n\ntransform T=shift(0,-0.125);\npath g=(0,0)--(1,0);\nint i=-1;\ndraw(T^(++i)*g, Arrows());\ndraw(T^(++i)*g, 0.8*green, Arrows(SimpleHead));\ndraw(T^(++i)*g, 0.8*red, Arrows(SimpleHead,size=5mm));\n\ndraw(T^(++i)*g, Arrows(HookHead));\ndraw(T^(++i)*g, 0.8*green, Arrows(HookHead,size=5mm));\ndraw(T^(++i)*g, 0.8*red, Arrows(HookHead(barb=20),size=5mm));\ndraw(T^(++i)*g, 2mm+0.8*blue, Arrows(HookHead(dir=60),size=5mm, Fill));\n\ndraw(T^(++i)*g, 0.8*yellow, Arrows(HookHead(barb=-10,dir=40),size=5mm));\n\ndraw(T^(++i)*g, Arrows(TeXHead));\ndraw(T^(++i)*g, 0.8*green, Arrows(TeXHead,size=5bp));\ndraw(T^(++i)*g, 5bp+0.8*red, Arrows(TeXHead));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0142_07bc052.png",
    "code": "size(6cm,0);\n\npath p = (0,0){up} .. (2cm,0){up};\npath q = (0,1cm){dir(-60)}..(1cm,-1cm)..{dir(60)}(2cm,1cm);\n\ndraw(p, red);\ndraw(q, blue);\ndot(intersectionpoint(p,q));\ndraw(point(p, intersect(p,q)[0])--postcontrol(p, intersect(p,q)[0]), .8red,Arrow);\ndraw(point(q, intersect(p,q)[1])--postcontrol(q, intersect(p,q)[1]), .8blue,Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0143_0064113.png",
    "code": "path line=(0,0)--(5cm,0);\ndraw(line,Arrow);\ndraw(shift(0,-cm)*line, BeginArrow);\ndraw(shift(0,-2cm)*line, MidArrow);\ndraw(shift(0,-3cm)*line, Arrows);\n\ndraw(shift(0,-4cm)*line, linewidth(3bp), Arrow(20bp));\ndraw(shift(0,-5cm)*line, linewidth(3bp), BeginArrow(20bp));\ndraw(shift(0,-6cm)*line, linewidth(3bp), MidArrow(20bp));\ndraw(shift(0,-7cm)*line, linewidth(3bp), Arrows(20bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0144_040edf8.png",
    "code": "size(6cm,0);\n\npath Line(pair A, pair B)\n{\n  return interp(A,B,-100000/arclength(A--B))--interp(A,B,100000/arclength(A--B));\n}\n\npath Parallel(pair A, pair dir)\n{\n  return Line(A,A+dir);\n}\n\npair A=0, B=(1,0), C=(.7,.7);\ndraw(A--B, .8red);\ndraw(A--C, .8green);\ndraw(B--C, .8blue);\n\nlabel(\"$A$\",A,SW);\nlabel(\"$B$\",B,SE);\nlabel(\"$C$\",C,N);\n\npair Ap=intersectionpoint(Parallel(B, A-C), Parallel(C, A-B));\npair Bp=intersectionpoint(Parallel(A, B-C), Parallel(C, A-B));\npair Cp=intersectionpoint(Parallel(A, B-C), Parallel(B, A-C));\n\ndraw(Ap--Bp, .8red);\ndraw(Ap--Cp, .8green);\ndraw(Bp--Cp, .8blue);\n\nlabel(\"$A'$\",Ap,NE);\nlabel(\"$B'$\",Bp,NW);\nlabel(\"$C'$\",Cp,S);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0145_029cb6b.png",
    "code": "pair O=0;\ndraw(scale(2)*Label(\"N\",.8red),O,10*N,linewidth(3mm));\ndraw(scale(2)*Label(\"S\",.8red),O,10*S);\ndraw(scale(2)*Label(\"E\",.8red),O,10*E);\ndraw(scale(2)*Label(\"W\",.8red),O,10*W);\n\ndraw(rotate(45)*Label(\"NE\"),O,5NE);\ndraw(rotate(-45)*Label(\"SE\"),O,5SE);\ndraw(rotate(-45)*Label(\"NW\"),O,5NW);\ndraw(rotate(45)*Label(\"SW\"),O,5SW);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0146_06f94ea.png",
    "code": "//From documentation of Asymptote\nsize(0,6cm);\nguide center = (0,1){W}..tension 0.8..(0,0){(1,-.5)}..tension 0.8..{W}(0,-1); \n\ndraw((0,1)..(-1,0)..(0,-1));\nfilldraw(center{E}..{N}(1,0)..{W}cycle);\nunfill(circle((0,0.5),0.125));\nfill(circle((0,-0.5),0.125));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0147_0082583.png",
    "code": "//From documentation of Asymptote\nsize(6cm, 0);\n\nvoid distance(picture pic=currentpicture, pair A, pair B, Label L=\"\", real n=0, pen p=currentpen)\n{\n  real d=3mm;\n  guide g=A--B;\n  transform T=shift(-n*d*unit(B-A)*I);\n  pic.add(new void(frame f, transform t) {\n    picture opic;\n    guide G=T*t*g;\n    draw(opic, G, p, Arrows(NoFill), Bars, PenMargins);\n    label(opic, L, midpoint(G), UnFill(1));\n    add(f, opic.fit());\n  });\n  pic.addBox(min(g), max(g), T*min(p), T*max(p));\n}\n\npair A=(0, 0), B=(3, 3);\n\ndot(A);\ndot(B);\ndistance(A, B, Label(\"$\\ell$\", Rotate(dir(A--B))), 1);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0148_08016f9.png",
    "code": "texpreamble(\"\\usepackage{manfnt}\");\n\nlabel(scale(6)*Label(\"\\textdbend\"), (0,0));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0149_0610761.png",
    "code": "size(0,0);\n\npath pt1=scale(4cm)*unitcircle;\npath pt2=scale(2cm)*unitcircle;\n\ndraw(pt1^^pt2);\ndot(pt1^^pt2);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0150_0880bc3.png",
    "code": "size(8cm,0);\n\npair A=(0,0), B=(1,0);\n\ndot(\"$A$\",A,N);\ndot(\"$B$\",B,N);\ndraw(interp(A,B,-.5)--interp(A,B,1.25));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0151_096c1b2.png",
    "code": "size(6cm,0);\n\npair A=2expi(pi/2);\n\npair homography(pair z)\n{\n  return (z^2+A)/(z+2);\n}\n\nguide image;\npair tpt;\n\ndraw(unitcircle);\nfor(real t=0; t<length(unitcircle);t+=.05)\n  {\n    tpt=homography(point(unitcircle,t));\n    image=image..tpt;\n    draw(point(unitcircle,t)--tpt,dotted);\n  }\ndraw(image..cycle,red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0152_06c645a.png",
    "code": "size(0,0);\n\npair A=0, B=(6cm,0);\n\ndraw(A{dir(90)}..B{dir(0)});\ndot(A{dir(90)}..B{dir(0)});\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0154_0456cab.png",
    "code": "size(8cm,0);\nimport patterns;\n\nadd(\"hatchback\",hatch(NW));\nfilldraw(xscale(2)*unitsquare,pattern(\"hatchback\"));\n\nadd(\"r_hatchback\",hatch(2.5mm,NW,.8red));\nfilldraw(shift(0,-2)*yscale(2)*unitsquare,pattern(\"r_hatchback\"));\n\nadd(\"b_hatchback\",hatch(NW,2.5mm+.8blue));\nfilldraw(shift(1,-2)*yscale(2)*unitsquare,pattern(\"b_hatchback\"));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0155_0682f06.png",
    "code": "size(6cm,0);\n\nimport math;\n\npair A=(0,0), B=(1,.5), C=(.25,1);\n\npair project(pair pt, pair A, pair B)\n  {\n    return extension(pt,pt-dir(90+degrees(A-B,false)),A,B);\n  }\n\npair ocenter(pair A, pair B, pair C)\n  {\n    return extension(A, project(A,B,C), B, project(B,A,C));\n  }\n\ndraw(A--B--C--cycle);\n\npair orth=ocenter(A,B,C);\npair Ap=project(A,B,C);\npair Bp=project(B,A,C);\npair Cp=project(C,A,B);\n\ndot(orth, red);\ndot(Ap^^Bp^^Cp);\ndrawline(A, orth, dotted);\ndrawline(B, orth, dotted);\ndrawline(C, orth, dotted);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0156_06fbf0a.png",
    "code": "size(6cm,0);\npair A=0, B=(1,0), C=(1,1);\n\ndraw(\"$1$\",A--B);\ndraw(\"$1$\",B--C);\ndraw(\"$\\sqrt{2}$\",C--A);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0157_068cb16.png",
    "code": "size(8cm,0);\npair O=(0,0);\npath p=(0,0){dir(0)}..{dir(45)}(2,2){dir(-45)}..{dir(0)}(4,0);\n\npair En1=dir(p, 1, -1);\npair En2=dir(p, 2, -1);\ndraw(p);\ndraw(Label(\"dir(p,1,-1)\", EndPoint), point(p,1)--point(p,1)+En1, red, Arrow);\ndraw(Label(\"dir(p,2,-1)\", EndPoint), point(p,2)--point(p,2)+En2, red, Arrow);\n\npair Ep0=dir(p, 0, 1);\npair Ep1=dir(p, 1, 1);\ndraw(Label(\"dir(p,0,1)\", EndPoint), point(p,0)--point(p,0)+Ep0, blue, Arrow);\ndraw(Label(\"dir(p,1,1)\", EndPoint, E), point(p,1)--point(p,1)+Ep1, blue, Arrow);\n\ndraw(p, dot);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0158_06493f2.png",
    "code": "size(0,0);\npair O=0;\n\ndraw(circle(O,4cm));\ndot(circle(O,4cm), red+4bp);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0159_0014495.png",
    "code": "size(6cm,0);\nimport math;\n\npair project(pair pt, pair A, pair B)\n  {\n    return extension(pt,pt-dir(90+degrees(A-B,false)),A,B);\n  }\n\n\npair ecenter(pair A, pair B, pair C)\n  {\n    return extension(A, A+rotate(90)*dir(A--B,A--C), B, B+rotate(90)*dir(B--A,B--C));\n  }\n\npath ecircle(pair A, pair B, pair C)\n  {\n    return shift(ecenter(A,B,C))*scale(abs(ecenter(A,B,C)-project(ecenter(A,B,C),B,C)))*unitcircle;\n  }\n\npair A=(0,0), B=(3,0), C=(3,4);\npath tr=A--B--C--cycle;\n\ndraw(ecircle(A,B,C));\ndraw(ecircle(B,C,A));\n\npen p=linewidth(1pt);\ndrawline(A,B, p);\ndrawline(A,C, p);\ndrawline(B,C, p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0160_02306a4.png",
    "code": "size(6cm,0);\npair A=(0,0), B=(0,1), C=(1,0), D=(1,1);\n\ndraw(A---B..C..D);\ndot(A);dot(B);dot(C);dot(D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0161_03f7c23.png",
    "code": "filldraw((0,0)--(0,6cm)--(6cm,0)--cycle,gray);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0162_01643a2.png",
    "code": "size(6cm,0);\n\npath curv=reverse((0,2){dir(-60)}..(1,0)..{dir(60)}(2,2));\n\ndraw(curv);\n\nfor(real i=0; i<=length(curv); i+=.1)\n  draw(point(curv,i)--dir(curv,i)+point(curv,i),grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0163_0594cfb.png",
    "code": "size(3cm, 10cm, false);\npair A, B, C, D;\nA=(0,0);\nB=(2,0);\nC=(4,0);\nD=(4,2);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0164_04af947.png",
    "code": "size(10cm,0);\n\npath unitpolygon(int n)\n{\n  guide opath;\n  for (int i=1; i<=n; ++i)\n    opath=opath--rotate((i-1)*360/n)*E;\n  return opath--cycle;\n}\n\nfor (int i=3; i<9; ++i)\n  draw(shift(2.5*(i%3),-2.5*quotient(i,3))*unitpolygon(i));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0165_000ff53.png",
    "code": "size(10cm,0);\n\ndraw(scale(4)*unitcircle);\ndot((0, 0));\ndot((4, 0));\n\nfixedscaling((-8, -8),(6, 6));\nshipout(bbox(Fill(lightgrey)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0166_07f6ac5.png",
    "code": "size(6cm,0);\n\nreal n=7, a=360/n;\nfor (int i = 0; i < n; ++i)\n  filldraw((0,0)--arc((0,0),1,i*a,(i+1)*a)--cycle, i/n*blue + (1-i/n)*green + grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0167_030d7a8.png",
    "code": "size(5cm,0);\npath line=(0,0)--(5,0);\ntransform T=shift(0,-1);\n\ndraw(line, Bar);\ndraw(T*line, BeginBar);\ndraw(T^2*line, Bars);\ndraw(T^3*line, Arrow, BeginBar);\n\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0168_02adadd.png",
    "code": "size(0,0);\n\nint pgcd(int a, int b)\n{\n  int a_=abs(a), b_=abs(b), r=a_;\n  if (b_>a_) {a_=b_; b_=r; r=a_;}\n  while (r>0)\n    {\n      r=a_%b_;\n      a_=b_;\n      b_=r;\n    }\n  return a_;\n}\n\nstring texfrac(int p, int q,\n               string factor=\"\",\n               bool signin=false, bool factorin=true,\n               bool displaystyle=false,\n               bool zero=true)\n{\n  if (p==0) return (zero ? \"$0$\" : \"\");\n  string disp= displaystyle ? \"$\\displaystyle \" : \"$\";\n  int pgcd=pgcd(p,q);\n  int num= round(p/pgcd), den= round(q/pgcd);\n  string nums;\n  if (num==1)\n    if (factor==\"\" || (!factorin && (den !=1))) nums=\"1\"; else nums=\"\";\n  else\n    if (num==-1)\n      if (factor==\"\" || (!factorin && (den !=1))) nums=\"-1\"; else nums=\"-\";\n    else nums= (string) num;\n  if (den==1) return \"$\" + nums + factor + \"$\";\n  else\n    {\n      string dens= (den==1) ? \"\" : (string) den;\n      if (signin || num>0)\n        if (factorin)\n          return disp + \"\\frac{\" + nums + factor + \"}{\" + (string) dens + \"}$\";\n        else\n          return disp + \"\\frac{\" + nums + \"}{\" + (string) dens + \"}\"+ factor + \"$\";\n      else\n        {\n          if (num==-1)\n            if (factor==\"\" || !factorin) nums=\"1\"; else nums=\"\";\n          else nums=(string)(abs(num));\n        if (factorin)\n          return disp + \"-\\frac{\" + nums + factor + \"}{\" + (string) dens + \"}$\";\n        else\n          return disp + \"-\\frac{\" + nums + \"}{\" + (string) dens + \"}\"+ factor + \"$\";\n        }\n    }\n}\n\nfor (int i=-4; i<=4; ++i)\n  {\n    label(texfrac(i,4), (i*cm,0));\n    label(texfrac(i,4,signin=true), (i*cm,-cm));\n    label(texfrac(i,4,factor=\"\\pi\"), (i*cm,-2cm));\n    label(texfrac(i,4,factor=\"\\pi\",factorin=false), (i*cm,-3cm));\n    label(texfrac(i,4,factor=\"\\pi\",signin=true,factorin=true), (i*cm,-4cm));\n    label(texfrac(i,4,factor=\"\\pi\",signin=true,factorin=false,displaystyle=true,zero=false), (i*cm,-5cm));\n  }\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0169_037ca2f.png",
    "code": "size(6cm,0);\n\npath p= (1,-1){right} .. (4,0);\npair O=(3,.25);\n\nfor(int i=10; i<360; i+=10)\n  draw(rotate(i,O)*p);\n\ndot(O,blue);\ndraw(p,red+1mm);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0170_0633e55.png",
    "code": "unitsize(3cm);\n\npair A=(0,0), B=(1,0), C=(0,1);\npath trig;\ntrig=A--B--C--cycle;\ndraw(trig);\ndot(trig,linewidth(4bp));\ndot(shift(3,0)*trig,red+4bp);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0171_05ceb36.png",
    "code": "size(10cm,0);\ntexpreamble(\"\\usepackage{amsmath}\");\n\npath p = (0,0)..(1,1)..(2,.5){dir(0)};\nreal al    = arclength(p);\nreal l     = length(p);\npair pt    = point(p,l/2);\npair apt   = arcpoint(p,al/2);\n\ndraw(p);\ndraw(subpath(p,0,arctime(p,al/2)),blue);\ndot(pt,red);\ndot(apt,blue);\n\narrow(\"$\\frac{\\text{lenght(p)}}{2}$\",pt,SSE,1cm);\narrow(\"$\\frac{\\text{arclenght(p)}}{2}$\",apt,SSW,1cm);\nlabel(\"\\small The sizes of the blue path and the black path are equal\",(1,.25));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0172_027b1d9.png",
    "code": "frame f;\nfilldraw(scale(5cm)*unitsquare, black);\nlabel(f,\"Hello\", 0.8*red, Fill(white));\nadd(rotate(45) * scale(5) * f, (2.5cm,2.5cm));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0173_09579a1.png",
    "code": "size(6cm,0);\n\n//Return Circle AB diameter\npath circle(pair A, pair B)\n{\n  return shift(midpoint(A--B))*scale(abs(A-B)/2)*unitcircle;\n}\n\npair A=(0,0), B=(3,0), C=(2,1);\n\ndraw(A--B,.8blue);\ndraw(A--C,.8red);\ndraw(B--C,.8green);\ndraw(circle(A,B),.8blue);\ndraw(circle(A,C),.8red);\ndraw(circle(B,C),.8green);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0174_0924403.png",
    "code": "size(0,0);\n\npair A=0, B=(3cm,5cm), C=(6cm,0);\n\npair ctrl_rgt_A, ctrl_lft_B, ctrl_rgt_B, ctrl_lft_C;\nctrl_rgt_A=A+2cm*E;\nctrl_lft_B=B+3cm*W;\nctrl_rgt_B=B+3cm*E;\nctrl_lft_C=C+2cm*W;\n\ndraw(A..B..C);\ndraw(A.. controls ctrl_rgt_A and ctrl_lft_B ..B.. controls ctrl_rgt_B and ctrl_lft_C ..C,1mm+grey);\ndot(A--B--C,linewidth(6bp));\ndraw((A--ctrl_rgt_A),Arrow, p=grey);\ndraw((B--ctrl_rgt_B),Arrow, p=grey);\ndraw((B--ctrl_lft_B),Arrow, p=grey);\ndraw((C--ctrl_lft_C),Arrow, p=grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0175_08b3e7f.png",
    "code": "size(8cm,0);\n\npair A, B, C, D;\nA=(0,0); B=(1,0);\nC=(1,1); D=(0,1);\nfilldraw(A--C--B--D--cycle,grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0176_002d214.png",
    "code": "size(8cm);\ndraw(unitcircle, linewidth(bp));\npen p;\nfor (int t=-88; t <= 88; t += 2) {\n  if(t%5 == 0) {\n    p=linewidth(bp);\n    draw((0,1){dir (t-90)}..{dir (270-t)}(0,-1), linewidth(bp));\n  } else p=currentpen;\n  draw((Cos(t),Sin(t)){dir(180+t)}..{dir(180-t)}(-Cos(t),Sin(t)), p);\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0177_00a7d26.png",
    "code": "DefaultHead=HookHead;\n\npath line=(0,0)..(2.5cm,2.5cm)..(5cm,0);\ndraw(line,ArcArrow());\ndraw(shift(0,-2cm)*line,BeginArcArrow());\ndraw(shift(0,-4cm)*line,MidArcArrow());\ndraw(shift(0,-6cm)*line,ArcArrows());\n\ndraw(shift(6cm,0)*line,3bp+.8red,ArcArrow(20bp));\ndraw(shift(6cm,-2cm)*line,3bp+.8red,BeginArcArrow(20bp));\ndraw(shift(6cm,-4cm)*line,3bp+.8red,MidArcArrow(20bp));\ndraw(shift(6cm,-6cm)*line,3bp+.8red,ArcArrows(20bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0178_07afa6b.png",
    "code": "size(6cm,0);\nimport math;\n\npair A=(0,-.5), B=A+dir(45);\npair C=(0,1)+2dir(20);\npath cle=shift(C)*scale(1)*unitcircle;\n\npair I1=intersectionpoint(A--interp(A,B,2),cle);\npair I2=intersectionpoint(A--interp(A,B,10),cle);\n\npath AB=A--B;\n\ndraw(AB^^cle);\ndot(I1^^I2,red);\ndraw(B--I2,1pt+dotted);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0179_01e75f5.png",
    "code": "size(6cm,0);\n\nreal a=360/6;\nfor (int i = -1; i < 5; ++i)\n  draw(Label(format(\"%i\",i+1)),arc((0,0),10,i*a,(i+1)*a)--cycle,grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0180_0799248.png",
    "code": "DefaultHead=TeXHead;\npath line=(0,0)--(5cm,0);\n\ndraw(line,Arrow(10bp,filltype=NoFill));\ndraw(shift(0,-2cm)*line,Arrow(10bp,filltype=FillDraw(.8red)));\ndraw(shift(0,-4cm)*line,Arrow(10bp,filltype=Fill(.8red)));\ndraw(shift(0,-6cm)*line,Arrows(filltype=FillDraw(-10,10,.8red)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0181_0510eb4.png",
    "code": "size(0,0);\n\npair inversion(pair O, real k, pair M)\n{\n  return (O + k*unit(M-O)/abs(M-O));\n}\n\nguide inversion(pair O, real k, path M)\n{\n  guide opath=inversion(O,k,point(M,0));\n  for (real i=0; i<=length(M); i+=length(M)/100)\n    opath = opath .. inversion(O,k,point(M,i));\n  return opath .. cycle;\n}\n\nreal u=10cm;\npath [] p;\npath A = scale(u)*unitcircle;\npath B = scale(3)*A;\npair z = rotate(10)*(5u,0);\n\n\ndraw(inversion( z, 2*u^2, A ),linewidth(1pt));\ndraw(inversion( z, 2*u^2, B ),linewidth(1pt));\n\np[0] = shift(2u,0)*scale(u)*unitcircle;\n\nfor (int i=0; i<=5; ++i)\n  {\n    if (i!=0) p[i] = rotate(360/6)*p[i-1];\n    draw(inversion( z, 2 (u^2), p[i] ));\n  }\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0182_0945875.png",
    "code": "size(6cm, 6cm);\n\npair [] A;\nA[0]=(-1, -1);\nA[1]=( 1, -1);\nA[2]=( 1,  1);\nA[3]=(-1,  1);\ndraw (A[0]--A[1]--A[2]--A[3]--cycle);\ndraw (A[0]--A[2]);\ndraw (A[1]--A[3]);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0183_079e87c.png",
    "code": "size(10cm,0);\nimport math;\n\npath cle=unitcircle;\npath curv=reverse((1.5,2){dir(-60)}..(2.5,0)..{dir(60)}(3.5,2));\n\ndraw(cle);\ndraw(curv);\n\npair pt_cle=point(cle, 1.35);\npair pt_dir_cle=dir(cle, 1.35);\n\ndrawline((pt_cle - pt_dir_cle), (pt_cle + pt_dir_cle), red);\n\npair pt_curv=point(curv, dirtime(curv, pt_dir_cle));\n\ndrawline((pt_curv - pt_dir_cle), (pt_curv + pt_dir_cle), blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0184_041e021.png",
    "code": "size(6cm,0);\nimport roundedpath;\n\npair A=(0,0), B=(0,1), C=(1,0), D=(1,1);\n\ndraw(roundedpath(A--B--C--D,.5));\ndot(A--B--C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0185_02f82a6.png",
    "code": "size(8cm,0);\n\ntransform t=xscale(1.25);\npen p1=blue, p2=yellow;\npair pa=t*dir(135), pb=t*dir(-45);\n\naxialshade(t*unitcircle,p1,pa,p2,pb);\ndraw(pa--pb, dashed);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0186_0433f3b.png",
    "code": "// Venn diagram // Diagramme de Venn\n// Edwards' construction // Construction d'Edwards\nimport roundedpath;\nsize(14cm,0);\n\npath [] EdVenn(int n)\n{\n  path [] opath;\n  if (n>=1)\n    opath.push(shift(-1.4,-.9)*roundedpath(xscale(2.8)*yscale(.9)*unitsquare,.1));\n  if (n>=2)\n    opath.push(shift(0,-.9)*roundedpath(xscale(1.4)*yscale(1.8)*unitsquare,.1));\n  if (n>=3)\n    opath.push(scale(.5)*unitcircle);\n  for (int i=1; i<=n-3; ++i)\n    {\n      pair pcle=point(opath[2],1/(2^i)),\n        ccle=intersectionpoint(pcle--(pcle-dir(opath[2],1/(2^i))), (0,0)--(1,0));\n      path cle=shift(ccle)*scale(abs(pcle-ccle))*unitcircle;\n      real[] p1=intersect(cle, opath[2]);\n      path ocle=subpath(cle,-p1[0],p1[0]);\n      guide tpath;\n      real step=360/(2^i), a=0;\n      for (int j=0; j<2^i; ++j)\n        {\n          tpath=tpath..rotate(a)*ocle;\n          a+=step;\n        }\n      opath.push(tpath..cycle);\n    }\n    return opath;\n}\n\ndraw(EdVenn(6));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0187_0357f93.png",
    "code": "import labelpath;\n\nunitsize(5cm);\nstring text=\"\\Huge A text along a curve\";\npath p=(0,0)..(1,1)..(2,0.5){dir(0)};\n\nlabelpath(text,p);\ndraw(p, lightgrey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0188_0746198.png",
    "code": "size(6cm);\n\ndraw(unitcircle, dot);\ndotfactor*=3;\ndraw(shift(-0.5,-0.5)*unitsquare, dot(blue,Fill(red)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0189_01e0b01.png",
    "code": "size(0,0);\npath line=(0,0)--(6cm,0);\ntransform T=shift(0,-cm);\n\ndraw(\"$A$\",line);\ndraw(\"$B$\",T*line,dir(0));\ndraw(\"$C$\",T^2*line,N);\ndraw(Label(\"$D$\",fontsize(14pt)),T^3*line);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0190_03e3dc0.png",
    "code": "size(0,0);\n\npair A=0, B=(3cm,0.5cm), C=(6cm,0);\n\ndraw(A{N}..B{E}..C{S});\ndraw(A{N}::B{E}::C{S},red);\ndot(A--B--C);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0191_086c93e.png",
    "code": "size(8cm,0);\n\npath a,b,c,d;\na = (-1,-.2){up} .. tension 1.2 .. (1,-.2){down};\ntransform r90=rotate(90);\nb = r90*a;\nc = r90*b;\nd = r90*c;\npath bound=buildcycle(a,b,c,d);\nfill(bound, lightgrey);\ndraw(a^^b^^c^^d,grey);\ndraw(bound);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0192_0273b9a.png",
    "code": "size(8cm,0);\n\npath a,b,c;\na = shift(1,0)*scale(2)*unitcircle;\nb = rotate(120)*a;\nc = rotate(120)*b;\n\nfill(a, red);\nfill(b, green);\nfill(c, blue);\nfill(buildcycle(a,b), red + green);\nfill(buildcycle(b,c), green + blue);\nfill(buildcycle(c,a), blue + red);\nfill(buildcycle(a,b,c), white);\n\ndraw(a^^b^^c);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0193_0549a29.png",
    "code": "size(0,0);\npath line=(0,0)--(6cm,0);\ntransform T=shift(0,-cm);\n\ndraw(Label(\"A\",align=Center,filltype=UnFill), line);\ndraw(Label(\"B\",UnFill), T*line, Center);\ndraw(Label(\"C\",align=Center,position=Relative(.75),UnFill), T^2*line);\ndraw(Label(\"D\",position=Relative(.25),UnFill), align=Center, T^3*line);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0194_04967eb.png",
    "code": "size(0,0);\n\npair A=0, B=(3cm,5cm), C=(6cm,0);\ndefaultpen(1mm);\n\ndraw(A..B..C);\ndraw(A.. tension .75 ..B.. tension .75 ..C,grey);\ndraw(A.. tension 1.5 ..B.. tension 1.5 ..C,.8red);\ndraw(A.. tension 2 ..B.. tension 2 ..C,green+grey);\ndraw(A.. tension 10 ..B.. tension 10 ..C,blue+grey);\ndot(A--B--C,linewidth(6bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0195_057766b.png",
    "code": "size(0,0);\n\nreal R=4cm;\n\ndraw(scale(R)*unitcircle);\ndot((0,0),linewidth(4bp));\ndot((R*cos(pi/6),R*sin(pi/6)),red+8bp);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0196_05a34af.png",
    "code": "size(15cm,0);\n\nsrand(rand());\npath p1 = randompath(9);\npath p2 = randompath(8);\nreal Minx=min(min(p1).x,min(p2).x);\nreal Maxx=max(max(p1).x,max(p2).x);\nreal Miny=min(min(p1).y,min(p2).y);\n\npair[] inter=intersectionpoints(p1,p2);\nint nb=inter.length;\nfor (int i=0 ; i<nb; ++i)\n  {\n    dot(inter[i]);\n    label(\"$\" + (string) i +\"$\", inter[i],N);\n  }\n\ndraw(p1,.8red);\ndraw(p2,.8green);\nlabel(\"I found \" + (string) nb + \" points of intersection.\",((Maxx+Minx)/2,Miny),2S);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0197_020a879.png",
    "code": "unitsize(5cm);\n\nstring text=\"A text along a curve\";\npath p=(0,0)..(1,1)..(2,0.5){dir(0)};\nint n=length(text);\nreal at=0;\nreal step=arclength(p)/n;\n\nfor (int i=0; i<n; ++i){\n  real t=arctime(p,at);\n  label(rotate(degrees(angle(dir(p,t),false)))*scale(3)*baseline(substr(text,i,1)),point(p,t));\n  at += step;\n }\n\ndraw(p,lightgrey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0198_013d4bc.png",
    "code": "size(6cm,0);\npair A=(0,0), B=(0,1), C=(1,0), D=(1,1);\n\ndraw(A--B..C..D);\ndot(A--B--C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0199_097ce97.png",
    "code": "size(8cm,0);\n\npair A=(0.35,0.35), B=(0.6,0.6);\n\nradialshade(unitsquare,black,A,0.15,lightgrey,B,.6);\n\ndot(A,.8red);\ndot(B,blue+grey);\ndraw(shift(A)*scale(.15)*unitcircle,dashed+.8red);\ndraw(shift(B)*scale(.6)*unitcircle,dashed+blue+grey);\nclip(unitsquare);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0200_03533ca.png",
    "code": "// Author: John Bowman\npair[] z=new pair[10]; \nz[0]=(0,100); z[1]=(50,0); z[2]=(180,0); \nfor(int n=3; n <= 9; ++n) \n  z[n]=z[n-3]+(200,0); \npath p=z[0]..z[1]---z[2]---z[3] \n&z[3]..z[4]--z[5]::{up}z[6] \n&z[6]::z[7]---z[8]..{up}z[9]; \ndefaultpen(linewidth(1));\ndraw(p, grey); \ndot(p); \n\nreal len=50;\nfor(int i = 0; i < z.length; ++i) {\n  pair z=point(p,i);\n  draw(z--z+len*dir(p,i,-1),red);\n  draw(z--z+len*dir(p,i,1),blue+dashed);\n  draw(z-len*dir(p,i)--z+len*dir(p,i),green+Dotted(defaultpen()));\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0201_0648271.png",
    "code": "unitsize(2cm);\n\npair A, B, C, D;\nA=(0,0);\nB=(2,0);\nC=(4,0);\nD=(4,2);\ndraw(A--B);\ndraw(C--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0202_0602708.png",
    "code": "size(8cm,0);\n\ntransform scale(pair center, real k)\n{\n  return shift(center)*scale(k)*shift(-center);\n}\n\npath cle=unitcircle;\npair A=(4,0);\ndraw(cle);\n\ndraw(scale(A,.5)*cle,red);\ndraw(scale(A,-.75)*cle,blue);\n\nfor (real t; t<length(cle); t+=1)\n  draw(point(cle,t)--point(scale(A,-.75)*cle,t),dotted);\n\ndot(\"$A$\",A,N);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0203_0956014.png",
    "code": "size(6cm,6cm);\n\ndraw(unitsquare);\ndot((0,0)--(1,1)--(0,1)--(1,0));\ndraw((0,0)--(1,1));\ndraw((1,0)--(0,1));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0204_027a8f5.png",
    "code": "size(0,0);\n\npair x=0;\npair y=(-6.5cm,0);\n\nlabel(format(6.66666), x, E);\nlabel(\"format(6.66666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%f$\", 6.66666), x, E);\nlabel(\"format(\\\"\\$x=\\%f\\$\\\", 6.66666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%.1f$\", 6.66666), x, E);\nlabel(\"format(\\\"\\$x=\\%.1f\\$\\\", 6.66666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%.2f$\", 6.66666), x, E);\nlabel(\"format(\\\"\\$x=\\%.2f\\$\\\", 6.66666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%.0f$\", 6.66666), x, E);\nlabel(\"format(\\\"\\$x=\\%.0f\\$\\\", 6.6666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%07.3f$\", 6.66666), x, E);\nlabel(\"format(\\\"\\$x=\\%07.3f\\$\\\", 6.6666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%7.3f$\", 6.66666), x, E);\nlabel(\"format(\\\"\\$x=\\% 7.3f\\$\\\", 6.6666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%g$\", 66.666), x, E);\nlabel(\"format(\\\"\\$x=\\%g\\$\\\", 66.66666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%g$\", 666666.666), x, E);\nlabel(\"format(\\\"\\$x=\\%g\\$\\\", 666666.666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%g$\", 666666666.666), x, E);\nlabel(\"format(\\\"\\$x=\\%g\\$\\\", 666666666.666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%e$\", 666666.666), x, E);\nlabel(\"format(\\\"\\$x=\\%e\\$\\\", 666666.666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%.2e$\", 666666.666), x, E);\nlabel(\"format(\\\"\\$x=\\%.2e\\$\\\", 666666.666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%i$\", 6), x, E);\nlabel(\"format(\\\"\\$x=\\%i\\$\\\", 6)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%f$\", 6.0), x, E);\nlabel(\"format(\\\"\\$x=\\%f\\$\\\", 6.0)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%+.2f$\", 6.66666), x, E);\nlabel(\"format(\\\"\\$x=\\%+.2f\\$\\\", 6.66666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=%+.2f$\", -6.66666), x, E);\nlabel(\"format(\\\"\\$x=\\%+.2f\\$\\\", -6.66666)\", y, E);\n\nx+=(0,-1cm);y+=(0,-1cm);\nlabel(format(\"$x=% .2f$\", 6.666666), x, E);\nlabel(\"format(\\\"\\$x=\\% .2f\\$\\\", 6.666666)\", y, E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0205_00c41b0.png",
    "code": "DefaultHead=HookHead;\npath line=(0,0)--(5cm,0);\n\ndraw(line,Arrow(20bp,filltype=NoFill));\ndraw(shift(0,-cm)*line,Arrow(20bp,filltype=FillDraw(.8red)));\ndraw(shift(0,-2cm)*line,Arrow(20bp,filltype=Fill(.8red)));\ndraw(shift(0,-3cm)*line,Arrows(filltype=FillDraw(-10,10,.8red)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0206_0150030.png",
    "code": "DefaultHead=SimpleHead;\n\npath line=(0,0)..(2.5cm,2.5cm)..(5cm,0);\ndraw(line,ArcArrow());\ndraw(shift(0,-2cm)*line,BeginArcArrow());\ndraw(shift(0,-4cm)*line,MidArcArrow());\ndraw(shift(0,-6cm)*line,ArcArrows());\n\ndraw(shift(6cm,0)*line,3bp+.8red,ArcArrow(20bp));\ndraw(shift(6cm,-2cm)*line,3bp+.8red,BeginArcArrow(20bp));\ndraw(shift(6cm,-4cm)*line,3bp+.8red,MidArcArrow(20bp));\ndraw(shift(6cm,-6cm)*line,3bp+.8red,ArcArrows(20bp));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0207_091ee83.png",
    "code": "size(6cm,0);\nimport math;\n\npair A=(0,-.5), B=A+dir(45);\npair C=(0,1), D=C+5dir(20);\n\npair I=extension(A,B,C,D);\n\npath AB=A--B;\npath CD=C--D;\n\ndraw(AB^^CD);\ndot(\"$I$\",I,N,red);\ndraw(B--I,1pt+dotted);\ndot(\"$A$\",A,SE);\ndot(\"$B$\",B,SE);\ndot(\"$C$\",C,N);\ndot(\"$D$\",D,N);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0208_08eaddd.png",
    "code": "size(8cm,0);\n\npair A, B, C, D;\nA=(0,0); B=(1,0);\nC=(1,1); D=(0,1);\nfill(A--C--B--D--cycle,grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0209_0147ee4.png",
    "code": "size(0,0);\n\npair A=0, B=(3cm,3cm), C=(6cm,0);\n\ndraw(A..B..C);\ndraw(A{curl 0}..B..{curl 0}C,red);\ndot(A--B--C);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0210_0019c2e.png",
    "code": "frame f;\nlabel(f,\"\\textbf{Hello}\",yellow,Fill(black));\nadd(scale(5)*rotate(45)*f);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0211_08ae725.png",
    "code": "size(6cm,0);\n\n//Return Circle AB diameter\npath circle(pair A, pair B)\n{\n  return shift(midpoint(A--B))*scale(abs(A-B)/2)*unitcircle;\n}\n\npair A=(0,0), B=(1,0), C=(2,0);\npath cleAB=circle(A,B);\npath cleAC=circle(A,C);\n\nfor(real t=0; t<length(cleAB); t+=0.01)\n  fill(circle(point(cleAB,t),point(cleAC,t)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0212_0710360.png",
    "code": "size(0,0);\n\npair A=0, B=(3cm,5cm), C=(6cm,0);\n\npair ctrl_rgt_A, ctrl_lft_B, ctrl_rgt_B, ctrl_lft_C;\nctrl_rgt_A=A+2cm*NE;\nctrl_lft_B=B+5cm*SW;\nctrl_rgt_B=B+2cm*SE;\nctrl_lft_C=C+5cm*NW;\n\ndraw(A..B..C);\ndraw(A.. controls ctrl_rgt_A and ctrl_lft_B ..B.. controls ctrl_rgt_B and ctrl_lft_C ..C,1mm+grey);\ndot(A--B--C,linewidth(6bp));\ndraw((A--ctrl_rgt_A),Arrow, p=grey);\ndraw((B--ctrl_rgt_B),Arrow, p=grey);\ndraw((B--ctrl_lft_B),Arrow, p=grey);\ndraw((C--ctrl_lft_C),Arrow, p=grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0213_01d3e34.png",
    "code": "size(6cm,6cm);\n\npair A, B, C;\nA=(0,0); B=(1,0); C=(0,1);\ndraw(A--B--C--cycle);\ndraw (midpoint(A--B) -- C);\ndraw (B+0.5*(C-B) -- A);\ndraw (interp(A,C,0.5) -- B);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0214_041ff01.png",
    "code": "size(8cm,0);\n\npath apath=(0,0)..(1,1)..(2,.5){dir(0)};\n\ndraw(subpath(apath,0,length(apath)/2),1pt+.8red,EndPenMargin);\ndraw(subpath(apath,length(apath)/2,length(apath)),1pt+.8blue,BeginPenMargin);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0215_07ea76f.png",
    "code": "size(0,0);\n\npath p= (5mm,-5mm){right} .. (4cm,0);\n\nfor(int i=10; i<360; i+=10)\n  draw(rotate(i)*p);\n\ndraw(p,red+1mm);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0216_073ea92.png",
    "code": "size(6cm,0);\n\npair A=0, B=(1,0), C=(.7,1);\n\nvoid fillangle(picture pic=currentpicture,\n\t       pair O=0, pair A, pair B,\n\t       real radius=10,\n\t       pen p=grey)\n{\n  picture tpic;\n  int n=sgn(radius);\n  real a1=degrees(shift(-O)*A,false);\n  real a2=degrees(shift(-O)*B,false);\n  fill(tpic,(0,0)--arc((0,0), -radius, max(a1,a2), min(a1,a2),true)--cycle, p=p);\n  add(pic,tpic,O);\n}\n\ndraw(A--B--C--cycle);\n\nreal r1=15, r2=20;\nfillangle(A,B,C,r1,.8red);\nfillangle(A,B,C,-r2);\nfillangle(B,A,C,r1,.8red);\nfillangle(B,A,C,-r2);\nfillangle(C,B,A,r1,.8red);\nfillangle(C,B,A,-r2);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0217_0959c1e.png",
    "code": "import palette;\nimport math;\nimport graph3;\n\ntypedef real fct(real);\ntypedef pair zfct2(real,real);\ntypedef real fct2(real,real);\n\nreal binomial(real n, real k)\n{\n  return gamma(n+1)/(gamma(n-k+1)*gamma(k+1));\n}\n\nreal factorial(real n) {\n  return gamma(n+1);\n}\n\nreal[] pdiff(real[] p)\n{ // p(x)=p[0]+p[1]x+...p[n]x^n\n  // retourne la d\u00e9riv\u00e9e de p\n  real[] dif;\n  for (int i : p.keys) {\n    if(i != 0) dif.push(i*p[i]);\n  }\n  return dif;\n}\n\nreal[] pdiff(real[] p, int n)\n{ // p(x)=p[0]+p[1]x+...p[n]x^n\n  // d\u00e9riv\u00e9e n-i\u00e8me de p\n  real[] dif={0};\n  if(n >= p.length) return dif;\n  dif=p;\n  for (int i=0; i < n; ++i)\n    dif=pdiff(dif);\n  return dif;\n}\n\nfct operator *(real y, fct f)\n{\n  return new real(real x){return y*f(x);};\n}\n\nzfct2 operator +(zfct2 f, zfct2 g)\n{// D\u00e9fini f+g\n  return new pair(real t, real p){return f(t,p)+g(t,p);};\n}\n\nzfct2 operator -(zfct2 f, zfct2 g)\n{// D\u00e9fini f-g\n  return new pair(real t, real p){return f(t,p)-g(t,p);};\n}\n\nzfct2 operator /(zfct2 f, real x)\n{// D\u00e9fini f/x\n  return new pair(real t, real p){return f(t,p)/x;};\n}\n\nzfct2 operator *(real x,zfct2 f)\n{// D\u00e9fini x*f\n  return new pair(real t, real p){return x*f(t,p);};\n}\n\nfct fct(real[] p)\n{ // convertit le tableau des coefs du poly p en fonction polyn\u00f4me\n  return new real(real x){\n    real y=0;\n    for (int i : p.keys) {\n      y += p[i]*x^i;\n    }\n    return y;\n  };\n}\n\nreal C(int l, int m)\n{\n  if(m < 0) return 1/C(l,-m);\n  real OC=1;\n  int d=l-m, s=l+m;\n  for (int i=d+1; i <=s ; ++i) OC *= i;\n  return 1/OC;\n}\n\nint csphase=-1;\nfct P(int l, int m)\n{ // Polyn\u00f4me de Legendre associ\u00e9\n  // http://mathworld.wolfram.com/LegendrePolynomial.html\n  if(m < 0) return (-1)^(-m)*C(l,-m)*P(l,-m);\n  real[] xl2;\n  for (int k=0; k <= l; ++k) {\n    xl2.push((-1)^(l-k)*binomial(l,k));\n    if(k != l) xl2.push(0);\n  }\n  fct dxl2=fct(pdiff(xl2,l+m));\n  return new real(real x){\n    return (csphase)^m/(2^l*factorial(l))*(1-x^2)^(m/2)*dxl2(x);\n  };\n}\n\nzfct2 Y(int l, int m)\n{// http://fr.wikipedia.org/wiki/Harmonique_sph%C3%A9rique#Expression_des_harmoniques_sph.C3.A9riques_normalis.C3.A9es\n  return new pair(real theta, real phi) {\n    return sqrt((2*l+1)*C(l,m)/(4*pi))*P(l,m)(cos(theta))*expi(m*phi);\n  };\n}\n\nreal xyabs(triple z){return abs(xypart(z));}\n\nsize(16cm);\ncurrentprojection=orthographic(0,1,1);\n\nzfct2 Ylm;\n\ntriple F(pair z)\n{\n  //   real r=0.75+dot(0.25*I,Ylm(z.x,z.y));\n  //   return r*expi(z.x,z.y);\n  real r=abs(Ylm(z.x,z.y))^2;\n  return r*expi(z.x,z.y);\n}\n\nint nb=4;\nfor (int l=0; l < nb; ++l) {\n  for (int m=0; m <= l; ++m) {\n    Ylm=Y(l,m);\n\n    surface s=surface(F,(0,0),(pi,2pi),60);\n    s.colors(palette(s.map(xyabs),Rainbow()));\n\n    triple v=(-m,0,-l);\n    draw(shift(v)*s);\n    label(\"$Y_\"+ string(l) + \"^\" + string(m) + \"$:\",shift(X/3)*v);\n  }\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0218_00a5afd.png",
    "code": "import graph3;\n\nsize(8cm,0);\ncurrentprojection=orthographic(1,1,1);\n\nlimits((0,-2,0),(2,2,2));\n\nxaxis3(\"$x$\", OutTicks());\nyaxis3(\"$y$\", OutTicks());\nzaxis3(\"$z$\", OutTicks());\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0219_0064712.png",
    "code": "settings.render=0;\nimport graph3;\nimport palette;\nsize(15cm,0);\ncurrentprojection=orthographic(2,-2,2.5);\n\nreal f(pair z) {\n  real u=z.x, v=z.y;\n  return (u/2+v)/(2+cos(u/2)*sin(v));\n}\n\nsurface s=surface(f,(0,0),(14,14),50,Spline);\ns.colors(palette(s.map(zpart),Gradient(yellow,red)));\n\ndraw(s);\n\nif(!is3D())\n  shipout(bbox(3mm,Fill(black)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0220_007ea3f.png",
    "code": "settings.render=0;\nimport graph3;\nsize(15cm);\n\ncurrentprojection=orthographic(4,2,4);\n\nreal r(real Theta, real Phi){return 1+0.5*(sin(2*Theta)*sin(2*Phi))^2;}\ntriple f(pair z) {return r(z.x,z.y)*expi(z.x,z.y);}\n\npen[] pens(triple[] z)\n{\n  return sequence(new pen(int i) {\n      real a=abs(z[i]);\n      return a < 1+1e-3 ? black : interp(blue, red, 2*(a-1));\n    },z.length);\n}\n\nsurface s=surface(f,(0,0),(pi,2pi),100,Spline);\n// Interpolate the corners, and coloring each patch with one color\n// produce some artefacts\ndraw(s,pens(s.cornermean()));\n\nif(!is3D())\n  shipout(bbox(3mm,Fill(black)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0221_04111af.png",
    "code": "import graph3;\n\nsize(8cm,0,IgnoreAspect);\ncurrentprojection=orthographic(1,1,1);\n\nlimits((0,-2,0), (2,2,2));\n\naxes3(\"$x$\",\"$y$\",\"$z$\",Arrow3);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0222_0716ef8.png",
    "code": "import graph3;\n\nsize(8cm,0);\ncurrentprojection=orthographic(1,1,1);\n\ndefaultpen(overwrite(SuppressQuiet));\n\nlimits((0,-2,0),(2,2,2));\n\nxaxis3(\"$x$\", InTicks(XY()*Label));\nyaxis3(\"$y$\", InTicks(XY()*Label));\nzaxis3(\"$z$\", OutTicks, p=red, arrow=Arrow3);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0223_0105a03.png",
    "code": "import graph3;\nimport palette;\n\nreal sinc(real x){return x != 0 ? sin(x)/x : 1;}\n\nreal f(pair z){\n  real value = (sinc(pi*z.x)*sinc(pi*z.y))**2;\n  return value^0.25;\n}\n\ncurrentprojection=orthographic(0,0,1);\n\nsize(10cm,0);\n\nsurface s=surface(f,(-5,-5),(5,5),100,Spline);\ns.colors(palette(s.map(zpart),Gradient((int)2^11 ... new pen[]{black,white})));\n\ndraw(planeproject(unitsquare3)*s,nolight);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0224_03f9f07.png",
    "code": "// Adapted from the documentation of Asymptote.\nimport graph3;\nimport contour;\ntexpreamble(\"\\usepackage{icomma}\");\n\nsize3(12cm, 12cm, 8cm, IgnoreAspect);\n\nreal sinc(pair z) {\n  real r=2pi*abs(z);\n  return r != 0 ? sin(r)/r : 1;\n}\n\nlimits((-2, -2, -0.2), (2, 2, 1.2));\ncurrentprojection=orthographic(1, -2, 0.5);\n\nxaxis3(rotate(90, X)*\"$x$\",\n       Bounds(Min, Min),\n       OutTicks(rotate(90, X)*Label, endlabel=false));\n\nyaxis3(\"$y$\", Bounds(Max, Min), InTicks(Label));\nzaxis3(\"$z$\", Bounds(Min, Min), OutTicks());\n\ndraw(lift(sinc, contour(sinc, (-2, -2), (2, 2), new real[] {0})), bp+0.8*red);\ndraw(surface(sinc, (-2, -2), (2, 2), nx=100, Spline), lightgray);\n\ndraw(scale3(2*sqrt(2))*unitdisk, paleyellow+opacity(0.25), nolight);\ndraw(scale3(2*sqrt(2))*unitcircle3, 0.8*red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0225_07b00f0.png",
    "code": "size(12cm,0,false);\nimport graph3;\nimport contour;\nimport palette;\n\ntexpreamble(\"\\usepackage{icomma}\");\n\nreal f(pair z) {return z.x*z.y*exp(-z.x);}\n\ncurrentprojection=orthographic(-2.5,-5,1);\n\ndraw(surface(f,(0,0),(5,10),20,Spline),palegray,bp+rgb(0.2,0.5,0.7));\n\nscale(true);\n\nxaxis3(Label(\"$x$\",MidPoint),OutTicks());\nyaxis3(Label(\"$y$\",MidPoint),OutTicks(Step=2));\nzaxis3(Label(\"$z=xye^{-x}$\",Relative(1),align=2E),Bounds(Min,Max),OutTicks);\n\nreal[] datumz={0.5,1,1.5,2,2.5,3,3.5};\n\nLabel[] L=sequence(new Label(int i) {\n    return YZ()*(Label(format(\"$z=%g$\",datumz[i]),\n                       align=2currentprojection.vector()-1.5Z,Relative(1)));\n  },datumz.length);\n\npen fontsize=bp+fontsize(10);\ndraw(L,lift(f,contour(f,(0,0),(5,10),datumz)),\n     palette(datumz,Gradient(fontsize+red,fontsize+black)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0226_0272014.png",
    "code": "settings.render=0;\nimport graph3;\nimport palette;\nsize(10cm,0);\ncurrentprojection=orthographic(2,-2,2.5);\n\nreal f(pair z) {\n  real u=z.x, v=z.y;\n  return (u/2+v)/(2+cos(u/2)*sin(v));\n}\n\nsurface s=surface(f,(0,0),(14,14),150,Spline);\ndraw(s,mean(palette(s.map(zpart),Gradient(yellow,red))));\n\nif(!is3D())\n  shipout(bbox(3mm,Fill(black)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0227_06a8b07.png",
    "code": "import graph3;\n\nsize(6cm,0);\ncurrentprojection=orthographic(1,1,1);\n\nlimits((-2,-2,0),(0,2,2));\n\nxaxis3(Label(\"$x$\",MidPoint), OutTicks());\nyaxis3(\"$y$\", InTicks());\nzaxis3(\"$z$\",XYEquals(-2,0), OutTicks());\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0228_037ffcb.png",
    "code": "// From documentation of Asymptote\nimport graph;\nimport palette;\nimport contour;\ntexpreamble(\"\\usepackage{icomma}\");\n\nsize(10cm,10cm,IgnoreAspect);\n\npair a=(0,0);\npair b=(5,10);\n\nreal fz(pair z) {\n  return z.x*z.y*exp(-z.x);\n}\nreal f(real x, real y) {return fz((x,y));}\n\nint N=200;\nint Divs=10;\nint divs=2;\n\ndefaultpen(1bp);\npen Tickpen=black;\npen tickpen=gray+0.5*linewidth(currentpen);\npen[] Palette=BWRainbow();\n\nscale(false);\n\nbounds range=image(f,Automatic,a,b,N,Palette);\n\nxaxis(\"$x$\",BottomTop,LeftTicks(pTick=grey, ptick=invisible, extend=true));\nyaxis(\"$y$\",LeftRight,RightTicks(pTick=grey, ptick=invisible, extend=true));\n\n// Major contours\nreal[] Cvals;\nCvals=sequence(11)/10 * (range.max-range.min) + range.min;\ndraw(contour(f,a,b,Cvals,N,operator ..),Tickpen);\n\n// Minor contours\nreal[] cvals;\nreal[] sumarr=sequence(1,divs-1)/divs * (range.max-range.min)/Divs;\nfor (int ival=0; ival < Cvals.length-1; ++ival)\n    cvals.append(Cvals[ival]+sumarr);\ndraw(contour(f,a,b,cvals,N,operator ..),tickpen);\n\npalette(\"$f(x,y)=xye^{-x}$\",range,point(NW)+(0,1),point(NE)+(0,0.25),Top,Palette,\n        PaletteTicks(N=Divs,n=divs,Tickpen,tickpen));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0229_035e551.png",
    "code": "import graph3;\nusepackage(\"icomma\");\n\nsize(8cm,0);\ncurrentprojection=orthographic(1.5,1,1);\n\nlimits((-2,-1,-.5), (0,1,1.5));\n\nxaxis3(\"$x$\",\n       Bounds(Both,Value),\n       OutTicks(endlabel=false));\n\nyaxis3(\"$y$\",\n       Bounds(Both,Value),\n       OutTicks(Step=.5,step=.25));\n\nzaxis3(\"$z$\", XYEquals(-2,0), InOutTicks(Label(align=Y-X)));\n\ndot(Label(\"\",align=Z), (-1,0,0), red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0230_08e91ea.png",
    "code": "import graph3;\n\nsize(8cm,0);\ncurrentprojection=orthographic(1,1,0.5);\nlimits((-2,-2,0),(0,2,2));\n\nxaxis3(Label(\"$x$\",align=Z),\n       Bounds(Min,Min),\n       OutTicks(endlabel=false,Step=1,step=0.5));\n\nyaxis3(\"$y$\", Bounds(),\n       OutTicks(pTick=0.8*red, ptick=lightgrey));\n\nzaxis3(\"$z$\", Bounds(),\n       OutTicks, p=red, arrow=Arrow3);\n\ndot(Label(\"\",align=Z), (-1,0,0), red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0231_09490de.png",
    "code": "import graph3;\nimport palette;\nimport contour;\nsize(14cm,0);\ncurrentprojection=orthographic(-1,-1.5,0.75);\ncurrentlight=(-1,0,5);\n\nreal a=1, b=1;\nreal f(pair z) { return a*(6+sin(z.x/b)+sin(z.y/b));}\nreal g(pair z){return f(z)-6a;}\n\n// The axes\nlimits((0,0,4a),(14,14,8a));\nxaxis3(Label(\"$x$\",MidPoint),OutTicks());\nyaxis3(Label(\"$y$\",MidPoint),OutTicks(Step=2));\nticklabel relativelabel()\n{\n  return new string(real x) {return (string)(x-6a);};\n}\nzaxis3(Label(\"$z$\",Relative(1),align=2E),Bounds(Min,Max),OutTicks(relativelabel()));\n\n// The surface\nsurface s=surface(f,(0,0),(14,14),100,Spline);\n\npen[] pens=mean(palette(s.map(zpart),Gradient(yellow,red)));\n\n// Draw the surface\ndraw(s,pens);\n// Project the surface onto the XY plane.\ndraw(planeproject(unitsquare3)*s,pens,nolight);\n\n// Draw contour for \"datumz\"\nreal[] datumz={-1.5, -1, 0, 1, 1.5};\nguide[][] pl=contour(g,(0,0),(14,14),datumz);\nfor (int i=0; i < pl.length; ++i)\n  for (int j=0; j < pl[i].length; ++j)\n    draw(path3(pl[i][j]));\n\n// Draw the contours on the surface\ndraw(lift(f,pl));\n\nif(!is3D())\n  shipout(bbox(3mm,Fill(black)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0232_086c2f3.png",
    "code": "settings.render=0;\nimport graph3;\nsize(15cm);\n\ncurrentprojection=orthographic(4,2,4);\n\nreal r(real Theta, real Phi){return 1+0.5*(sin(2*Theta)*sin(2*Phi))^2;}\ntriple f(pair z) {return r(z.x,z.y)*expi(z.x,z.y);}\n\npen[][] pens(triple[][] z)\n{\n  pen[][] p=new pen[z.length][];\n  for(int i=0; i < z.length; ++i) {\n    triple[] zi=z[i];\n    p[i]=sequence(new pen(int j) {\n\treal a=abs(zi[j]);\n\treturn a < 1+1e-3 ? black : interp(blue, red, 2*(a-1));},\n      zi.length);\n  }\n  return p;\n}\n\nsurface s=surface(f,(0,0),(pi,2pi),100,Spline);\n// Here we interpolate the pens, this looks smoother, with fewer artifacts\ndraw(s,mean(pens(s.corners())));\n\nif(!is3D())\n  shipout(bbox(3mm,Fill(black)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0233_00206d7.png",
    "code": "import graph3;\nngraph=200;\nsize(12cm,0);\ncurrentprojection=orthographic(-4,-4,5);\n\nreal x(real t), y(real t), z(real t);\n\nreal R=2;\nvoid xyzset(real s){\n  x=new real(real t){return (R+s*cos(t/2))*cos(t);};\n  y=new real(real t){return (R+s*cos(t/2))*sin(t);};\n  z=new real(real t){return s*sin(t/2);};\n}\n\n\nint n=ngraph;\nreal w=1;\nreal s=-w, st=2w/n;\npath3 p;\ntriple[][] ts;\nfor (int i=0; i <= n; ++i) {\n  xyzset(s);\n  p=graph(x,y,z,0,2pi);\n\n  ts.push(new triple[] {});\n  for (int j=0; j <= ngraph; ++j) {\n    ts[i].push(point(p,j));\n  }\n  s += st;\n}\n\npen[] pens={black, yellow, red, yellow, black};\ndraw(surface(ts, new bool[][]{}), lightgrey);\nfor (int i=0; i <= 4; ++i) {\n  xyzset(-w+i*w/2);\n  draw(graph(x,y,z,0,2pi), 2bp+pens[i]);\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0234_02516eb.png",
    "code": "import graph3;\nsize(16cm, 0);\n\ncurrentprojection=orthographic(4, 2, 4);\n\nreal r(real Theta, real Phi){return 1+0.5*(sin(2*Theta)*sin(2*Phi))^2;}\ntriple f(pair z) {return r(z.x, z.y)*expi(z.x, z.y);}\n\npen[][] pens(triple[][] z)\n{\n  pen[][] p=new pen[z.length][];\n  for(int i=0; i < z.length; ++i) {\n    triple[] zi=z[i];\n    p[i]=sequence(new pen(int j) {\n    real a=abs(zi[j]);\n\n    return a < 1+1e-3 ? black : interp(blue, red, 2*(a-1));}, zi.length);\n  }\n\n  return p;\n}\n\nsurface s=surface(f, (0, 0), (pi, 2pi), 100, Spline);\n// Here we determine the colors of vertexes (vertex shading).\n// Since the PRC output format does not support vertex shading of Bezier surfaces, PRC patches\n// are shaded with the mean of the four vertex colors.\ns.colors(pens(s.corners()));\ndraw(s);\n\nif(!is3D())\n  shipout(bbox(1mm, Fill(black)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0235_0008501.png",
    "code": "//Author: John Bowman\nimport graph;\nsize(2cm, 0);\nxlimits(0, 100);\nylimits(-50, 50);\nyaxis( \"y-value\" ,Left, Courier(\"m\", \"n\") + fontsize(12), RightTicks(\"%.4g\"));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0236_0837f80.png",
    "code": "import graph;\nimport patterns;\nusepackage(\"mathrsfs\");\n\nunitsize(2cm,1.5cm);\nreal xmin=-1,xmax=4;\nreal ymin=-1,ymax=5;\n\n// Definition of fonctions f and g :\nreal f(real x) {return 4x-x^2+4/(x^2+1)^2;}\nreal g(real x) {return x-1+4/(x^2+1)^2;}\n\n// Trace the curves :\npath Cf=graph(f,xmin,xmax,n=400);\npath Cg=graph(g,xmin,xmax,n=400);\ndraw(Cf,linewidth(1bp));\ndraw(Cg,linewidth(1bp));\nxlimits(xmin,xmax,Crop);\nylimits(ymin,ymax,Crop);\n\n// The grid :\nxaxis(BottomTop, xmin, xmax, Ticks(\"%\", Step=1, step=0.5, extend=true, ptick=lightgrey));\nyaxis(LeftRight, ymin, ymax, Ticks(\"%\", Step=1, step=0.5, extend=true, ptick=lightgrey));\n// The axis.\nxequals(Label(\"$y$\",align=W),0,ymin=ymin-0.25, ymax=ymax+0.25,\n        Ticks(NoZero,pTick=nullpen, ptick=grey),\n        p=linewidth(1pt), Arrow(2mm));\nyequals(Label(\"$x$\",align=S),0,xmin=xmin-0.25, xmax=xmax+0.25,\n        Ticks(NoZero,pTick=nullpen, ptick=grey),\n        p=linewidth(1pt), Arrow(2mm));\n\nlabelx(Label(\"$O$\",NoFill), 0, SW);\ndraw(Label(\"$\\vec{\\imath}$\",align=S,UnFill),\n     (0,0)--(1,0),scale(2)*currentpen,Arrow);\ndraw(Label(\"$\\vec{\\jmath}$\",align=W,UnFill),\n     (0,0)--(0,1),scale(2)*currentpen,Arrow);\ndot((0,0));\n\nlabel(\"$\\mathscr{C}_f$\",(2.25,f(2.25)),2N);\nlabel(\"$\\mathscr{C}_f$\",(2.25,g(2.25)),2S);\n\n// Les hachures.\npath vline=(1,-1)--(1,5);\nadd(\"hachure\",hatch(3mm));\nfill(buildcycle(vline,graph(f,1,4),graph(g,1,4)),pattern(\"hachure\"));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0237_04977c0.png",
    "code": "import graph;  \nunitsize(1cm);\n\nxlimits( -3, 2);  \nylimits( -3, 3);\n\nxaxis(\"$x$\", Ticks(ticklabel=OmitFormat(-2,-1,2),\n                   modify=NoZero,\n                   1bp+red,\n                   end=false),\n      arrow=Arrow);\n\nyaxis(\"$y$\", Ticks(ticklabel=OmitFormat(-2,-1,2,3),\n                   modify=NoZero,\n                   1bp+red,\n                   end=false),\n      arrow=Arrow);\n\nlabelx(scale(.75)*\"$O$\",0,SW);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0238_0373e52.png",
    "code": "size(8cm,0,false);\nimport graph;  \n\nxlimits(0, 200);  \nylimits(-50, 50);  \nyaxis( \"y-value\", Left);\nxaxis( \"x-value\", Bottom(true));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0239_0145c45.png",
    "code": "unitsize(x=1cm);\nimport graph;\n\nxlimits( -3, 2);\nylimits( -3, 3);\nxaxis(xmin=-3, xmax=2,Ticks(\"%\"));\nyaxis(ymin=-3, ymax=3, Ticks(\"%\"));\n\nlabelx(1,2S);\nlabely(1,2W);\nlabelx(\"$O$\",0,SW);\ndot((0,0));\ndraw(Label(\"$x$\",position=Relative(1),align=2S),(currentpicture.userMin().x-1,0)--(currentpicture.userMax().x+1,0),Arrow);\ndraw(Label(\"$y$\",position=Relative(1),align=2W),(0,currentpicture.userMin().y-1)--(0,currentpicture.userMax().y+1),Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0240_092c61a.png",
    "code": "import graph;  \nunitsize(1cm);\n\nxlimits( -3, 2);  \nylimits( -3, 3);  \nxaxis(\"$x$\",Ticks(\"%\",begin=false, end=false),arrow=Arrow);\nyaxis(\"$y$\",Ticks(\"%\",begin=false, end=false),arrow=Arrow);\n\nlabelx(1,2S);\nlabely(1,2W);\nlabelx(\"$O$\",0,SW);\ndot((0,0));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0241_0113d23.png",
    "code": "size(8cm,0,false);\nimport graph;\n\nxlimits( -100, 100);\nylimits( -50, 50);\nyaxis( \"y\" , RightTicks());\nxaxis( \"x\", Ticks());\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0242_0141d8b.png",
    "code": "import graph;\nunitsize(x=1cm, y=1.5cm);\n\nxlimits( -3, 2);\nylimits( -2, 2);\nxaxis(BottomTop, Ticks(\"%\",extend=true, ptick=lightgrey));\nyaxis(LeftRight, Ticks(\"%\",extend=true, ptick=lightgrey));\nxequals(Label(\"$y$\",align=2NW),0,ymin=-2.5, ymax=2.5, p=linewidth(1.5pt), Arrow(2mm));\nyequals(Label(\"$x$\",align=2SE),0,xmin=-3.5, xmax=2.5, p=linewidth(1.5pt), Arrow(2mm));\nlabelx(Label(\"$1$\",UnFill), 1);\nlabely(Label(\"$1$\",UnFill), 1);\nlabelx(\"$O$\",0,SW);\ndot((0,0));\n\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0243_08fa005.png",
    "code": "import graph;\nunitsize(x=1cm,y=2cm);\n\nstruct rational\n{\n  int p;\n  int q;\n  real ep=1/10^5;\n};\n\nrational operator init() {return new rational;}\n\nrational rational(real x, real ep=1/10^5)\n{\n  rational orat;\n  int q=1;\n  while (abs(round(q*x)-q*x)>ep)\n    {\n      ++q;\n    }\n  orat.p=round(q*x);\n  orat.q=q;\n  orat.ep=ep;\n  return orat;\n}\n\nint pgcd(int a, int b)\n{\n  int a_=abs(a), b_=abs(b), r=a_;\n  if (b_>a_) {a_=b_; b_=r; r=a_;}\n  while (r>0)\n    {\n      r=a_%b_;\n      a_=b_;\n      b_=r;\n    }\n  return a_;\n}\n\nstring texfrac(int p, int q,\n               string factor=\"\",\n               bool signin=false, bool factorin=true,\n               bool displaystyle=false,\n               bool zero=true)\n{\n  if (p==0) return (zero ? \"$0$\" : \"\");\n  string disp= displaystyle ? \"$\\displaystyle \" : \"$\";\n  int pgcd=pgcd(p,q);\n  int num= round(p/pgcd), den= round(q/pgcd);\n  string nums;\n  if (num==1)\n    if (factor==\"\" || (!factorin && (den !=1))) nums=\"1\"; else nums=\"\";\n  else\n    if (num==-1)\n      if (factor==\"\" || (!factorin && (den !=1))) nums=\"-1\"; else nums=\"-\";\n    else nums= (string) num;\n  if (den==1) return \"$\" + nums + factor + \"$\";\n  else\n    {\n      string dens= (den==1) ? \"\" : (string) den;\n      if (signin || num>0)\n        if (factorin)\n          return disp + \"\\frac{\" + nums + factor + \"}{\" + (string) dens + \"}$\";\n        else\n          return disp + \"\\frac{\" + nums + \"}{\" + (string) dens + \"}\"+ factor + \"$\";\n      else\n        {\n          if (num==-1)\n            if (factor==\"\" || !factorin) nums=\"1\"; else nums=\"\";\n          else nums=(string)(abs(num));\n        if (factorin)\n          return disp + \"-\\frac{\" + nums + factor + \"}{\" + (string) dens + \"}$\";\n        else\n          return disp + \"-\\frac{\" + nums + \"}{\" + (string) dens + \"}\"+ factor + \"$\";\n        }\n    }\n}\n\nstring texfrac(rational x,\n               string factor=\"\",\n               bool signin=false, bool factorin=true,\n               bool displaystyle=false,\n               bool zero=true)\n{\n  return texfrac(x.p, x.q, factor, signin, factorin, displaystyle, zero);\n}\n\nticklabel labelfrac(real ep=1/10^5, real factor=1.0,\n                    string symbol=\"\",\n                    bool signin=false, bool symbolin=true,\n                    bool displaystyle=false,\n                    bool zero=true)\n{\n  return new string(real x)\n    {\n      return texfrac(rational(x/factor), symbol, signin, symbolin, displaystyle, zero);\n    };\n}\n\nticklabel labelfrac=labelfrac();\n\nxlimits( -2pi, 2pi);\nylimits( -1, 1);\n\nyaxis(\"y\",LeftRight , Ticks(labelfrac,Step=.5,step=.25, ptick=grey, extend=true));\n\nxaxis(\"$\\theta$\",BottomTop, Ticks(labelfrac(factor=pi,symbol=\"\\pi\",symbolin=false),\n                           Step=pi/2, step=pi/4, ptick=grey, extend=true));\n\ndraw(graph(new real(real x){return sin(x);},-2pi,2pi));\ndraw(graph(new real(real x){return cos(x);},-2pi,2pi), .8red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0244_0495a17.png",
    "code": "// From Asymptote's FAQ\nimport graph; \n \nreal width=15cm; \nreal aspect=0.3; \n \npicture pic1,pic2; \n \nsize(pic1,width,aspect*width,IgnoreAspect); \nsize(pic2,width,aspect*width,IgnoreAspect); \n \nscale(pic1,false); \nscale(pic2,false); \n \nreal xmin1=6; \nreal xmax1=9; \nreal xmin2=8; \nreal xmax2=16; \n \nreal a1=1; \nreal a2=0.001; \n \nreal f1(real x) {return a1*sin(x/2*pi);} \nreal f2(real x) {return a2*sin(x/4*pi);} \n \ndraw(pic1,graph(pic1,f1,xmin1,xmax1)); \ndraw(pic2,graph(pic2,f2,xmin2,xmax2)); \n \nxaxis(pic1,Bottom,LeftTicks()); \nyaxis(pic1,\"$f_1(x)$\",Left,RightTicks); \n \nxaxis(pic2,Bottom,LeftTicks(Step=4)); \nyaxis(pic2,\"$f_2(x)$\",Left,RightTicks); \n \nyequals(pic1,0,Dotted); \nyequals(pic2,0,Dotted); \n \npair min1=point(pic1,SW); \npair max1=point(pic1,NE); \n \npair min2=point(pic2,SW); \npair max2=point(pic2,NE); \n \nreal scale=(max1.x-min1.x)/(max2.x-min2.x); \nreal shift=min1.x/scale-min2.x; \n \ntransform t1 = pic1.calculateTransform(); \ntransform t2 = pic2.calculateTransform(); \ntransform T=xscale(scale*t1.xx)*yscale(t2.yy); \n \nadd(pic1.fit()); \nreal height=truepoint(N).y-truepoint(S).y; \nadd(shift(0,-height)*(shift(shift)*pic2).fit(T)); \n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0245_06a4ca3.png",
    "code": "import graph;\n\nsize(10cm,6cm,IgnoreAspect);\n\ntypedef real realfcn(real);\nrealfcn F(real p){\n  return new real(real x){return sin(x)/sqrt(p);};\n};\n\nreal pmax=5;\nfor (real p=1; p<=pmax; p+=1)\n  {\n    draw(graph(F(p),-2pi,2pi),\n         ((p-1)/(pmax-1)*blue+(1-(p-1)/(pmax-1))*red),\n         \"$\\frac{\\sin(x)}{\\sqrt{\" + (string) p +\"}}$\");\n  }\n\nxlimits(-2pi,2pi);\nylimits(-1,1);\n\nxaxis(\"$x$\",BottomTop,Ticks);\nyaxis(\"$y$\",LeftRight,Ticks);\n\nattach(legend(),point(E),20E,UnFill);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0246_0328c4a.png",
    "code": "size(8cm,0);\nimport graph;\n\nxlimits( -100, 100);\nylimits( -50, 50);\nyaxis( \"$y$\" , Ticks(Label(currentpen+fontsize(8),align=E)));\nxaxis( \"$x$\", Ticks(Label(currentpen+fontsize(8))));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0247_07efe4e.png",
    "code": "size(6cm,0);\nimport graph;\n\nxlimits( -3, 3);\nylimits( -3, 3);\nxaxis(Ticks(\"%\"));\nyaxis(Ticks(\"%\"));\n\nlabelx(1,2S);\nlabely(1,2W);\nlabelx(\"$O$\",0,SW);\ndot((0,0));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0248_03cbaf9.png",
    "code": "import graph;\nimport interpolate;\n\nsize(15cm,10cm,IgnoreAspect);\n\nreal[] xpt,ypt;\nreal [] xpt={1, 2, 4, 5, 7, 8, 10};\nreal [] ypt={1, 2, 2, 3, 1, 0.5, 3};\n\n\nhorner h=diffdiv(xpt,ypt);\nfhorner L=fhorner(h);\n\nscale(false,true);\n\npen p=linewidth(1);\n\ndraw(graph(L,min(xpt),max(xpt)),dashed+black+p,\"Lagrange interpolation\");\ndraw(graph(xpt,ypt,Hermite(natural)),red+p,\"natural spline\");\ndraw(graph(xpt,ypt,Hermite(monotonic)),blue+p,\"monotone spline\");\nxaxis(\"$x$\",BottomTop,LeftTicks(Step=1,step=0.25));\nyaxis(\"$y$\",LeftRight,RightTicks(Step=5));\ndot(pairs(xpt,ypt),4bp+0.7black);\n\nattach(legend(),point(10S),30S);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0249_05c2fd0.png",
    "code": "import graph;\n\n// public real xunit=1cm,yunit=1cm;\n\nvoid graphicrules(picture pic=currentpicture, string prefix=defaultfilename, real unit=1cm,\n                  real xunit=unit != 0 ? unit : 0,\n                  real yunit=unit != 0 ? unit : 0,\n                  real xmin, real xmax, real ymin, real ymax)\n{\n  xlimits(xmin, xmax);\n  ylimits(ymin, ymax);\n  unitsize(x=xunit, y=yunit);\n}\n\nstruct rational\n{\n  int p;\n  int q;\n  real ep=1/10^5;\n};\n\nrational operator init() {return new rational;}\n\nrational rational(real x, real ep=1/10^5)\n{\n  rational orat;\n  int q=1;\n  while (abs(round(q*x)-q*x)>ep)\n    {\n      ++q;\n    }\n  orat.p=round(q*x);\n  orat.q=q;\n  orat.ep=ep;\n  return orat;\n}\n\nint pgcd(int a, int b)\n{\n  int a_=abs(a), b_=abs(b), r=a_;\n  if (b_>a_) {a_=b_; b_=r; r=a_;}\n  while (r>0)\n    {\n      r=a_%b_;\n      a_=b_;\n      b_=r;\n    }\n  return a_;\n}\n\nstring texfrac(int p, int q,\n               string factor=\"\",\n               bool signin=false, bool factorin=true,\n               bool displaystyle=false,\n               bool zero=true)\n{\n  if (p==0) return (zero ? \"$0$\" : \"\");\n  string disp= displaystyle ? \"$\\displaystyle \" : \"$\";\n  int pgcd=pgcd(p,q);\n  int num= round(p/pgcd), den= round(q/pgcd);\n  string nums;\n  if (num==1)\n    if (factor==\"\" || (!factorin && (den !=1))) nums=\"1\"; else nums=\"\";\n  else\n    if (num==-1)\n      if (factor==\"\" || (!factorin && (den !=1))) nums=\"-1\"; else nums=\"-\";\n    else nums= (string) num;\n  if (den==1) return \"$\" + nums + factor + \"$\";\n  else\n    {\n      string dens= (den==1) ? \"\" : (string) den;\n      if (signin || num>0)\n        if (factorin)\n          return disp + \"\\frac{\" + nums + factor + \"}{\" + (string) dens + \"}$\";\n        else\n          return disp + \"\\frac{\" + nums + \"}{\" + (string) dens + \"}\"+ factor + \"$\";\n      else\n        {\n          if (num==-1)\n            if (factor==\"\" || !factorin) nums=\"1\"; else nums=\"\";\n          else nums=(string)(abs(num));\n          if (factorin)\n            return disp + \"-\\frac{\" + nums + factor + \"}{\" + (string) dens + \"}$\";\n          else\n            return disp + \"-\\frac{\" + nums + \"}{\" + (string) dens + \"}\"+ factor + \"$\";\n        }\n    }\n}\n\nstring texfrac(rational x,\n               string factor=\"\",\n               bool signin=false, bool factorin=true,\n               bool displaystyle=false,\n               bool zero=true)\n{\n  return texfrac(x.p, x.q, factor, signin, factorin, displaystyle, zero);\n}\n\nticklabel labelfrac(real ep=1/10^5, real factor=1.0,\n                    string symbol=\"\",\n                    bool signin=false, bool symbolin=true,\n                    bool displaystyle=false,\n                    bool zero=true)\n{\n  return new string(real x)\n    {\n      return texfrac(rational(x/factor), symbol, signin, symbolin, displaystyle, zero);\n    };\n}\n\nticklabel labelfrac=labelfrac();\n\nvoid grid(picture pic=currentpicture,\n          real xmin=pic.userMin().x, real xmax=pic.userMax().x,\n          real ymin=pic.userMin().y, real ymax=pic.userMax().y,\n          real xStep=1, real xstep=.5,\n          real yStep=1, real ystep=.5,\n          pen pTick=nullpen, pen ptick=grey, bool above=true)\n{\n  xaxis(pic, BottomTop, xmin, xmax, Ticks(\"%\",extend=true,Step=xStep,step=xstep,pTick=pTick,ptick=ptick), above=above);\n  yaxis(pic, LeftRight, ymin, ymax, Ticks(\"%\",extend=true,Step=yStep,step=ystep,pTick=pTick,ptick=ptick), above=above);\n}\n\nvoid cartesianaxis(picture pic=currentpicture,\n                   Label Lx=Label(\"$x$\",align=S),\n                   Label Ly=Label(\"$y$\",align=W),\n                   real xmin=pic.userMin().x, real xmax=pic.userMax().x,\n                   real ymin=pic.userMin().y, real ymax=pic.userMax().y,\n                   real extrawidth=1, real extraheight=extrawidth,\n                   pen p=currentpen,\n                   ticks xticks=Ticks(\"%\",pTick=nullpen, ptick=grey),\n                   ticks yticks=Ticks(\"%\",pTick=nullpen, ptick=grey),\n                   bool above=true,\n                   arrowbar arrow=Arrow)\n{\n  extraheight= cm*extraheight/(2*pic.yunitsize);\n  extrawidth = cm*extrawidth/(2*pic.xunitsize);\n  yequals(pic, Lx, 0, xmin-extrawidth, xmax+extrawidth, p, above, arrow=arrow);\n  yequals(pic, 0, xmin, xmax, p, xticks, above);\n  xequals(pic, Ly, 0, ymin-extraheight, ymax+extraheight, p, above, arrow=arrow);\n  xequals(pic, 0, ymin, ymax, p, yticks, above);\n}\n\nvoid labeloij(picture pic=currentpicture,\n              Label Lo=Label(\"$O$\",NoFill),\n              Label Li=Label(\"$\\vec{\\imath}$\",NoFill),\n              Label Lj=Label(\"$\\vec{\\jmath}$\",NoFill),\n              pair diro=SW, pair diri=S, pair dirj=W,\n              pen p=scale(2)*currentpen,\n              filltype filltype=NoFill, arrowbar arrow=Arrow(2mm))\n{\n  if (Lo.filltype==NoFill) Lo.filltype=filltype;\n  if (Li.filltype==NoFill) Li.filltype=filltype;\n  if (Lj.filltype==NoFill) Lj.filltype=filltype;\n  labelx(pic, Lo, 0, diro, p);\n  draw(pic, Li, (0,0)--(1,0), diri, p, arrow);\n  draw(pic, Lj, (0,0)--(0,1), dirj, p, arrow);\n  dot(pic, (0,0), dotsize(p)+p);\n}\n\nvoid labeloIJ(picture pic=currentpicture,\n              Label Lo=Label(\"$O$\",NoFill),\n              Label LI=Label(\"$I$\",NoFill),\n              Label LJ=Label(\"$J$\",NoFill),\n              pair diro=SW, pair dirI=S, pair dirJ=W,\n              pen p=currentpen,\n              filltype filltype=NoFill, arrowbar arrow=Arrow)\n{\n  if (Lo.filltype==NoFill) Lo.filltype=filltype;\n  if (LI.filltype==NoFill) LI.filltype=filltype;\n  if (LJ.filltype==NoFill) LJ.filltype=filltype;\n  labelx(pic, LI, 1, dirI, p);\n  labely(pic, LJ, 1, dirJ, p);\n  labelx(pic, Lo, 0, diro, p);\n  dot(pic, (0,0), dotsize(p)+p);\n}\n\ngraphicrules(xunit=1cm, yunit=3cm,\n             xmin=-2pi, xmax=2pi, ymin=-1, ymax=1);\ngrid(xStep=pi/2, xstep=pi/4, yStep=.5, ystep=.25);\ncartesianaxis(xticks=Ticks(Label(UnFill),labelfrac(factor=pi,symbol=\"\\pi\",symbolin=true, zero=false),Step=pi/2, step=pi/4, ptick=grey),\n              yticks=Ticks(Label(UnFill),labelfrac(zero=false),Step=.5,step=.25, ptick=grey), arrow=None);\ndot(\"$O$\",(0,0),2SW);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0250_04ee0c6.png",
    "code": "size(8cm,0);\nimport graph;  \ntexpreamble(\"\\usepackage[frenchb]{babel}\");\n\nxlimits( -3pi, 3pi);  \nxaxis(BottomTop(), Ticks(Label(\"$\\nombre{%.2f}$\",red), Step=2pi, step=pi/5, pTick=.8red));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0251_012a406.png",
    "code": "size(8cm,0);\nimport graph;\ntexpreamble(\"\\usepackage[frenchb]{babel}\");\n\nxlimits( -10000, 10000);\nxaxis(BottomTop(), Ticks(Label(\"$\\nombre{%0.f}$\",red), Step=5000, step=500, pTick=.8red));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0252_040f896.png",
    "code": "size(10cm,0);\nimport contour;\nimport graph;\n\nxlimits( -3, 3);\nylimits( -3, 3);\nyaxis( \"$y$\" , Ticks());\nxaxis( \"$x$\", Ticks());\n\nreal f(real x, real y) {return x*y;}\n\ndraw(contour(f,(-3,-3),(3,3),new real[] {1}));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0253_0682523.png",
    "code": "import slopefield;\nimport graph;\nsize(8cm,0);\nreal f(real t) {return exp(-t^2);}\ndefaultpen();\n\nxlimits( 0,1);  \nylimits( 0,1);  \nyaxis( \"$y$\" ,LeftRight, RightTicks);\nxaxis( \"$x$\", Ticks());\ndraw(graph(f,0,1),\"$x\\longmapsto{}e^{-x^2}$\");\ndraw(curve((0,0),f,(0,0),(1,10)),linecap(0)+red,\"$\\displaystyle x\\longmapsto\\int_{0}^{x}e^{-t^2}\\;dt$\");\n\n//Test with three values calculated with Maxima:\ndot((.25,0.13816319508411845*sqrt(pi))^^(.5 , 0.26024993890652326*sqrt(pi)));\ndot((.75, 0.3555778168267576*sqrt(pi)));\n\nattach(legend(),point(10S),30S);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0254_04586ee.png",
    "code": "import graph;\n\nunitsize(x=1cm);\nreal f(real x){return x;}\nxlimits( -3, 3);\nylimits( -3, 3);\ndraw(graph(f,-3,3));\nxaxis(Label(\"$x$\",position=EndPoint, align=SE),Ticks(\"%\",extend=true), Arrow);\nyaxis(Label(\"$y$\",position=EndPoint, align=NW),Ticks(\"%\",extend=true), Arrow);\n\nlabelx(1,2S);\nlabely(1,2W);\nlabelx(\"$O$\",0,SE);\ndot((0,0));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0255_022f88c.png",
    "code": "size(8cm,0);\nimport graph;\n\nxlimits( -100, 100);  \nylimits( -50, 50);  \n\ndefaultpen(overwrite(SuppressQuiet));\n\nyaxis( \"$y$\" , Ticks(Label(.8red+fontsize(8),align=E)), p=.8red);\nxaxis( \"$x$\", Ticks(Label(.8blue+fontsize(8))), p=.8blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0256_0911cc6.png",
    "code": "import graph;\nsize(10cm);\n\nxaxis(\"$x$\", -2*pi,2*pi, Arrow);\nyaxis(\"$y$\", -4,4, Arrow);\n\ntypedef real realfcn(real); // Define new type: real function of real\n\nrealfcn TPC(int n) { //Return Taylor polynomial (degrees 2*n) of cos\n  return new real(real x) {\n    return sum(sequence(new real(int m){return (-1)^m*x^(2*m)/gamma(2*m+1);}, n+1));\n  };\n}\ndraw(graph(cos,-2pi,2pi), linewidth(2bp), legend=\"$\\cos$\");\n\nint n=6; // Number of curves\npen[] p={palered, lightred, red, blue, purple, green};\np.cyclic=true; // p[6]=p[0], p[7]=p[1], etc...\n\nfor (int i=0; i < n; ++i) {\n  draw(graph(TPC(i),-2*pi,2*pi), bp+p[i], legend=\"$T_{\"+(string)i+\"}$\");\n}\n\nxlimits(-2*pi,2*pi, Crop);\nylimits(-4,4, Crop);\n\nattach(legend(linelength=3mm),point(E),5E);\nshipout(bbox(Fill(lightgrey)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0257_0655787.png",
    "code": "size(8cm,0);\nimport graph;\n\nxlimits( -3pi, 3pi);\nylimits( -5, 5);\nyaxis( \"y\" , LeftRight(), RightTicks(pTick=.8red, ptick=lightgrey, extend=true));\nxaxis( \"x-value\", BottomTop(), Ticks(Label(\"$%.2f$\",red), Step=2pi, step=pi/5, pTick=.8red, ptick=lightgrey, extend=true));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0258_056dfd0.png",
    "code": "size(10cm,0);\nimport contour;\nimport stats;\nimport graph;\n\nxlimits( -5, 5);  \nylimits( -4, 5);  \nyaxis( \"$y$\" , Ticks(Label(currentpen+fontsize(8),align=E)));\nxaxis( \"$x$\", Ticks(Label(currentpen+fontsize(8))));\n\nreal f(real x, real y) {return x^2-x-y^2+3y-6;}\n\nint min=-5,\n  max=5,\n  n=max-min+1;\n\nreal[] value=sequence(min,max);\n\npen[] p=sequence(new pen(int i) {\n    return (value[i] >= 0 ? solid : dashed) + \n    (value[i] >= 0 ? (value[i]/max)*red : (value[i]/min)*blue) + \n    fontsize(4);\n  },n);\n\nLabel[] Labels=sequence(new Label(int i) {\n    return Label(value[i] != 0 ? (string) value[i] : \"\",Relative(unitrand()),(0,0),\n                 UnFill(1bp));\n  },n);\n\ndraw(Labels,contour(f,(-5,-5),(5,5),value),p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0259_0576703.png",
    "code": "import graph;\nunitsize(10cm,3cm);\n\ntypedef real realfcn(real);\n\nrealfcn betaFunction(real alpha, real beta){\n  return new real(real x){\n    return gamma(alpha+beta)/(gamma(alpha)+gamma(beta))*x^(alpha-1)*(1-x)^(beta-1);\n  };\n};\n\n\nreal[][] ab=new real[][] {{0.5,0.5},{5,1},{1,3},{2,2},{2,5}};\npen[] p=new pen[] {0.8*red, 0.8*green, 0.8*blue, 0.8*magenta, black};\n\nfor (int i=0; i < 5; ++i) {\n  draw(graph(betaFunction(ab[i][0],ab[i][1]),1e-5,1-1e-5), bp+p[i],\n       legend=\"$\\alpha=\"+(string)ab[i][0]+\",\\;\\beta=\"+(string)ab[i][1]+\"$\");\n}\n\nxlimits(0,1,Crop);\nylimits(0,2.6,Crop);\n\nxaxis(\"$x$\",BottomTop,linewidth(bp),Ticks);\nyaxis(\"$y$\",LeftRight,linewidth(bp),Ticks(Step=0.2));\n\nattach(scale(0.75)*legend(linelength=3mm),point(N),5S,UnFill);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0260_0349aa4.png",
    "code": "import graph;\nunitsize(1cm);\n\ntypedef real hermite(real);\n\n/**\n * Retourne la fonction polyn\u00f4me de Hermite\n * passant par les points m(x_i,y_i) de nombre d\u00e9riv\u00e9e d_i en ce point.\n * Return Hermite polynomial interpolation function\n * passing by the points m (x_i, y_i) of derived number d_i in this point.\n **/\nhermite hermite(pair [] m, real [] d)\n{\n  return new real(real x){\n    int n=m.length;\n    if (n != d.length) abort(\"Hermite: nombres de param\u00e8tres incorrectes.\");\n    real q,qk,s,y=0;\n    for (int k=0; k<n ; ++k) {\n      real q=1, qk=1, s=0;\n      for (int j=0; j<n; ++j)\n        {\n          if (j!=k){\n            q=q*(x-m[j].x)^2;\n            qk=qk*(m[k].x-m[j].x)^2;\n            s=s+1/(m[k].x-m[j].x);\n          }\n        }\n      y=y+q/qk*(m[k].y+(x-m[k].x)*(d[k]-2*s*m[k].y));\n    }\n    return y;\n  };\n}\n\npair[] m;\nreal[] d;\nint nbpt=5;\nreal xmin=-2pi,\nxmax=2pi,\nl=xmax-xmin,\nstep=l/(nbpt+1);\nfor (int i=1; i<=nbpt; ++i)\n  {\n    real x=xmin+i*step;\n    m.push((x,sin(x)));\n    draw(m[m.length-1],linewidth(2mm));\n    d.push(cos(x));\n  }\n\nxlimits(-2pi,2pi);\nylimits(-2,2);\nxaxis(\"$x$\",BottomTop,Ticks);\nyaxis(\"$y$\",LeftRight,Ticks);\n\ndraw(graph(sin,xmin,xmax),1mm+.8red,\"$x\\longmapsto{}\\sin x$\");\ndraw(graph(hermite(m,d),xmin,xmax),\"$x\\longmapsto{}H(x)$\");\n\nattach(legend(),point(10S),30S);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0261_081745f.png",
    "code": "//Author: John Bowman\nimport graph;\n\nsize(250,200,IgnoreAspect);\n\nreal Sin(real t, real w) {return sin(w*t);}\n\ndraw(graph(new real(real t) {return Sin(t,pi);},0,1),blue,\"$\\sin(\\pi x)$\");\ndraw(graph(new real(real t) {return Sin(t,2pi);},0,1),red,\"$\\sin(2\\pi x)$\");\n\nxaxis(\"$x$\",BottomTop,Ticks);\nyaxis(\"$y$\",LeftRight,Ticks);\n\nattach(legend(),point(E),20E,UnFill);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0262_08076fc.png",
    "code": "size(8cm,0);\nimport graph;  \n\nxlimits( -3pi, 3pi);  \nxaxis(BottomTop(), Ticks(Label(\"$%.2f$\",red), Step=2pi, step=pi/5, pTick=.8red));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0263_0788986.png",
    "code": "// An other solution...\nsize(8cm,0);\nimport graph;  \nusepackage(\"icomma\");\n\nxlimits( -3pi, 3pi);  \n\nxaxis(Ticks(Label(red), Step=2pi,step=pi/5,pTick=.8red));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0264_0282bcb.png",
    "code": "import graph;\n\nvoid graphicrules(picture pic=currentpicture, string prefix=defaultfilename, real unit=1cm,\n                  real xunit=unit != 0 ? unit : 0,\n                  real yunit=unit != 0 ? unit : 0,\n                  real xmin, real xmax, real ymin, real ymax)\n{\n  xlimits(xmin, xmax);\n  ylimits(ymin, ymax);\n  unitsize(x=xunit, y=yunit);\n}\n\nvoid grid(picture pic=currentpicture,\n          real xmin=pic.userMin().x, real xmax=pic.userMax().x,\n          real ymin=pic.userMin().y, real ymax=pic.userMax().y,\n          real xStep=1, real xstep=.5,\n          real yStep=1, real ystep=.5,\n          pen pTick=nullpen, pen ptick=grey, bool above=false)\n{\n  draw(pic,box((xmin,ymin),(xmax,ymax)),invisible);\n  xaxis(pic, BottomTop, xmin, xmax, Ticks(\"%\",extend=true,Step=xStep,step=xstep,pTick=pTick,ptick=ptick), above=above);\n  yaxis(pic, LeftRight, ymin, ymax, Ticks(\"%\",extend=true,Step=yStep,step=ystep,pTick=pTick,ptick=ptick), above=above);\n}\n\nvoid cartesianaxis(picture pic=currentpicture,\n                   Label Lx=Label(\"$x$\",align=S),\n                   Label Ly=Label(\"$y$\",align=W),\n                   real xmin=pic.userMin().x, real xmax=pic.userMax().x,\n                   real ymin=pic.userMin().y, real ymax=pic.userMax().y,\n                   real extrawidth=1, real extraheight=extrawidth,\n                   pen p=currentpen,\n                   ticks xticks=Ticks(\"%\",pTick=nullpen, ptick=grey),\n                   ticks yticks=Ticks(\"%\",pTick=nullpen, ptick=grey),\n                   bool above=true,\n                   arrowbar arrow=Arrow)\n{\n  extraheight= cm*extraheight/(2*pic.yunitsize);\n  extrawidth = cm*extrawidth/(2*pic.xunitsize);\n  yequals(pic, Lx, 0, xmin-extrawidth, xmax+extrawidth, p, above, arrow=arrow);\n  xequals(pic, Ly, 0, ymin-extraheight, ymax+extraheight, p, above, arrow=arrow);\n  yequals(pic, 0, xmin, xmax, p, xticks, above);\n  xequals(pic, 0, ymin, ymax, p, yticks, above);\n}\n\nvoid labeloij(picture pic=currentpicture,\n              Label Lo=Label(\"$O$\",NoFill),\n              Label Li=Label(\"$\\vec{\\imath}$\",NoFill),\n              Label Lj=Label(\"$\\vec{\\jmath}$\",NoFill),\n              pair diro=SW, pair diri=S, pair dirj=W,\n              pen p=scale(2)*currentpen,\n              filltype filltype=NoFill, arrowbar arrow=Arrow(2mm))\n{\n  if (Lo.filltype==NoFill) Lo.filltype=filltype;\n  if (Li.filltype==NoFill) Li.filltype=filltype;\n  if (Lj.filltype==NoFill) Lj.filltype=filltype;\n  labelx(pic, Lo, 0, diro, p);\n  draw(pic, Li, (0,0)--(1,0), diri, p, arrow);\n  draw(pic, Lj, (0,0)--(0,1), dirj, p, arrow);\n  dot(pic, (0,0), dotsize(p)+p);\n}\n\n//The figure starts here\ngraphicrules(yunit=1.5cm, xmin=-3, xmax=3, ymin=-2, ymax=2);\ngrid();\ncartesianaxis(arrow=None);\nlabeloij(UnFill);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0265_00f5f91.png",
    "code": "import graph;\nunitsize(1cm);\n\nxlimits( -3, 2);\nylimits( -3, 3);\nxaxis(\"$x$\",Ticks(ticklabel=NoZeroFormat,1bp+red,end=false),arrow=Arrow);\nyaxis(\"$y$\",Ticks(ticklabel=NoZeroFormat,1bp+red,end=false),arrow=Arrow);\n\nlabelx(scale(.75)*\"$O$\",0,SW);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0266_05800d2.png",
    "code": "size(8cm,0,false);\nimport graph;\n\nxlimits(0, 200);\nylimits(-50, 50);\nyaxis(\"y-value\");\nxaxis(\"x-value\");\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0267_075122c.png",
    "code": "import graph;  \nunitsize(1cm);\n\nxlimits( -3, 2);  \nylimits( -3, 3);  \nxaxis(\"$x$\",Ticks(modify=NoZero,1bp+red,end=false),arrow=Arrow);\nyaxis(\"$y$\",Ticks(modify=NoZero,1bp+red,end=false),arrow=Arrow);\n\nlabelx(scale(.75)*\"$O$\",0,SW);\n\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0268_08ddd4d.png",
    "code": "import graph;\n\nvoid graphicrules(picture pic=currentpicture, real unit=1cm,\n                  real xunit=unit != 0 ? unit : 0,\n                  real yunit=unit != 0 ? unit : 0,\n                  real xmin, real xmax, real ymin, real ymax)\n{\n  xlimits(xmin, xmax);\n  ylimits(ymin, ymax);\n  pic.unitsize(x=xunit,y=yunit);\n}\n\npicture millimeterpaper(picture pic=currentpicture, pair O=(0,0),\n                        real xmin=infinity, real xmax=infinity,\n                        real ymin=infinity, real ymax=infinity,\n                        pen p=.5bp+orange)\n{\n  picture opic;\n  real\n    cofx=pic.xunitsize/cm,\n    cofy=pic.yunitsize/cm;\n  real\n    xmin= (xmin == infinity) ? pic.userMin().x*cofx : xmin*cofx,\n    xmax= (xmax == infinity) ? pic.userMax().x*cofx : xmax*cofx,\n    ymin= (ymin == infinity) ? pic.userMin().y*cofy : ymin*cofy,\n    ymax= (ymax == infinity) ? pic.userMax().y*cofy : ymax*cofy;\n  path\n    ph=(xmin*cm,0)--(xmax*cm,0),\n    pv=(0,ymin*cm)--(0,ymax*cm);\n  real [] step={5, 1, .5, .1};\n  pen [] p_={ p, scale(.7)*p, scale(.4)*p, scale(.2)*p};\n\n  for (int j=0; j<4; ++j)\n    {\n      for (real i=O.y; i<= ymax; i+=step[j])\n        draw(opic, shift(0,i*cm)*ph, p_[j]);\n      for (real i=O.y; i>=ymin ; i-=step[j])\n        draw(opic, shift(0,i*cm)*ph, p_[j]);\n      for (real i=O.x; i<=xmax; i+=step[j])\n        draw(opic, shift(i*cm,0)*pv, p_[j]);\n      for (real i=O.x; i>=xmin; i-=step[j])\n        draw(opic, shift(i*cm,0)*pv, p_[j]);\n    }\n\n  return opic;\n}\n\ngraphicrules(xunit=2cm, yunit=1.5cm, xmin=-3, xmax=2, ymin=-2, ymax=2);\nadd(millimeterpaper(p=3bp+orange),(0,0));\nxaxis(xmin=-3, xmax=2, Ticks(\"%\"));\nyaxis(ymin=-2, ymax=2, Ticks(\"%\"));\nxequals(Label(\"$y$\",align=2NW),0,ymin=-2.25, ymax=2.25, p=linewidth(1.5pt), Arrow(2mm));\nyequals(Label(\"$x$\",align=2SE),0,xmin=-3.25, xmax=2.25, p=linewidth(1.5pt), Arrow(2mm));\nlabelx(Label(\"$1$\",UnFill), 1);\nlabely(Label(\"$1$\",UnFill), 1);\nlabelx(\"$O$\",0,SW);\ndot((0,0));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0269_070e5e6.png",
    "code": "size(6cm);\nbool counterclockwise(path g, int n=10^3)\n{\n  // Return \"true\" if \"g\" (SIMPLE CURVE i.e. NON CROSSED) is counterclockwise\n  // Retounre \"true\" si \"g\" (NON CROIS\u00c9) est dans le sens contraire des aiguilles d'une montre\n  if (!cyclic(g) || length(g)==0) abort(\"The function 'clocksize' needs cyclic path.\");\n  pair [] pt;\n  real l=length(g),\n    step=1/n,\n    t=0,\n    sa=0;\n  do {\n    sa +=point(g,t).x * (point(g,t+step).y - point(g,t-step).y);\n    t+=step;\n  } while (t<l);\n  return (sgn(sa) > 0);\n}\n\npath counterclockdirected(path g,int n=10^3)\n{\n  // Return \"g\" (SIMPLE CURVE i.e. NON CROSSED) counterclockwise\n  // Retourne \"g\" (NON CROIS\u00c9) dans le sens des aiguilles d'une montre\n  if (counterclockwise(g,n)) return g; else return reverse(g);\n}\n\npath p=unitcircle;\ndraw(counterclockdirected(reverse(p)),\n     Arrow(Relative(.1)), BeginBar);\ndraw(counterclockdirected(p),\n     Arrow(position=Relative(.2),FillDraw(red)), BeginBar);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0270_009dd62.png",
    "code": "size(6cm,0, false);\nbool counterclockwise(path g, pair z) {return windingnumber(g,z) > 0;}\n\npath counterclockdirected(path g,pair z)\n{\n  if (counterclockwise(g,z)) return g; else return reverse(g);\n}\n\npair z=(1,0);\ndot(z);\npath p=(0,0){N}..(4,0){N}..cycle;\ndraw(counterclockdirected(reverse(p),z),Arrow(Relative(.1)), BeginBar);\ndraw(counterclockdirected(p,z),Arrow(position=Relative(.2),FillDraw(red)), BeginBar);\n\npair z=(3,-2);\ndot(z);\npath p=(4,-2){N}..(0,-2){N}..cycle;\ndraw(counterclockdirected(reverse(p),z),Arrow(Relative(.1)), BeginBar);\ndraw(counterclockdirected(p,z),Arrow(position=Relative(.2),FillDraw(red)), BeginBar);\n\npair z=(1,-4.5);\ndot(z);\npath p=yscale(.75)*((0,-6){N}..(2,-6){S}..(0,-6){N}..(4,-6){S}..cycle);\ndraw(counterclockdirected(reverse(p),z),Arrow(Relative(.1)), BeginBar);\ndraw(counterclockdirected(p,z),Arrow(position=Relative(.2),FillDraw(red)), BeginBar);\n\npair z=(3,-8);\ndot(z);\npath p=shift((0,-3.5))*p;\ndraw(counterclockdirected(reverse(p),z),Arrow(Relative(.1)), BeginBar);\ndraw(counterclockdirected(p,z),Arrow(position=Relative(.2),FillDraw(red)), BeginBar);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0271_006f710.png",
    "code": "// Use of the windingnumber works also for CROSSED curves\n\nsize(8cm,10cm,false);\n\nimport math;\n\nbool counterclockwise(path g)\n{\n  // Return \"true\" if \"g\" is counterclockwise\n  // Retounre \"true\" si \"g\" est dans le sens contraire des aiguilles d'une montre\n  return (windingnumber(g,inside(g)) > 0);\n}\n\npath counterclockdirected(path g)\n{\n  if (counterclockwise(g)) return g; else return reverse(g);\n}\n\nguide p=randompath(30)..cycle;\ndraw(counterclockdirected(reverse(p)),Arrow(10bp,Relative(0.025)), BeginBar);\ndraw(counterclockdirected(p),Arrow(10bp,FillDraw(red),Relative(.05)), BeginBar);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0272_03b2494.png",
    "code": "size(8cm, false);\n\nreal signedArea(pair [] pt)\n{\n  // Return the signed area of a simple (NON CROSSED) polygon of vertex \"pt\"\n  // Retourne l'aire alg\u00e9brique d'un polygone NON CROIS\u00c9\n  pair [] pt_= copy(pt);\n  real n=pt.length,\n    sa=0;\n  pt_.push(pt_[0]);\n  pt_.push(pt_[1]);\n\n  for (int i=1; i<=n; ++i) sa +=pt_[i].x * (pt_[i+1].y - pt_[i-1].y);\n  return sa/2;\n}\n\nbool counterclockwise(pair [] pt)\n{\n  // Return \"true\" if the polygon (SIMPLE CURVE i.e. NON CROSSED)\n  // of vertex \"pt\" is counterclockwise\n  // Retourne \"true\" si le polygone (NON CROIS\u00c9) de sommets \"pt\"\n  // est dans le sens des aiguilles d'une montre\n  return (signedArea(pt) > 0);\n}\n\npair [] reverse(pair [] pt)\n{\n  pair [] pt_=copy(pt);\n  int begin=0, end=pt.length-1;\n  while (begin<end)\n    {\n      pair temp=pt_[begin];\n      pt_[begin]=pt_[end];\n      pt_[end]=temp;\n      ++begin; --end;\n    }\n  return pt_;\n}\n\npair [] counterclockdirected(pair [] pt)\n{\n  if (counterclockwise(pt)) return pt; else return reverse(pt);\n}\n\npath polygon(pair [] pt)\n{\n  int l=pt.length;\n  guide opath;\n  for (int i=0; i<l; ++i)\n    {\n      opath = opath--pt[i];\n    }\n  return opath;\n}\n\npair [] pg = {(0,0), (1,0), (1,1), (2,2), (-1,1)};\ndraw(polygon(pg)--cycle,\n     Arrow(Relative(.1)), BeginBar);\ndraw(polygon(counterclockdirected(reverse(pg)))--cycle,\n     Arrow(position=Relative(.2), FillDraw(red)), BeginBar);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0276_0035704.png",
    "code": "import bsp;\n\ntypedef path3[] shape;\n\nshape operator *(transform3 T, shape p){\n  shape os;\n  for(path3 g:p) os.push(T*g);\n  return os;\n}\n\n\npath3 path(triple[] T){\n  path3 P;\n  for(triple i:T) P=P--i;\n  return P;\n}\n\nvoid addshapes(face[] F, shape[] shp, pen drawpen=currentpen, pen fillpen=white)\n{\n  for(int i=0; i < shp.length; ++i)\n    for(int j=0; j < shp[i].length; ++j) {\n      path3 g=shp[i][j];\n      picture pic=F.push(g);\n      if(fillpen != nullpen) filldraw(pic,project(g),fillpen, drawpen);\n      else draw(pic,project(g),drawpen);\n      // filldraw(pic,g,currentlight.intensity(F[F.length-1].point)*fillpen, drawpen);\n    }\n}\n\nshape cylinder(real R=1, real H=1, int n=18){\n  shape Cyl;\n  triple[] CTop;\n  triple[] CBot;\n  for(int i=0; i <= n; ++i)\n    CBot.push((R*cos(2pi*i/n), R*sin(2pi*i/n),0));\n  CTop = CBot+(0,0,H);\n  for(int i=0; i < n; ++i)\n    Cyl.push(CBot[i]--CBot[i+1]--CTop[i+1]--CTop[i]--cycle);\n\n  path3 P=path(CBot)--cycle;\n  Cyl.push(P);\n  Cyl.push(shift(H*Z)*P);\n\n  return Cyl;\n}\n\n\nsize(10cm,0);\n\ncurrentprojection=orthographic(1,1,1);\n\nshape cyl1 = cylinder(R=1, H=2);\n\nshape[] group={cyl1};\n\nface[] hidden, visible;\naddshapes(hidden, group, drawpen=linewidth(bp));\naddshapes(visible, group, drawpen=dotted, fillpen=nullpen);\nadd(hidden);\nadd(visible);\n\nshipout(format=\"pdf\");\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0279_02044e1.png",
    "code": "size(12cm,0);\nimport bsp;\n\ncurrentprojection=orthographic(1,1.5,1);\n\npath3 xy=plane((1,0,0),(0,1,0),(0,0,0));\npath3 xz=rotate(90,X)*xy;\npath3 yz=rotate(-90,Y)*xy;\n\nface[] f;\nfilldraw(f.push(xy),project(xy),grey);\nfilldraw(f.push(xz),project(xz),grey);\nfilldraw(f.push(yz),project(yz),grey);\nadd(f);\n\ndraw(Label(\"$x$\",EndPoint), O--(1,0,0), Arrow3);\ndraw(Label(\"$y$\",EndPoint), O--(0,1,0), Arrow3);\ndraw(Label(\"$z$\",EndPoint), O--(0,0,1), Arrow3);\ndot(O);\n\npath[] ph=texpath(\"$\\displaystyle\\int_{-\\infty}^{+\\infty}e^{-\\alpha x^2}\\,dx=\n\\sqrt{\\frac{\\pi}{\\alpha}}$\");\nph =shift((0.5,0.5))*rotate(-45)*scale(1/abs(min(ph)-max(ph)))*ph;\n\nfilldraw(project(path3(ph,XYplane)),0.8*yellow);\nfilldraw(project(path3(ph,ZXplane)),0.8*yellow);\nfilldraw(project(path3(ph,YZplane)),0.8*yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0281_090205b.png",
    "code": "import bsp;\n\ntypedef path3[] shape;\n\nshape operator *(transform3 T, shape p){\n  shape os;\n  for(path3 g:p) os.push(T*g);\n  return os;\n}\n\n\npath3 path(triple[] T){\n  path3 P;\n  for(triple i:T) P=P--i;\n  return P;\n}\n\nvoid addshapes(face[] F, shape[] shp, pen drawpen=currentpen, pen fillpen=white)\n{\n  for(int i=0; i < shp.length; ++i)\n    for(int j=0; j < shp[i].length; ++j) {\n      path3 g=shp[i][j];\n      picture pic=F.push(g);\n      filldraw(pic, project(g), fillpen, drawpen);\n      // filldraw(pic, g, currentlight.intensity(F[F.length-1].point)*fillpen, drawpen);\n    }\n}\n\nshape cylinder(real R=1, real H=1, int n=18){\n  shape Cyl;\n  triple[] CTop;\n  triple[] CBot;\n  for(int i=0; i <= n; ++i)\n    CBot.push((R*cos(2pi*i/n), R*sin(2pi*i/n), 0));\n  CTop = CBot+(0, 0, H);\n  for(int i=0; i < n; ++i)\n    Cyl.push(CBot[i]--CBot[i+1]--CTop[i+1]--CTop[i]--cycle);\n\n  path3 P=path(CBot)--cycle;\n  Cyl.push(P);\n  Cyl.push(shift(H*Z)*P);\n\n  return Cyl;\n}\n\nshape rightslab(real x=1, real y=1, real z=1){\n  shape slab;\n  slab[0] = (0, 0, 0)--(1, 0, 0)--(1, 1, 0)--(0, 1, 0)--cycle;\n  slab[1] = (0, 0, 0)--(1, 0, 0)--(1, 0, 1)--(0, 0, 1)--cycle;\n  slab[2] = (1, 0, 0)--(1, 1, 0)--(1, 1, 1)--(1, 0, 1)--cycle;\n  slab[3] = (1, 1, 0)--(0, 1, 0)--(0, 1, 1)--(1, 1, 1)--cycle;\n  slab[4] = (0, 1, 0)--(0, 0, 0)--(0, 0, 1)--(0, 1, 1)--cycle;\n  slab[5] = (0, 0, 1)--(1, 0, 1)--(1, 1, 1)--(0, 1, 1)--cycle;\n  return scale(x, y, z)*slab;\n}\n\nsize(10cm, 0);\ntriple cam=(1600, 200, 150);\n//currentprojection=orthographic(1600, 800, 400);\ncurrentprojection=perspective(cam); //Far away!\ncurrentlight=rotate(-45, Z)*(cam+(0, 0, 1000));\n\nreal Blen = 180;\nreal Bwdt = 30;\nreal Bhgt = 3;\nreal Clen = 130;\nreal Cwdt = 50;\nreal Chgt = 50;\nreal cylr = 7.5;\nreal cylh = 37.0 ;\n\nshape slab1 = shift(-Bwdt/2*Y-Bhgt/2*Z+Clen/2*X)*rightslab(Blen, Bwdt, Bhgt);\nshape slab2 = shift(-Cwdt/2*Y-Chgt/2*Z-Clen/2*X)*rightslab(Clen, Cwdt, Chgt);\nshape cyl1 = shift((Blen+Clen/2-2*cylr)*X-(cylh/2)*Z)*cylinder(R=cylr, H=cylh);\n\nshape[] group1={slab1};\nshape[] group2={slab2};\nshape[] group3={cyl1};\n\nface[] faces;\naddshapes(faces, group1, drawpen=linewidth(0.25bp), fillpen=opacity(0.35)+red);\naddshapes(faces, group2, drawpen=linewidth(0.25bp), fillpen=opacity(0.5)+lightblue);\naddshapes(faces, group3, drawpen=linewidth(0.25bp), fillpen=opacity(0.5)+lightyellow);\nadd(faces);\n\nshipout(format=\"pdf\", bbox(3mm, white));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0284_0279e86.png",
    "code": "import stats;\n\npath ell(pair O, real a, real b, int t=1)\n{\n  path g=ellipse(O,a,b);\n  return subpath(g, t > 0 ? -1 : 1, t > 0 ? 1 : 3);\n}\n\nsize(10cm,0);\n\nreal a=1, b=1.75, d=0.1, dl=1.5;\npen p1=1.5bp+white, p2=1.5bp+black;\npen fp=grey;\nint n=8, nm=floor(n/2);\nreal step=1/n;\n\n\nfor (int line=0; line < 7; ++line) {\n  pair p=(0,0);\n  picture pic;\n  transform Sh=shift(line*(0,-2.5*b));\n  for (int i=0; i <= nm; ++i) {\n    real t=cos(i*step);\n    real t=0.75-i*step;\n    real na=a*(0.25+0.75*t);\n    path g1=ell(p,na,b,1);\n    path g2=ell(p,na,b,-1);\n    fill(pic, g1--g2--cycle, fp);\n    label(pic,(string)round(unitrand()),p,white);\n    draw(pic, g1, p1);\n    draw(pic, g2, p2);\n    if(i != 0) {\n      transform T=shift(-2p);\n      label(pic,(string)round(unitrand()),T*p,white);\n      fill(pic, T*(g1--g2--cycle), fp);\n      draw(pic, T*g1, p1);\n      draw(pic, T*g2, p2);\n    }\n    if(i != nm) p += na+d+dl*t;\n  }\n  add(Sh*pic);\n  pair M=(p.x,0);\n  picture pic2=reflect(M,M+N)*pic;\n  add(Sh*pic2);\n  add(Sh*reflect(3*M,3*M+N)*pic2);\n}\n\nshipout(bbox(1mm,Fill(lightgrey)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0285_0291fa2.png",
    "code": "eval(quote{\n    size(1cm);\n    defaultfilename='main1';\n    currentpen += 0.5bp;\n    currentpen += squarecap;\n    currentpen += miterjoin;\n    currentpen += linetype(\" \",false);\n    fill((773,1468)..controls (1032.33,1436) and (1162,1334.67)..(1162,1164)\n         --(1220,1020)--(1220,934)--(1206,876)\n         --(1235,789)--(1235,746)--(1220,674)\n         --(1235,587)--(1235,572)..controls (1235,505.332) and (1114.67,385.332)..(874,212)\n         ..controls (851.332,190) and (827.332,122.664)..(802,10)\n         --(787,10)--(773,25)--(773,39)\n         --(802,183)--(787,169)--(700,169)\n         --(672,197)--(672,212)..controls (747.332,212) and (819.332,231.332)..(888,270)\n         ..controls (820.664,308.664) and (787,390.332)..(787,515)\n         ..controls (767.664,515) and (758,568)..(758,674)\n         ..controls (746,674) and (731.664,726.664)..(715,832)\n         ..controls (686.332,842) and (672,871)..(672,919)\n         ..controls (695.332,994.332) and (767.332,1086)..(888,1194)\n         --(917,1194)--(917,1179)--(773,977)\n         ..controls (821,977) and (845,933.664)..(845,847)\n         ..controls (1027.67,991) and (1119,1096.67)..(1119,1164)\n         --(1119,1208)..controls (1072.33,1352) and (976,1424)..(830,1424)\n         --(787,1424)..controls (592.332,1271.33) and (472.332,1160.67)..(427,1092)\n         --(427,1064)..controls (494.332,969.332) and (528,902)..(528,862)\n         --(528,804)--(498,775)..controls (481.332,874.332) and (443,975.332)..(383,1078)\n         ..controls (338.332,1299.33) and (256.664,1410)..(138,1410)\n         --(95,1396)--(95,1366)..controls (143,1366) and (167,1332.67)..(167,1266)\n         --(167,1251)..controls (167,1231.67) and (152.332,1222)..(123,1222)\n         --(181,905)--(167,905)--(181,890)\n         --(167,717)--(167,630)--(153,616)\n         ..controls (153,476.664) and (215.332,361.332)..(340,270)\n         --(325,255)--(311,255)--(268,284)\n         ..controls (234,143.332) and (200.332,66.332)..(167,53)\n         --(153,97)..controls (201,202.332) and (225,279)..(225,327)\n         ..controls (157,369.664) and (123,456.332)..(123,587)\n         --(138,962)..controls (138,1036.67) and (94.6641,1166.67)..(8,1352)\n         --(8,1381)..controls (8,1406.33) and (46.332,1425.67)..(123,1439)\n         --(167,1439)..controls (269.664,1439) and (346.664,1347.33)..(398,1164)\n         --(412,1164)--cycle^^(51,1352)..controls (63,1280) and (82.332,1241.67)..(109,1237)\n         --(138,1280)--(66,1352)--cycle^^(888,818)\n         --(903,746)--(903,688)--(917,688)\n         ..controls (1090.33,802.664) and (1177,894)..(1177,962)\n         --(1177,1006)--(1162,1078)--(1148,1078)\n         --cycle^^(730,948)--(730,919)--(715,919)\n         ..controls (737.664,861) and (757,832)..(773,832)\n         --(802,832)--(802,905)--(758,948)\n         --cycle^^(1162,847)..controls (1162,813.664) and (1080.33,746.332)..(917,645)\n         --(932,544)--(932,515)--(946,515)\n         ..controls (1090,593) and (1176.67,674.664)..(1206,760)\n         --(1206,775)..controls (1199.33,823) and (1184.67,847)..(1162,847)\n         --cycle^^(773,789)..controls (773,715) and (792,671.664)..(830,659)\n         --(860,659)--(874,746)--(860,789)\n         --cycle^^(802,616)..controls (818,530) and (837.332,487)..(860,487)\n         --(888,515)--(888,602)--(874,616)\n         --(874,630)--cycle^^(960,457)--(975,357)\n         --(1192,530)--(1192,630)--cycle^^(845,443)\n         --(845,414)..controls (851,356) and (865.332,327)..(888,327)\n         --(903,327)..controls (925,327) and (939.332,351.332)..(946,400)\n         ..controls (936.664,438) and (917.332,457)..(888,457)\n         --cycle);\n    shipout(format=\"pdf\");\n  });\n\neval(quote{\n    size(1cm);\n    defaultfilename='main2';\n    currentpen += 0.5bp;\n    currentpen += squarecap;\n    currentpen += miterjoin;\n    currentpen += linetype(\" \",false);\n    fill((768,1854)..controls (819.332,1854) and (850.664,1804.67)..(862,1706)\n         ..controls (846.664,1473.33) and (833.332,1357)..(822,1357)\n         --(836,1343)--(809,1074)--(809,1061)\n         --(822,1061)..controls (877.332,1183) and (917.664,1245.67)..(943,1249)\n         ..controls (1057,1249) and (1164.67,1190.67)..(1266,1074)\n         ..controls (1304.67,1052) and (1354,980.332)..(1414,859)\n         ..controls (1458.67,836.332) and (1481,800.332)..(1481,751)\n         ..controls (1481,641) and (1387,448.332)..(1199,173)\n         ..controls (1139,173) and (1103,119.332)..(1091,12)\n         --(1078,12)..controls (1078,92.6641) and (1055.33,133)..(1010,133)\n         ..controls (974.664,133) and (957,146.332)..(957,173)\n         --(970,187)--(1051,160)..controls (1151.67,160) and (1227.67,240.664)..(1279,402)\n         --(1279,415)..controls (1249.67,415) and (1214,455.332)..(1172,536)\n         ..controls (1134,536) and (1093.67,563)..(1051,617)\n         ..controls (961,631) and (916,662.332)..(916,711)\n         ..controls (954.664,935) and (990.664,1047)..(1024,1047)\n         --(1037,1047)--(970,778)..controls (1028.67,778) and (1073.67,764.664)..(1105,738)\n         --(1118,738)..controls (1172,908) and (1199,1024.67)..(1199,1088)\n         ..controls (1173,1139.33) and (1096.67,1179.67)..(970,1209)\n         ..controls (940.664,1197) and (887,1116.33)..(809,967)\n         --(795,967)--(755,994)--(822,1733)\n         ..controls (822,1787) and (804,1818.33)..(768,1827)\n         ..controls (693.332,1827) and (612.664,1486.33)..(526,805)\n         --(607,751)--(607,725)--(594,725)\n         ..controls (502,743) and (421.332,796.664)..(352,886)\n         ..controls (297.332,948.664) and (234.332,980)..(163,980)\n         --(123,980)--(83,940)--(83,926)\n         ..controls (132.332,926) and (177,894.664)..(217,832)\n         --(190,792)..controls (235.332,745.332) and (320.664,606.332)..(446,375)\n         --(634,241)--(620,227)--(607,227)\n         --(594,241)--(580,241)..controls (553.332,106.332) and (531,39)..(513,39)\n         --(486,39)--(540,227)--(352,415)\n         ..controls (298.664,605.664) and (182,762.664)..(2,886)\n         ..controls (40.6641,975.332) and (90,1020)..(150,1020)\n         --(163,1020)..controls (248.332,1020) and (351.664,957.332)..(473,832)\n         --(486,832)..controls (574.664,1513.33) and (655.332,1854)..(728,1854)\n         --cycle^^(1252,1047)--(1145,698)--(1252,630)\n         ..controls (1273.33,630) and (1305,715.332)..(1347,886)\n         ..controls (1317.67,982) and (1286,1035.67)..(1252,1047)\n         --cycle^^(56,899)--(163,819)--(163,832)\n         ..controls (140.332,876.664) and (104.664,899)..(56,899)\n         --cycle^^(1373,832)..controls (1373,789.332) and (1346.33,708.664)..(1293,590)\n         --(1373,536)--(1387,536)--(1454,738)\n         ..controls (1436,794) and (1413.67,825.332)..(1387,832)\n         --cycle^^(970,751)--(957,738)..controls (975,684) and (992.664,657)..(1010,657)\n         --(1064,657)--(1105,698)--cycle^^(1131,671)\n         --(1105,630)..controls (1121.67,585.332) and (1157.33,563)..(1212,563)\n         --(1226,563)--(1226,577)..controls (1226,605.664) and (1194.33,637)..(1131,671)\n         --cycle^^(1266,563)--(1239,509)..controls (1253.67,464.332) and (1280.67,442)..(1320,442)\n         --(1347,483)--(1347,496)..controls (1332.33,532) and (1305.33,554.332)..(1266,563)\n         --cycle);\n    shipout(format=\"pdf\");\n  });\n\neval(quote{\n    size(1cm);\n    defaultfilename='main3';\n    currentpen += 0.5bp;\n    currentpen += squarecap;\n    currentpen += miterjoin;\n    currentpen += linetype(\" \",false);\n    fill((1012,1850)..controls (1079.33,1850) and (1127.33,1811.33)..(1156,1734)\n         --(1041,1171)--(1055,1171)--(1098,1200)\n         --(1142,1200)..controls (1203.33,1200) and (1275.67,1147)..(1359,1041)\n         ..controls (1407,1041) and (1440.67,992.664)..(1460,896)\n         ..controls (1363.33,579.332) and (1247.67,338.332)..(1113,173)\n         --(1113,159)--(1127,14)--(1113,0)\n         --(1098,0)--(1070,116)--(1070,173)\n         --(968,159)--(954,173)--(954,188)\n         ..controls (954.664,201.332) and (1012.33,230.332)..(1127,275)\n         ..controls (1177.67,330.332) and (1226,426.664)..(1272,564)\n         ..controls (1202,564) and (1149,592.664)..(1113,650)\n         ..controls (1076.33,650) and (1018.33,679)..(939,737)\n         ..controls (939,811.664) and (987.332,917.664)..(1084,1055)\n         --(1113,1026)--(1041,867)--(1055,867)\n         --(1156,809)--(1171,809)..controls (1228.33,913) and (1257,990.332)..(1257,1041)\n         --(1257,1113)--(1171,1156)--(1127,1156)\n         --(1012,1012)--(983,1012)--(983,1026)\n         --(1098,1749)--(1041,1807)--(1026,1807)\n         ..controls (975.332,1807) and (903,1546.67)..(809,1026)\n         --(752,997)..controls (693.332,997) and (649.664,1161)..(621,1489)\n         ..controls (583,1631) and (549.332,1708)..(520,1720)\n         ..controls (482,1705.33) and (463,1691)..(463,1677)\n         --(463,1633)..controls (487,1095.67) and (515.664,821)..(549,809)\n         --(607,766)--(578,737)--(231,925)\n         --(130,939)--(72,896)..controls (161.332,876.664) and (209.664,852.664)..(217,824)\n         --(202,723)..controls (298.664,648.332) and (366.332,566.332)..(405,477)\n         ..controls (494.332,319) and (566.332,227.332)..(621,202)\n         --(723,217)--(737,202)--(737,188)\n         ..controls (731,159.332) and (692.332,145)..(621,145)\n         --(578,159)..controls (568.664,53) and (549.332,0)..(520,0)\n         --(506,14)--(491,14)..controls (520.332,64.6641) and (535,122.664)..(535,188)\n         ..controls (313.664,573.332) and (145,766)..(29,766)\n         --(0,809)--(0,838)..controls (0,934.664) and (57.6641,983)..(173,983)\n         ..controls (266.332,967) and (358,918.664)..(448,838)\n         --(477,838)..controls (438.332,1167.33) and (419,1432.33)..(419,1633)\n         --(419,1705)..controls (419,1724.33) and (448,1743.67)..(506,1763)\n         ..controls (609.332,1763) and (681.664,1536.67)..(723,1084)\n         --(737,1070)--(737,1055)--(766,1055)\n         ..controls (860.664,1565.67) and (928,1821)..(968,1821)\n         --cycle^^(1315,1026)--(1214,766)..controls (1245.33,766) and (1288.67,737)..(1344,679)\n         --(1416,911)--(1416,925)..controls (1386,983.664) and (1352.33,1017.33)..(1315,1026)\n         --cycle^^(58,853)--(43,838)--(43,824)\n         --(159,752)--(173,766)--(173,824)\n         --cycle^^(1012,824)--(997,809)--(997,766)\n         ..controls (1013,727.332) and (1046.67,708)..(1098,708)\n         ..controls (1112.67,708) and (1127.33,727.332)..(1142,766)\n         ..controls (1098,803.332) and (1054.67,822.664)..(1012,824)\n         --cycle^^(1171,694)..controls (1171,636) and (1199.67,607)..(1257,607)\n         --(1286,607)--(1286,621)..controls (1286,673) and (1267,707)..(1229,723)\n         --(1200,723)--cycle);\n    shipout(format=\"pdf\");\n  });\n\neval(quote{\n    size(1cm);\n    defaultfilename='main4';\n    currentpen += 0.5bp;\n    currentpen += squarecap;\n    currentpen += miterjoin;\n    currentpen += linetype(\" \",false);\n    fill((522,1850)--(552,1850)..controls (624.664,1850) and (664.332,1700.67)..(671,1402)\n         --(656,1402)--(671,1358)--(686,1059)\n         --(716,1059)..controls (815.332,1517) and (905,1746)..(985,1746)\n         --(1029,1746)..controls (1069,1729.33) and (1089,1694.33)..(1089,1641)\n         ..controls (1089,1534.33) and (1044.33,1340.33)..(955,1059)\n         --(940,955)..controls (978,977) and (1067.33,1136)..(1208,1432)\n         --(1298,1462)..controls (1348,1448) and (1373,1413.33)..(1373,1358)\n         --(1373,1313)..controls (1373,1284.33) and (1303.33,1140)..(1164,880)\n         ..controls (1146.67,848) and (1126.67,709)..(1104,463)\n         ..controls (1054,321) and (1004.33,226.332)..(955,179)\n         --(940,119)--(955,104)--(955,15)\n         --(925,15)..controls (905,15) and (895,54.6641)..(895,134)\n         --(880,119)--(791,119)--(761,149)\n         ..controls (969.664,189.664) and (1074,393.664)..(1074,761)\n         ..controls (1074,825) and (1153.67,994)..(1313,1268)\n         --(1328,1373)--(1313,1417)--(1283,1417)\n         ..controls (1213.67,1332.33) and (1114.33,1168.33)..(985,925)\n         --(925,925)--(880,970)..controls (989.332,1331.33) and (1044,1570)..(1044,1686)\n         --(1029,1701)--(985,1701)..controls (944.332,1695) and (864.664,1476)..(746,1044)\n         ..controls (746,1004.67) and (731,985)..(701,985)\n         --(671,985)..controls (641.664,985) and (617,1238.67)..(597,1746)\n         --(537,1805)--(492,1805)--(448,1760)\n         --(448,1641)..controls (448,1478.33) and (462.664,1319.33)..(492,1164)\n         ..controls (532,1164) and (567,1109.33)..(597,1000)\n         ..controls (544.332,850.664) and (484.664,776)..(418,776)\n         --(418,761)--(463,701)--(463,671)\n         --(433,671)--(313,791)--(313,806)\n         ..controls (405.664,806) and (485.332,865.664)..(552,985)\n         --(537,1044)..controls (469.664,994.664) and (420,970)..(388,970)\n         --(343,1000)..controls (154.332,968) and (60,873.332)..(60,716)\n         --(60,627)..controls (94.6641,510.332) and (184,356)..(328,164)\n         ..controls (398,150.664) and (433,135.664)..(433,119)\n         --(433,90)--(358,104)--(343,104)\n         --(343,30)--(313,0)..controls (293,0) and (278.332,54.6641)..(269,164)\n         ..controls (99.6641,397.332) and (15,541.664)..(15,597)\n         ..controls (15,782.332) and (40,901.664)..(90,955)\n         --(0,1581)--(0,1596)..controls (0,1655.33) and (30,1695.33)..(90,1716)\n         ..controls (170.664,1716) and (240,1546.67)..(298,1208)\n         ..controls (312,1208) and (327,1163.33)..(343,1074)\n         --(358,1074)--(433,1134)--(403,1731)\n         ..controls (410.332,1810.33) and (450,1850)..(522,1850)\n         --cycle^^(45,1522)..controls (91.6641,1164) and (131.332,985)..(164,985)\n         --(298,1044)..controls (196,1452) and (131.332,1656)..(104,1656)\n         --(90,1656)..controls (60,1656) and (45,1611.33)..(45,1522)\n         --cycle^^(388,1044)--(403,1029)--(403,1015)\n         ..controls (447.664,1031) and (482.332,1060.67)..(507,1104)\n         --(477,1104)--cycle);\n    shipout(format=\"pdf\");\n  });\n\neval(quote{\n    size(1cm);\n    defaultfilename='main5';\n    currentpen += 0.5bp;\n    currentpen += squarecap;\n    currentpen += miterjoin;\n    currentpen += linetype(\" \",false);\n    fill((1029,1850)..controls (1053.67,1850) and (1077,1826.67)..(1099,1780)\n         --(1015,1002)--(1029,988)--(1043,988)\n         ..controls (1093.67,1063.33) and (1182,1285.67)..(1308,1655)\n         --(1349,1683)--(1433,1683)..controls (1469.67,1667.67) and (1488,1635.33)..(1488,1586)\n         --(1488,1530)--(1308,1002)--(1308,960)\n         ..controls (1345.33,990.664) and (1433.33,1125)..(1572,1363)\n         --(1655,1405)..controls (1711,1385.67) and (1739,1348.67)..(1739,1294)\n         ..controls (1698.33,1187.33) and (1605.67,1020.33)..(1461,793)\n         ..controls (1369,357) and (1276,139)..(1182,139)\n         ..controls (1172.67,46.332) and (1159,0)..(1141,0)\n         --(1113,0)--(1113,111)--(1043,111)\n         --(1015,139)--(1015,153)--(1099,153)\n         ..controls (1247,227.664) and (1321,334.332)..(1321,473)\n         ..controls (1335.67,476.332) and (1363.67,587.664)..(1405,807)\n         ..controls (1590.33,1080.33) and (1683,1251.67)..(1683,1321)\n         --(1683,1335)--(1669,1349)--(1669,1363)\n         ..controls (1618.33,1347) and (1511.67,1198.67)..(1349,918)\n         --(1335,904)--(1280,904)..controls (1261.33,904) and (1252,918)..(1252,946)\n         --(1447,1586)--(1447,1600)--(1405,1641)\n         --(1405,1655)..controls (1359.67,1655) and (1262.33,1432.67)..(1113,988)\n         --(1043,932)--(1015,932)--(974,974)\n         --(974,1002)--(1057,1767)--(1043,1808)\n         --(1015,1808)..controls (945,1808) and (880.332,1543.67)..(821,1015)\n         --(779,988)--(751,988)..controls (718.332,988) and (690.664,1219.67)..(668,1683)\n         ..controls (649.332,1683) and (640,1697)..(640,1725)\n         --(626,1739)--(584,1739)..controls (547.332,1719.67) and (529,1696.33)..(529,1669)\n         --(542,1349)--(529,1335)--(529,1321)\n         --(542,1266)--(542,1238)--(529,1238)\n         --(542,1168)--(542,960)--(556,821)\n         --(542,821)--(556,807)--(556,695)\n         ..controls (593.332,695) and (621.332,676.664)..(640,640)\n         --(612,612)..controls (606,640) and (569,654)..(501,654)\n         ..controls (361.664,811.332) and (245.664,890)..(153,890)\n         --(83,862)--(83,835)..controls (146.332,835) and (193,797.664)..(223,723)\n         --(209,682)..controls (255.664,632.664) and (339,493.332)..(459,264)\n         ..controls (521,199.332) and (586,167)..(654,167)\n         --(695,181)--(709,167)--(709,153)\n         --(682,125)--(598,125)--(584,28)\n         --(556,28)--(529,56)--(529,97)\n         --(542,111)--(403,264)..controls (261,541.332) and (154.332,694.332)..(83,723)\n         ..controls (45,735.664) and (17.332,759)..(0,793)\n         ..controls (32,885.664) and (97,932)..(195,932)\n         ..controls (281,918.664) and (383,849)..(501,723)\n         --(501,1029)--(487,1099)--(501,1099)\n         --(487,1113)--(487,1224)--(501,1238)\n         --(487,1252)--(501,1391)--(487,1461)\n         --(501,1461)--(487,1474)--(487,1711)\n         ..controls (510.332,1757) and (547.332,1780)..(598,1780)\n         ..controls (690.664,1780) and (737,1622.67)..(737,1308)\n         --(751,1224)--(737,1210)--(737,1196)\n         --(765,1043)..controls (787.664,1043) and (824.664,1261)..(876,1697)\n         ..controls (911.332,1799) and (962.332,1850)..(1029,1850)\n         --cycle^^(70,807)--(70,793)--(167,723)\n         --(167,737)..controls (161.664,759) and (129.332,782.332)..(70,807)\n         --cycle);\n    shipout(format=\"pdf\");\n  });\n\nfor (int n=1; n < 11; ++n) {\n  picture pic;\n  label(pic,graphic(\"main\"+(string)(n < 6 ? n : 5)+\".pdf\"),(n < 6 ? -3.5cm : 0,0));\n\n  if(n > 5)\n    label(pic, reflect(N,S)*graphic(\"main\"+(string)(n-5)+\".pdf\"), (1cm,0));\n\n  add(pic, (4*(n%6),-2*floor(n/6))*1cm);\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0286_0738e8b.png",
    "code": "size(10cm);\n\npath g=box((-1,-1),(1,1));\npen [] col= new pen[]{gray,yellow};\nreal k=sqrt(10)/4;\ntransform T=scale(k)*rotate(degrees(acos(17/(16*k*sqrt(2)))));\nint nb=10;\n\nfor (int i=0; i<nb; ++i) filldraw(T^i*g,col[i%2]);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0287_05f6ca1.png",
    "code": "// On d\u00e9finit ce qu'est l'objet 'rectangle'\n// On peut comparer \u00e7a \u00e0 la d\u00e9finition d'une voiture:\n// elle a des propri\u00e8t\u00e9s: la couleur, le nombre de portes...\n// elle a aussi des actions (ou m\u00e9thodes en info): ouvrir la porte, tourner le volant, avancer...\nstruct rectangle\n{\n  pair A,B,C,D; // Ce sont des propri\u00e9t\u00e9s (au sens informatique): ses sommets.\n  path path(){return A--B--C--D--cycle;} // Ceci est une action du rectangle (renvoyer le chemin du rectangle)\n};\n\n// Le constructeur de l'objet (une action qui renvoie l'objet).\n// Chaque fois que l'on va d\u00e9finir une variable 'X' de type 'rectangle'\n// c'est le retour de l'action rectangle.init qui est affect\u00e9 \u00e0 X.\nrectangle operator init() {return new rectangle;}\n\n// La fonction rectangle  qui prend en argument le coin inf\u00e9rieur gauche\n// et le coin sup\u00e9rieur droit retourne un rectangle.\n// On notera comment l'on r\u00e9cup\u00e9re une propri\u00e9t\u00e9 ou une action d'un\n// objet gr\u00e2ce au '.' en \u00e9crivant objet.propri\u00e9t\u00e9 ou\n// objet.action(les_param\u00e8tres).\nrectangle rectangle(pair gb, pair dh)\n{\n  rectangle retour;\n  retour.A=(dh.x,gb.y);\n  retour.B=dh;\n  retour.C=(gb.x,dh.y);\n  retour.D=gb;\n  return retour;\n}\n\n// On peut alors d\u00e9finir tous les op\u00e9rateurs que l'on veut sur les\n// rectangles.\n// par exemple la multiplication d'un r\u00e9al par un rectangle (x*rectangle):\nrectangle operator *(real x, rectangle rectangle)\n{\n  rectangle retour;\n  retour.A=rectangle.A+x*(rectangle.B-rectangle.A);\n  retour.B=rectangle.B+x*(rectangle.C-rectangle.B);\n  retour.C=rectangle.C+x*(rectangle.D-rectangle.C);\n  retour.D=rectangle.D+x*(rectangle.A-rectangle.D);\n  return retour;\n}\n\n// Ici, cette op\u00e9ration est commutative (rectangle*x=x*rectangle):\nrectangle operator *(rectangle rectangle,real x){return x*rectangle;}\n\n// On dit ici comment \"Asymptote\" doit convertir, si besoin est, un type 'rectangle'\n// en 'path' puis en 'path[]' (tableau de 'path').\npath operator cast(rectangle rectangle){return rectangle.path();}\npath[] operator cast(rectangle rectangle){return rectangle.path();}\n//Par exemple, dans le code:\n/*\n  rectangle SQ=rectangle((0,0), (1,1));\n  draw(SQ);\n*/\n// 'draw' attend un type 'path' donc 'SQ' sera automatiquement converti.\n\n\n// Maintenant on peut travailler avec cette structure\nsize(10cm);\nrectangle SQ=rectangle((0,0), (1,1));\npen [] col= new pen[]{gray,yellow};\n\nint nb=10;\nfor (int i=0; i<nb; ++i) {\n  filldraw(SQ,col[i%2]);\n  SQ=.25*SQ;\n }\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0288_0775a5d.png",
    "code": "size(10cm);\npath g=box((-1,-1),(1,1));\npen [] col= new pen[]{gray,yellow};\n\npath pairToSquare(pair pt){ return pt -- I*pt -- -pt -- -I*pt --cycle; }\n\nint nb=10;\nfor (int i=0; i<nb; ++i)\n  {\n    filldraw(g,col[i%2]);\n    g=pairToSquare(relpoint(g,1/16));\n  }\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0290_02c6bce.png",
    "code": "size(10cm);\npath cle=unitcircle;\n\npath roll(picture pic=currentpicture, real x, int nb=50)\n{\n  real stp=x/(nb-1);\n  return operator --(...\n                     sequence(new guide(int t){\n                         real tt=t*stp;\n                         return shift(expi(tt))*((x-tt)*(-sin(tt),cos(tt)));\n                       },nb));\n}\n\nreal y=4*pi;\npair yM=(1,y), ym=(1,-y);\n\nint nb=100;\nreal stp=2*y/nb;\n\npath[] g;\nfor (int i=1; i <= nb; ++i) {\n  real t=-y+i*stp;\n  g.push(roll(-y+i*stp/2,50+round(20*i*stp))--reverse(roll(y-i*stp/2,50+round(20*i*stp)))--cycle);\n}\n\npen p1=blue, p2=0.9*red;\nfill(g,p1);\nfill(g,fillrule(1)+p2);\nunfill(cle);\ndraw(cle,white);\nshipout(rotate(-90)*bbox(Fill(lightyellow)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0291_02b7bf1.png",
    "code": "// PDF version of this picture: ADDPDF\nimport labelpath;\n\nsize(17cm,0);\nusepackage(\"mathrsfs, amsfonts,amsmath,amssymb\");\npicture pic, pic1, pic2, pic3;\nreal u=1, Y=pi+0.2;\npath cle=scale(u)*unitcircle;\npath arcg=arc((0,0),1.5*u,115,155);\n\nvoid addtick(picture pic=currentpicture, Label L, pair z, pair dir=E, pen p=currentpen)\n{\n  transform R=rotate(degrees(dir));\n  real width=1.5mm;\n  Label L=L.copy();\n  L.position(z);\n  L.align(NoAlign,E);\n  L.align.dir=R*L.align.dir*1.3*width/mm;\n  L.p(p);\n  pic.add(new void(frame f, transform t) {\n      path g=(-width,0)--(width,0);\n      picture opic;\n      draw(opic,shift(t*z)*R*g,p);\n      add(f,opic.fit());\n    });\n  add(pic,L);\n}\n\npath roll(picture pic=currentpicture, real x, int nb=50)\n{\n  real stp=x/(nb-1);\n  return operator --(...\n                     sequence(new guide(int t){\n                         real tt=t*stp;\n                         return shift(expi(tt))*((x-tt)*(-sin(tt),cos(tt)));\n                       },nb));\n}\n\nlabelpath(\"\\tiny Sens direct\",reverse(arcg));\ndraw(arcg, Arrow());\ndraw(Label(\"$\\mathscr{C}$\",Relative(0.625)), cle,bp+grey);\n\ndot(\"$O$\", (0,0), S);\ndot(\"$0$\", point(cle,0));\ndot(\"$I$\", point(cle,0), 2*W);\ndot(\"$J$\", point(cle,1), 2*S);\ndot(\"$K$\", point(cle,2), 2*W);\ndot(\"$L$\", point(cle,3), 2*N);\n\ndraw(\"$1$\",(0,0)--point(cle,2),Arrows);\n\npic.add(currentpicture);// Save the common picture.\n\n// Starting picture 1\npair yM=(u,Y*u), ym=(u,-Y*u);\ndraw(ym--yM, linewidth(bp), Arrow(TeXHead));\narrow(\"\\underline{Axe des r\\'eels}\",(u,-0.75*Y*u),W,1cm);\n\nreal x=2.2, y=-1.25;\naddtick(Label(\"$1$\", align=E),(u,1));\naddtick(Label(\"$2$\", align=E),(u,2));\naddtick(Label(\"$-1$\", align=E),(u,-1));\naddtick(Label(\"$x$\", align=E),(u,x));\naddtick(Label(\"$y$\", align=E),(u,y));\n\npic1.add(currentpicture);\nerase();\n\n// Starting picture 2\nadd(pic);\nreal t=x+0.1;\n\ndraw((u,0)--yM, bp+grey, Arrow(TeXHead));\npath tg=arc((0,0),u,0,degrees(t));\ndraw(tg,linewidth(bp));\naddtick(Label(\"$1$\", align=E),u*(cos(1),sin(1)),dir(degrees(1.0)));\naddtick(Label(\"$1$\", align=E),(u,1), grey);\n\naddtick(Label(\"$2$\", align=E),(u,2),grey);\naddtick(Label(\"$\\frac{\\pi}{2}$\", align=E),(u,pi/2),grey);\naddtick(Label(\"$\\pi$\", align=E),(u,pi),grey);\naddtick(Label(\"$-1$\", align=E),(u,-1));\naddtick(Label(\"$x$\", align=E),(u,x), grey);\naddtick(Label(\"$x$\", align=E),u*(cos(x),sin(x)),dir(degrees(x)));\naddtick(Label(\"$y$\", align=E),(u,-x));\n\ndot(\"$M$\", u*expi(x), -2*u*expi(x));\n\ndraw(Label(\"+\",Relative(0.5)), roll(x), dotted, Arrow(Relative(0.5)));\ndraw(roll(1), dotted);\ndraw(Label(\"+\",Relative(0.5)), roll(pi/2), dotted, Arrow(Relative(0.5)));\ndraw(Label(\"+\",Relative(0.5)), roll(pi,100), dotted, Arrow(Relative(0.5)));\n\npath g=u*expi(t)--shift(u*expi(t))*((Y-t)*u*expi(pi/2+t));\ndraw(g,linewidth(bp), Arrow(TeXHead));\naddtick(Label(\"$\\pi$\", align=E),arcpoint(g,(pi-t)*u),expi(t));\n\npic3.add(currentpicture);\ndraw(ym--(u,0), linewidth(bp));\npic2.add(currentpicture);\nerase();\n\n// Starting picture 3\n\ndraw(ym--(u,0), linewidth(bp)+grey);\npath tg=arc((0,0),u,0,degrees(-t));\ndraw(tg,linewidth(bp));\naddtick(Label(\"$-1$\", align=E),u*(cos(-1),sin(-1)),dir(degrees(-1.0)));\naddtick(Label(\"$-1$\", align=E),(u,-1), grey);\n\naddtick(Label(\"$-2$\", align=E),(u,-2),grey);\naddtick(Label(\"$-\\frac{\\pi}{2}$\", align=E),(u,-pi/2),grey);\naddtick(Label(\"$-\\pi$\", align=E),(u,-pi),grey);\n\ndot(\"$N$\", u*expi(-x), -2*u*expi(-x));\n\ng=roll(-x);\ndraw(Label(\"$-$\",align=2*I*dir(g,0.5),Relative(0.5)), g, dotted, Arrow(NoFill,Relative(0.5)));\ng=roll(-1);\ndraw(g, dotted);\ng=roll(-pi/2);\ndraw(Label(\"$-$\",align=2*I*dir(g,0.5),Relative(0.5)), g, dotted, Arrow(NoFill,Relative(0.5)));\ng=roll(-pi,100);\ndraw(Label(\"$-$\",align=2*I*dir(g,0.5),Relative(0.5)), g, dotted, Arrow(NoFill,Relative(0.5)));\n\ng=u*expi(-t)--shift(u*expi(-t))*((Y-t)*u*expi(-pi/2-t));\ndraw(g, linewidth(bp), Arrow(TeXHead));\naddtick(Label(\"$-\\pi$\", align=E),arcpoint(g,(pi-t)*u),expi(-t));\n\n\n////////////////////////////////////////////////////////////\npic3.add(currentpicture);\nerase();\n\nadd(pic1);\nadd(shift(4*u,0)*pic2);\nadd(shift(8*u,0)*pic3);\nshipout(format=\"pdf\");\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0318_0446c40.png",
    "code": "size(4cm,0);\ndotfactor*=5;\n\ndot(scale(2)*\"A\",(0.5,1),5N);\n\nlayer();\n\ndot(scale(2)*\"B\",(1.5,1),5N);\nfilldraw(scale(2)*unitsquare, lightgray+opacity(.5));\n\nshipout(bbox(5mm,black,RadialShade(lightblue,darkblue)), \"pdf\");\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0323_06843f3.png",
    "code": "size(10cm,0);\ntransform T=rotate(10)*xscale(1.1);\npath c1=T*unitcircle, c2=T*scale(5)*unitcircle;\nreal l1=length(c1), l2=length(c2);\n\nfill(scale(8)*shift(-0.5,-0.5)*unitsquare,blue);\nint n=500;\nreal step=1/n;\nfor (int i=0; i < n; ++i) {\n  real t=i*step;\n  path g1=subpath(c1,t*l1,(t+step)*l1);\n  path g2=subpath(c2,t*l2,(t+step)*l2);\n  pair A=(relpoint(c1,t)+relpoint(c2,t))/2;\n  pair B=(relpoint(c1,t+step)+relpoint(c2,t+step))/2;\n  path sector=g1--reverse(g2)--cycle;\n  pen trans=opacity(((2-(2*i/n)^1.5))/2);\n  axialshade(sector,trans+i/n*white,A,trans+(i+1)/n*white,B);\n}\nshipout(bbox(lightblue+white,Fill),format=\"pdf\");\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0337_02e6e44.png",
    "code": "size(6cm,0);\n\n//Circular paving with the unit hexagonal picture \"hexa\"\npicture pavehexagonal(picture hexa, int depth=1)\n{\n  picture opic;\n  pair center;\n  real a,ap,r,rp,r_d=180/pi;\n\n  add(opic, hexa);\n\n  for(int j=0; j<depth; ++j)\n    {\n      for (int i=1; i<=6; ++i)\n\t{\n\t  a=i*60-30;\n\t  r=j*sqrt(3);\n\t  center=r*(rotate(a)*(1,0));\n\t  add(opic, shift(center)*hexa);\n\t  rp=r;\n\t  ap=0;\n\t  for (real k=0; k<j-1; ++k)\n\t    {\n\t      r=sqrt((1.5*(j-1 - k))^2 + 3/4*(j+1 + k)^2);\n\t      ap+=r_d*acos((rp^2 + r^2 - 3)/(2*r*rp));\n\t      center=r*(rotate(a + ap)*(1,0));\n\t      add(opic, shift(center)*hexa);\n\t      rp=r;\n\t    }\n\t}\n    }\n  return opic;\n}\n\npicture hexa;\nfill(hexa, polygon(6));\npath inh=(0,0)--(.6,sqrt(3)/4)--(.5,sqrt(3)/2)--cycle;\n\nfor(int i=0; i<6; ++i)\n  {\n    fill(hexa, rotate(60*i)*inh,.5red);\n  }\n\ndraw(hexa, inh);\nadd(rotate(45)*pavehexagonal(hexa,10));\nclip(scale(10)*shift(-.5,-.5)*unitsquare);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0338_0819317.png",
    "code": "size(10cm,0);\n\ntransform r60=rotate(60);\n\npair A=(sqrt(3)/2,-.5);\npair B=r60*A, C=r60*B, D=r60*C, E=r60*D, F=r60*E;\n\npath AB=A{dir(90)}..(.6,.5)..B{dir(0)};\npath DE=shift(E-A)*reverse(AB);\npath BC=B{dir(45)}..(.75,.7){dir(150)}..{dir(135)}(.65,.75){dir(70)}..(.5,1.25)..C{dir(255)};\npath EF=shift(F-B)*reverse(BC);\npath CD=C{dir(255)}..(-.4,.5){dir(200)}..D{dir(160)};\npath FA=shift(A-C)*reverse(CD);\n\ndraw(A--B--C--D--E--F--cycle,linewidth(2pt));\ndraw(AB,2pt+.8red);\ndraw(DE,2pt+.8red);\ndraw(BC,2pt+.8blue);\ndraw(EF,2pt+.8blue);\ndraw(CD,2pt+.8green);\ndraw(FA,2pt+.8green);\n\npicture hexa;\npicture eye;\n\nfilldraw(hexa,AB--BC--CD--DE--EF--FA--cycle,black,white);\nfilldraw(eye,rotate(5)*xscale(.4)*unitcircle,white);\nfilldraw(hexa,subpath(AB,1,2)--subpath(BC,0,2){dir(225)}..{dir(245)}cycle,.1red+yellow,white);\ndraw(hexa,point(BC,0.1){dir(115)}.. (.8,.55) ..(.6,.65){dir(180)},yellow+grey);\nfilldraw(eye,rotate(5)*xscale(.4)*unitcircle,white);\nfill(eye,rotate(5)*shift(0,-.1)*xscale(.25)*scale(.5)*unitcircle);\nadd(hexa,shift(.6,.9)*scale(.1)*eye);\n\nadd(shift(3,0)*hexa);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0339_07360c0.png",
    "code": "size(15cm,0);\n\ntransform r60=rotate(60);\npicture hexa;\npicture eye;\n\npair A=(sqrt(3)/2,-.5);\npair B=r60*A, C=r60*B, D=r60*C, E=r60*D, F=r60*E;\n\n//Body - corps\npath AB=A{dir(90)}..(.6,.5)..B{dir(0)};\npath DE=shift(E-A)*reverse(AB);\npath BC=B{dir(45)}..(.75,.7){dir(150)}..{dir(135)}(.65,.75){dir(70)}..(.5,1.25)..C{dir(255)};\npath EF=shift(F-B)*reverse(BC);\npath CD=C{dir(255)}..(-.4,.5){dir(200)}..D{dir(160)};\npath FA=shift(A-C)*reverse(CD);\n\nfilldraw(hexa,AB--BC--CD--DE--EF--FA--cycle,black,white);\n\n//Nozzle - bec\nfilldraw(hexa,subpath(AB,1,2)--subpath(BC,0,2){dir(225)}..{dir(245)}cycle,.1red+yellow,white);\ndraw(hexa,point(BC,0.1){dir(115)}.. (.8,.55) ..(.6,.65){dir(180)},yellow+grey);\n\n//Eye - oeil\nfilldraw(eye,rotate(5)*xscale(.4)*unitcircle,white);\nfilldraw(eye,rotate(5)*xscale(.4)*unitcircle,white);\nfill(eye,rotate(5)*shift(0,-.1)*xscale(.25)*scale(.5)*unitcircle);\nadd(hexa,shift(.6,.9)*scale(.1)*eye);\n\n//Circular paving with the unit hexagonal picture \"hexa\"\npicture pavehexagonal(picture hexa, int depth=1)\n{\n  picture opic;\n  pair center;\n  real a,ap,r,rp,r_d=180/pi;\n\n  add(opic, hexa);\n\n  for(int j=0; j<depth; ++j)\n    {\n      for (int i=1; i<=6; ++i)\n {\n   a=i*60-30;\n   r=j*sqrt(3);\n   center=r*(rotate(a)*(1,0));\n   add(opic, shift(center)*hexa);\n   rp=r;\n   ap=0;\n   for (real k=0; k<j-1; ++k)\n     {\n       r=sqrt((1.5*(j-1 - k))^2 + 3/4*(j+1 + k)^2);\n       ap+=r_d*acos((rp^2 + r^2 - 3)/(2*r*rp));\n       center=r*(rotate(a + ap)*(1,0));\n       add(opic, shift(center)*hexa);\n       rp=r;\n     }\n }\n    }\n  return opic;\n}\n\nadd(pavehexagonal(rotate(30)*hexa,3));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0340_028ce45.png",
    "code": "size(10cm,0);\n\ntransform r60=rotate(60);\npicture hexa;\n\npair A=(1,0);\npair B=r60*A, C=r60*B, D=r60*C, E=r60*D, F=r60*E;\n\nreal ad=30;\nreal tensio=.15;\npath AB=A {dir(120-ad)} .. shift(tensio*dir(30))*midpoint(A--B)  .. B {dir(120+ad)};\npath BC=reverse(rotate(240,B)*AB);\npath CD=reverse(rotate(240,C)*BC);\npath DE=reverse(rotate(240,D)*CD);\npath EF=reverse(rotate(240,E)*DE);\npath FA=reverse(rotate(240,F)*EF);\n\nreal lux=-.3, sq=sqrt(3)/2;\nradialshade(hexa,AB--BC--CD--DE--EF--FA--cycle,\n\t    lightgrey,(lux*sq,lux/2),0,\n\t    grey,(lux*sq,lux/2),1+abs(lux));\n\n//Circular paving with the unit hexagonal picture \"hexa\"\npicture pavehexagonal(picture hexa, int depth=1)\n{\n  picture opic;\n  pair center;\n  real a,ap,r,rp,r_d=180/pi;\n\n  add(opic, hexa);\n\n  for(int j=0; j<depth; ++j)\n    {\n      for (int i=1; i<=6; ++i)\n {\n   a=i*60-30;\n   r=j*sqrt(3);\n   center=r*(rotate(a)*(1,0));\n   add(opic, shift(center)*hexa);\n   rp=r;\n   ap=0;\n   for (real k=0; k<j-1; ++k)\n     {\n       r=sqrt((1.5*(j-1 - k))^2 + 3/4*(j+1 + k)^2);\n       ap+=r_d*acos((rp^2 + r^2 - 3)/(2*r*rp));\n       center=r*(rotate(a + ap)*(1,0));\n       add(opic, shift(center)*hexa);\n       rp=r;\n     }\n }\n    }\n  return opic;\n}\n\nadd(pavehexagonal(hexa,4));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0341_024de3a.png",
    "code": "size(10cm,0);\n\ntransform r60=rotate(60);\n\npair A=(1,0);\npair B=r60*A, C=r60*B, D=r60*C, E=r60*D, F=r60*E;\n\nreal ad=30;\nreal tensio=.25;\npath AB=A {dir(120-ad)} .. shift(tensio*dir(30))*midpoint(A--B)  .. B {dir(120+ad)};\npath BC=reverse(rotate(240,B)*AB);\npath CD=reverse(rotate(240,C)*BC);\npath DE=reverse(rotate(240,D)*CD);\npath EF=reverse(rotate(240,E)*DE);\npath FA=reverse(rotate(240,F)*EF);\npath pth1=AB--BC--CD--DE--EF--FA;\n\nreal tensio=.5;\npath AB=A {dir(120-ad)} .. shift(tensio*dir(30))*midpoint(A--B)  .. B {dir(120+ad)};\npath BC=reverse(rotate(240,B)*AB);\npath CD=reverse(rotate(240,C)*BC);\npath DE=reverse(rotate(240,D)*CD);\npath EF=reverse(rotate(240,E)*DE);\npath FA=reverse(rotate(240,F)*EF);\npath pth2=AB--BC--CD--DE--EF--FA;\n\n\n//Circular paving with the unit hexagonal picture \"hexa\"\npicture pavehexagonal(picture hexa, int depth=1)\n{\n  picture opic;\n  pair center;\n  real a,ap,r,rp,r_d=180/pi;\n\n  add(opic, hexa);\n\n  for(int j=0; j<depth; ++j)\n    {\n      for (int i=1; i<=6; ++i)\n {\n   a=i*60-30;\n   r=j*sqrt(3);\n   center=r*(rotate(a)*(1,0));\n   add(opic, shift(center)*hexa);\n   rp=r;\n   ap=0;\n   for (real k=0; k<j-1; ++k)\n     {\n       r=sqrt((1.5*(j-1 - k))^2 + 3/4*(j+1 + k)^2);\n       ap+=r_d*acos((rp^2 + r^2 - 3)/(2*r*rp));\n       center=r*(rotate(a + ap)*(1,0));\n       add(opic, shift(center)*hexa);\n       rp=r;\n     }\n }\n    }\n  return opic;\n}\n\npicture hexa, hexat;\n\nreal lux=-.3, sq=sqrt(3);\nradialshade(hexa,pth1--cycle,\n\t    lightgrey,(lux*sq/2,lux/2),0,\n\t    grey,(lux*sq/2,lux/2),1+abs(lux));\n\n\nadd(hexat,scale(1/(3*sq))*pavehexagonal(hexa,5));\nclip(hexat,pth2--cycle);\ndraw(hexat,pth2);\nadd(pavehexagonal(hexat,4));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0342_093efba.png",
    "code": "size(10cm,0);\n\nvoid zigzag(int k)\n{\n  real t=180/k;\n  pair o=(0,0), m=dir(t),\n    n=rotate(180-2*t,m)*o,\n    b=rotate(4*t-180,n)*m,\n    c=rotate(180-6*t,b)*n,\n    nn=reflect(o,b)*n;\n\n  path lo=m--n--b--nn--cycle,\n    p=o--m--n--b--c--cycle,\n    pp=reflect(o,b)*p;\n\n  for (int i=0; i <= k; ++i){\n    filldraw(rotate(2*t*i,o)*p,.5*(red+blue));\n    filldraw(rotate(2*t*i,o)*pp,0.25(red+blue));\n    filldraw(rotate(2*t*i,o)*lo,(red+blue));\n  }\n}\n\nzigzag(25);\nshipout(bbox(3mm,2mm+miterjoin+black,FillDraw(0.5*blue)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0343_00ea5a6.png",
    "code": "size(10cm,0);\n\npicture pavehexagonal(int depth=1)\n{\n  picture opic;\n  path hexa=polygon(6);\n  pair center;\n  real a,ap,r,rp,r_d=180/pi;\n\n  for(int j=0; j<depth; ++j)\n    {\n      for (int i=1; i<=6; ++i)\n\t{\n\t  a=i*60-30;\n\t  r=j*sqrt(3);\n\t  center=r*(rotate(a)*(1,0));\n\t  filldraw(opic, shift(center)*hexa, j/depth*.8red+(1-j/depth)*.8*blue);\n\t  //Uncomment to see centers of hexagons\n\t  dot(opic, shift(center)*midpoint(point(hexa,0)--point(hexa,3)));\n\t  //Uncomment to see circles passing by centers\n\t  //draw(opic, scale(r)*unitcircle, j/depth*red+(1-j/depth)*blue);\n\t  rp=r;\n\t  ap=0;\n\t  for (real k=0; k<j-1; ++k)\n\t    {\n\t      r=sqrt((1.5*(j-1 - k))^2 + 3/4*(j+1 + k)^2);\n\t      ap+=r_d*acos((rp^2 + r^2 - 3)/(2*r*rp));\n\t      center=r*(rotate(a + ap)*(1,0));\n\t      filldraw(opic, shift(center)*hexa, j/depth*.8*red+(1-j/depth)*.8*blue);\n\t      //Uncomment to see the centers of hexagons\n\t      //dot(opic, shift(center)*midpoint(point(hexa,0)--point(hexa,3)));\n\t      rp=r;\n\t      //Uncomment to see circles passing by centers\n\t      //draw(opic, scale(r)*unitcircle, j/depth*red+(1-j/depth)*blue);\n            }\n        }\n    }\n  return opic;\n}\n\n\nadd(pavehexagonal(7));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0344_06d536b.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\n// show(currentcoordsys);\n\npoint F1=(1,0);\npoint F2=(4,1);\ndot(\"$F_1$\",F1,W);\ndot(\"$F_2$\",F2);\n\n// Enlarge the bounding box of the current picture\ndraw(box((0,-2), (5,4)), invisible);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"hyperbola\" signature=\"hyperbola(point,point,real,bool)\"/></asyxml>*/\nhyperbola h=hyperbola(F1, F2, 0.9);\ndraw(h, linewidth(3mm));\ndraw(h.A1, grey);\ndraw(h.A2, grey);\ndraw(h.D1);\ndraw(h.D2);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"hyperbola\" signature=\"hyperbola(point,real,real,real)\"/></asyxml>*/\ndraw(hyperbola(h.C, h.a, h.b, h.angle), 2mm+green);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"hyperbola\" signature=\"hyperbola(bqe)\"/></asyxml>*/\ndraw(hyperbola(equation(h)), 1mm+red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"hyperbola\" signature=\"conj(hyperbola)\"/></asyxml>*/\nhyperbola ch=conj(h);\ndraw(ch, blue);\ndraw(ch.A1, 0.5blue);\ndraw(ch.A2, 0.5blue);\ndraw(ch.D1);\ndraw(ch.D2);\ndot(\"${V'}_1$\", ch.V1, NE);\ndot(\"${V'}_2$\", ch.V2, SW);\ndot(\"${F'}_1$\", ch.F1, S);\ndot(\"${F'}_2$\", ch.F2, N);\n\ndot(\"$V_1$\", h.V1, 2E, linewidth(2mm));\ndot(\"$V_2$\", h.V2, 2W, linewidth(2mm));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0345_00300e9.png",
    "code": "import geometry;\nsize(11cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(2,-2);\ndot(\"$A$\",A,S,red);\n\ncircle C=circle(A,2);\ndraw(C);\ndistance(\"$R=2$\",A,point(C,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"angpoint(explicit circle,real)\"/></asyxml>*/\ndot(\"angpoint(C, 90)\", angpoint(C,90),NW);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"angabscissa(real,polarconicroutine)\"/></asyxml>*/\ndot(\"angpoint(C, 180)\", point(C,angabscissa(180)), W);\n// point(C,angabscissa(180)) can be replaced by angpoint(C,180)\n\ndot(\"angpoint(C, 270)\", angpoint(C,270),SE);\ndot(\"angpoint(C, 405)\", angpoint(C,405),NE);\ndot(\"angpoint(C, -45)\", angpoint(C,-45),SE);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0346_0697268.png",
    "code": "import geometry;\nunitsize(2cm);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-2.5,2);\ndot(\"$A$\",A,S);\npoint B=A+(cos(0.5),cos(1));\ndot(\"$B$\",B,S);\n\npoint F=(-1,0.5);\ndot(\"$F$\",F,NW);\n\nparabola pb=parabola(F,0.2,130);\ndraw(pb);\nline l=line(A,B);\ndraw(l);\npoint M=intersectionpoints(l,pb)[0];\npoint P=intersectionpoints(l,pb)[1];\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"dot(picture,Label,explicit point,align,string,pen)\"/></asyxml>*/\ndot(\"\",M,2E,linewidth(2mm));\ndot(\"$M$\",M,2W);\ndot(\"\",P,2E,linewidth(2mm));\ndot(\"$P$\",P,2W);\n\npair p=A-(4,2.5);\ntransform t=shift((0,-0.3));\ntransform T=shift((4,0));\nreal x;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"angabscissa(parabola,point)\"/></asyxml>*/\nx=angabscissa(pb,M).x;\nlabel(\"angabscissa(pb,M).x=$\"+(string)x+\"^\\circ$\",p,E);\ndot(angpoint(pb,x),1mm+red);\nx=angabscissa(pb,P).x;\nlabel(\"angabscissa(pb,P).x=$\"+(string)x+\"^\\circ$\",T*p,E);\ndot(angpoint(pb,x),1mm+red);\n\n// p=t*p;\n// /*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"curabscissa(parabola,point)\"/></asyxml>*/\n// x=curabscissa(pb,M).x;\n// dot(curpoint(pb,x),1mm+red);\n// label(\"curabscissa(pb,M).x=\"+(string)x,p,E);\n// x=curabscissa(pb,P).x;\n// label(\"curabscissa(pb,P).x=\"+(string)x,T*p,E);\n// dot(curpoint(pb,x),1mm+red);\n\n// p=t*p;\n// /*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"nodabscissa(parabola,point)\"/></asyxml>*/\n// x=nodabscissa(pb,M).x;\n// label(\"nodabscissa(pb,M).x=\"+(string)x,p,E);\n// dot(point(pb,x),1mm+red);\n// x=nodabscissa(pb,P).x;\n// label(\"nodabscissa(pb,P).x=\"+(string)x,T*p,E);\n// dot(point(pb,x),1mm+red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0347_08b2e1b.png",
    "code": "unitsize(2cm);\nimport geometry;\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.25),j=(-0.25,.75));\nshow(lo=Label(\"$O$\",align=SE+0.5E), currentcoordsys);\n\npair A=(1,1), B=(2,2);\nline l1=line(A,B);\ndraw(\"$(l_1)$\",l1);\n\nline l2=rotate(100,(3,3))*l1;\ndraw(\"$(l_2)$\",l2);\nwrite(locate(intersectionpoint(l1,l2)));\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"bisector(line,line,real,bool)\"/></asyxml>*/\nline bis=bisector(l1,l2);\ndraw(bis);\n\nline Bis=bisector(l1,l2,90);\ndraw(Bis,0.8*red);\nmarkangleradiusfactor*=5;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"markangle(picture,Label,int,real,real,line,line,arrowbar,pen,filltype,margin,marker)\"/></asyxml>*/\nmarkangle(2, l1, l2, StickIntervalMarker(2,2,true));\nmarkangle(2, reverse(l2), l1, radius=1.25*markangleradius(), StickIntervalMarker(2,1,true));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"bool\" signature=\"concurrent(...line[])\"/></asyxml>*/\nif (concurrent(bis,l1,l2,Bis)) label(\"Concurrent\",(3,3), dir(135));\n\ndraw(box(locate((-1,0)),locate((5,5))),invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0348_035dae2.png",
    "code": "import geometry;\nsize(12cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint F=(2,-1.5);\ndot(\"$F$\",F,N,red);\n\n// Enlarge the bounding box of the current picture.\ndraw(box((-0.5,-0.4),(4,1.5)),invisible);\n\nparabola p=parabola(F,0.2,90);\n\n// Define the bounding box to draw the parabola.\n// Try finalbounds(); to determine the final bounding box.\np.bmin=(-0.5,-0.4);\np.bmax=(3.7,0.75);\n\ndraw(p,dashed); /* Defered drawing to adjust the path to the final\n                   bounding box.*/\n\ndraw((path)p); /* The path of 'p' is restricted to the box whose\n                  the corners are p.bmin, p.bmax.*/\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"relpoint(explicit parabola,real)\"/></asyxml>*/\ndot(\"relpoint(p, 0)\",relpoint(p,0),SE);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(parabola,abscissa)\"/></asyxml>*/\ndot(\"relpoint(p, 0.25)\",point(p,Relative(0.25)),NE);\n// point(p,Relative(0.25)) can be replaced by relpoint(p,0.25) OR point(p,relabscissa(0.25))\n\ndot(\"relpoint(p, -0.5)\",relpoint(p,-0.5),W);\ndot(\"relpoint(p, -1)\",relpoint(p,-1),W);\ndot(\"relpoint(p, 1)\",relpoint(p,1),E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0349_017a8bc.png",
    "code": "unitsize(1cm);\nimport geometry;\ndotfactor*=1.5;\n\ncurrentcoordsys=cartesiansystem((0,0),i=expi(pi/8)*(1.5,0),j=expi(pi/8)*(0,1));\nshow(currentcoordsys);\n\npoint A=(-1,-3), B=(5,2);\nline l1=line(A,B);\n\ndraw(l1,red);\ndot(\"$A$\",A,SE);\ndot(\"$B$\",B,NW);\n\npoint M=(3,-3);\ndot(\"$M$\",M);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"projection(line)\"/></asyxml>*/\npoint P=projection(l1)*M;\ndot(\"$P$\",P,2W);\ndraw(M--P);\nmarkrightangle(l1.A,P,M);\n\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"vprojection(line,bool)\"/></asyxml>*/\npoint Q=vprojection(l1)*M;\ndot(\"$Q$\",Q,2W);\ndraw(M--Q);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"hprojection(line,bool)\"/></asyxml>*/\npoint R=hprojection(l1)*M;\ndot(\"$R$\",R,2W);\ndraw(M--R);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"projection(line,line,bool)\"/></asyxml>*/\npoint S=projection(l1,line((0,0),(0,1)))*M;\ndot(\"$S$\",S,2W);\ndraw(M--S,red);\n\ndraw(box((-1,-4),(7,5)),invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0350_06c5deb.png",
    "code": "import geometry;\nsize(10cm);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\n// show(currentcoordsys);\n\n// Enlarge the bounding box of the current picture\ndraw(box((-6,-5), (10,2)), invisible);\n\npoint A=(-2,-2);\npoint B=(2,-3);\ndot(\"$A$\",A,N,red);\ndot(\"$B$\",B,S,red);\n\nline l=line(A,B);\ndraw(l);\n\npoint C=(2,-1.5);\ndot(\"$C$\",C,N);\n\nhyperbola h=hyperbola(C,sqrt(2),sqrt(2)/2,0);\ndraw(h);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,hyperbola)\"/></asyxml>*/\npoint[] inter=intersectionpoints(l,h);\ndot(\"$M$\", inter[0], 2N+E, red);\ndot(\"$N$\", inter[1], 2S+E, red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0351_066a207.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(1,1);\ndot(\"$A$\",A,S,0.8red);\n\nreal R=2;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"\" signature=\"struct arc\"/></asyxml>*/\narc C=arc(circle(A,R),45,180);/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(ellipse,real,real,polarconicroutine,bool)\"/></asyxml>*/\ndraw(C,Arrow);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"complementary(arc)\"/></asyxml>*/\ndraw(complementary(C),dashed+grey,Arrow(position=Relative(0.75)));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"*(transform,explicit arc)\"/></asyxml>*/\narc Cp=scale(0.5,A)*C;\ndraw(Cp,0.8red,Arrow);\n\narc Cp=scale(-0.5,A)*C;\ndraw(Cp,0.8blue,Arrow);\n\narc Cp=scale(1.1,A)*C;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"reverse(arc)\"/></asyxml>*/\ndraw(reverse(Cp),0.8*yellow,Arrow);\n\narc Cp=scale(0.9,A)*C;\ndraw(rotate(225,A)*Cp,0.8green,Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0352_09802b2.png",
    "code": "import geometry;\nsize(8cm);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-1,0) ; dot(\"$A$\",A,S);\npoint B=(1,1)  ; dot(\"$B$\",B,S);\npoint C=(0,0)  ;\npoint D=(1,-1) ; dot(\"$D$\",D,SW);\n\narc c=arc(circle(C,2), 0, 270);\ndraw(complementary(c),dashed+grey);\n\nline l1=line(A,B); draw(l1);\nline l2=line(C,D); draw(l2);\n\npoint[] J=intersectionpoints(l1,c);\npoint[] K=intersectionpoints(l2,c);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(explicit arc,point,point)\"/></asyxml>*/\ndraw(arc(c,K[0],J[0]),2mm+0.8yellow);\ndraw(arc(c,J[1],K[0]),2mm+0.8red);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(explicit arc,abscissa,abscissa)\"/></asyxml>*/\ndraw(arc(c,relabscissa(c,J[0]),relabscissa(1)),2mm+0.8green);\ndraw(arc(c,relabscissa(0),relabscissa(c,J[1])),2mm+0.8blue);\n\ndot(\"$J_0$\",J[0],2NW);\ndot(\"$J_1$\",J[1],2N);\ndot(\"$K_0$\",K[0],2W);\n\ndraw(c, 1mm+white);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0353_042bb5b.png",
    "code": "import geometry;\nsize(6cm);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint A=(-1,0);\npoint B=(3,-1);\npoint C=(0,1);\n\ncircle cle=circle(A,C,B);\ndraw(cle,linewidth(2mm));\n\ndraw(arc(cle,A,B), dotsize()+red);\ndraw(arc(cle,A,B,CW), dotsize()+blue);\n\ndot(Label(\"$A$\", black), A, 1.5NW, white);\ndot(Label(\"$B$\", black), B, E, white);\ndot(Label(\"$C$\", black), C, NW, white);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0354_09767ba.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\nshow(currentcoordsys);\n\n// Enlarge the bounding box of the current picture\ndraw(box(locate((-1,-1.5)),locate((2,1))),invisible);\n\npoint A=(0,-1);\npoint B=(1.25,1);\npoint C=(-1,0.5);\n\ndot(\"$A$\",A,SW,red);\ndot(\"$B$\",B,E,red);\ndot(\"$C$\",C,N,red);\n\n\nline l=rotateO(20)*line((0,0),(1,0));\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"parabola\" signature=\"parabola(point,point,point,line)\"/></asyxml>*/\nparabola p=parabola(A,B,C,l);\ndraw(p,blue);\ndraw(p.D,blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0355_0171dcd.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,0.75));\n// show(currentcoordsys);\n\ntriangle t=triangle((-1,0), (2,0), (0,2));\n\ndrawline(t, linewidth(bp));\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"label(picture,Label,Label,Label,triangle,real,real,pen,filltype)\"/></asyxml>*/\nlabel(t, alignFactor=4);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"triangle\" signature=\"anticomplementary(triangle)\"/></asyxml>*/\ntriangle at=anticomplementary(t);\ndraw(at, bp+0.8green);\nlabel(\"$A'$\", \"$B'$\", \"$C'$\", at, blue);\n\ndraw(segment(at.AB), bp+0.8green, StickIntervalMarker(2,1));\ndraw(segment(at.BC), bp+0.8green, StickIntervalMarker(2,2));\ndraw(segment(at.CA), bp+0.8green, CrossIntervalMarker(2,3));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0356_020de7c.png",
    "code": "size(8cm,0);\nimport geometry;\n\nshow(currentcoordsys);\n\npair a=(0,0.5), b=(1,0.5);\npoint A=a, B=b;\n\ndot(\"$A$\",A);\ndot(\"$B$\",B);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"coordsys\" signature=\"cartesiansystem(pair,pair,pair)\"/></asyxml>*/\ncurrentcoordsys=cartesiansystem((0.5,0.5), i=(0.7,0.7), j=(-0.7,0.7));\nshow(\"$O'$\", \"$\\vec{u'}$\", \"$\\vec{v'}$\", currentcoordsys, xpen=invisible);\n\npoint Ap=a;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(coordsys,explicit point)\"/></asyxml>*/\npoint Bp=point(currentcoordsys,B); // same as 'point Bp=b;'\n\ndot(\"$A'$\",Ap);\ndot(\"$B'$\",Bp);\ndot(\"$M$\",(Ap+Bp)/2);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0358_02541be.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,1),j=(-0.5,.75));\n// show(currentcoordsys);\n\npoint C=(0,0);\npoint Cp=(0.5,0.5);\ndot(\"$C$\",C,NW,red);\ndot(\"$C'$\",Cp,N,red);\n\nellipse el1=ellipse(C,2,1);\nellipse el2=ellipse(Cp,3,1,40);\ndraw(el1^^el2);\n\ndotfactor*=2;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(ellipse,ellipse)\"/></asyxml>*/\npoint[] inter=intersectionpoints(el1,el2);\ndot(inter);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0359_0101209.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(1,2);\npoint B=A+(2,0);\ndot(\"$A$\",A,0.25S+2W,red);\ndot(\"$B$\",B,0.25S+2E,red);\n\nfor (int i=0; i < 2; ++i) {\n  real a=(i == 0) ? 60 : -100;\n  /*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"arcsubtendedcenter(point,point,real)\"/></asyxml>*/\n  dot(arcsubtendedcenter(A,B,a),2mm+blue);\n  \n  point arccenter=arcsubtendedcenter(A,B,a/2);\n  dot(arccenter,2mm+red);\n\n  /*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arcsubtended(point,point,real)\"/></asyxml>*/\n  arc arcsubtended=arcsubtended(A,B,a);\n  draw(arcsubtended,blue);\n\n  arc arc=arcsubtended(A,B,a/2);\n  draw(arc,red);\n  \n  point M=relpoint(arcsubtended,0.75);\n  dot(format(\"%0g\",degrees(B-M)-degrees(A-M)),\n      M,(-1)^(i+1)*I*dir(arcsubtended,reltime(arcsubtended,0.6)));\n  draw(A--M--B,blue);\n\n  label(format(\"%0g\",degrees(B-arccenter)-degrees(A-arccenter)),\n      arccenter,(-1)^(i+1)*S);\n  draw(A--arccenter--B,red);\n }\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0360_069a562.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,1),j=(-0.5,.75));\n// show(currentcoordsys);\n\npoint A=(-1,-1);\npoint B=(0.75,0.5);\ndot(\"$A$\",A,NW,red);\ndot(\"$B$\",B,N,red);\n\ncircle c1=circle(A,1.5);\ncircle c2=circle(B,2);\ndraw(c1^^c2);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"radicalline(circle,circle)\"/></asyxml>*/\ndraw(radicalline(c1,c2));\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"radicalcenter(circle,circle)\"/></asyxml>*/\ndot(radicalcenter(c1,c2));\n\ndotfactor*=2;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(circle,circle)\"/></asyxml>*/\npoint[] inter=intersectionpoints(c1,c2);\ndot(\"$M$\", inter[0], 2SW, red);\ndot(\"$N$\", inter[1], 2NE, red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0361_0914550.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"\" signature=\"struct mass\"/></asyxml>*/\nmass A=mass((1,0),3);/*<asyxml><view file=\"modules/geometry.asy\" type=\"mass\" signature=\"mass(point,real)\"/></asyxml>*/\n\nmass B=mass((0,1),sqrt(3));\npoint C=(0.25,0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"dot(picture,Label,mass,align,string,pen)\"/></asyxml>*/\ndot(\"$\\left(B;\\sqrt{3}\\right)$\",B,N,format=\"\");\n\ndot(\"C\",C,S);\ndot(\"A\",A,S);\ndraw(A--B--C--cycle);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"mass\" signature=\"masscenter(... mass[])\"/></asyxml>*/\ndot(\"G\",masscenter(A,B,mass(C)),S);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0363_058a5ff.png",
    "code": "size(8cm,0);\nimport geometry;\n\nshow(currentcoordsys);\n\npair a=(0,0.5), b=(1,0.5);\npoint A=a, B=b;\n\ndot(\"$A$\",A);\ndot(\"$B$\",B);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"coordsys\" signature=\"cartesiansystem(pair,pair,pair)\"/></asyxml>*/\ncurrentcoordsys=cartesiansystem((0.5,0.5), i=(0.7,0.7), j=(-0.7,0.7));\nshow(\"$O'$\", \"$\\vec{u'}$\", \"$\\vec{v'}$\", currentcoordsys, xpen=invisible);\n\npoint Ap=a;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(coordsys,explicit point,real)\"/></asyxml>*/\npoint Bp=point(currentcoordsys,B); // same as 'point Bp=b;'\n\ndot(\"$A'$\",Ap);\ndot(\"$B'$\",Bp);\ndot(\"$M$\",(Ap+Bp)/2);\n\ndraw(Ap--Bp);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"locate(pair)\"/></asyxml>*/\ndraw(locate((0,0))--Bp,blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"pair\" signature=\"locate(point)\"/></asyxml>*/\ndraw((0,0)--locate(Bp),0.8*green);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0364_04028d9.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,1),j=(-0.5,1));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(3.5,1),\nB=(1.75,3),\nC=(-1,2),\nD=(-1.5,-0.5),\nF=(1.5,-1);\n\ndot(\"$A$\",A);\ndot(\"$B$\",B,N);\ndot(\"$C$\",C,NW);\ndot(\"$D$\",D,SW);\ndot(\"$F$\",F,SE);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"ellipse\" signature=\"ellipse(point,point,point,point,point)\"/></asyxml>*/\nellipse el=ellipse(A,B,C,D,F);\ndraw(el);\n\ndot(\"$F_1$\",el.F1,NW);\ndot(\"$F_2$\",el.F2,NW);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"coordsys\" signature=\"canonicalcartesiansystem(ellipse)\"/></asyxml>*/\ncoordsys R=canonicalcartesiansystem(el);\nshow(\"$C$\", \"$\\vec{u}$\", \"$\\vec{v}$\", R, xpen=blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0365_0290c8a.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,0.75));\n// show(currentcoordsys);\n\ntriangle t=triangle((-1,0), (2,0), (0,2));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"drawline(picture,triangle,pen)\"/></asyxml>*/\ndrawline(t, linewidth(bp));\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"label(picture,Label,Label,Label,triangle,real,real,pen,filltype)\"/></asyxml>*/\nlabel(t,alignFactor=4);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"circle\" signature=\"circle(triangle)\"/></asyxml>*/\ncircle cc=circle(t);\ndraw(cc, 0.8blue);\ndot(cc.C, blue);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"triangle\" signature=\"tangential(triangle)\"/></asyxml>*/\ntriangle tgt=tangential(t);\ndraw(tgt, bp+0.8blue);\nlabel(\"$A_1$\", \"$B_1$\", \"$C_1$\", tgt, blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"circle\" signature=\"incircle(triangle)\"/></asyxml>*/\ncircle ic=incircle(t);\ndraw(ic, 0.8red);\ndot(ic.C, red);\ntriangle intouch=intouch(t);\ndraw(intouch, bp+0.8red);\nlabel(\"$A_2$\", \"$B_2$\", \"$C_2$\", intouch, red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"circle\" signature=\"excircle(side,triangle)\"/></asyxml>*/\ncircle ec=excircle(t.AB);\nclipdraw(ec, 0.8green);\ndot(ec.C, green);\n\nec=excircle(t.AC);\nclipdraw(ec, 0.8green);\ndot(ec.C, green);\n\nec=excircle(t.BC);\nclipdraw(ec, 0.8green);\ndot(ec.C, green);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"triangle\" signature=\"extouch(triangle)\"/></asyxml>*/\ntriangle ext=extouch(t);\ndraw(ext, bp+0.8green);\nlabel(\"$A_3$\", \"$B_3$\", \"$C_3$\", ext, green);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"extouch(side)\"/></asyxml>*/\ndot(extouch(t.AB), 0.8*green);\ndot(extouch(t.BC), 0.8*green);\ndot(extouch(t.CA), 0.8*green);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"intouch(side)\"/></asyxml>*/\ndot(intouch(t.AB), 0.8*red);\ndot(intouch(t.BC), 0.8*red);\ndot(intouch(t.CA), 0.8*red);\n\n// Enlarge the bounding box of the current picture\ndraw(box((-2.5,-3), (3.5,3.5)), invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0366_02ccad1.png",
    "code": "import geometry;\nsize(8cm);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-1,0) ; dot(\"$A$\",A,S);\npoint B=(1,1)  ; dot(\"$B$\",B,S);\npoint C=(0,0)  ;\npoint D=(1,-1) ; dot(\"$D$\",D,SW);\n\narc c=arc(ellipse(C,2,1,20), 0, 270);\ndraw(complementary(c),dashed+grey);\n\nline l1=line(A,B); draw(l1);\nline l2=line(C,D); draw(l2);\n\npoint[] J=intersectionpoints(l1,c);\npoint[] K=intersectionpoints(l2,c);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(explicit arc,point,point)\"/></asyxml>*/\ndraw(arc(c,J[0],K[0]),2mm+0.8yellow);\ndraw(arc(c,K[0],J[1]),2mm+0.8red);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(explicit arc,abscissa,abscissa)\"/></asyxml>*/\ndraw(arc(c,relabscissa(c,J[1]),relabscissa(1)),2mm+0.8green);\ndraw(arc(c,relabscissa(0),relabscissa(c,J[0])),2mm+0.8blue);\n\ndot(\"$J_0$\",J[0],2N);\ndot(\"$J_1$\",J[1],N+2W);\ndot(\"$K_0$\",K[0],2N);\n\ndraw(c, 1mm+white);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0367_07b6b8a.png",
    "code": "import geometry;\nsize(8cm);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint A=(-1,0) ; dot(\"$A$\",A,S);\npoint B=(1,1)  ; dot(\"$B$\",B,S);\npoint C=(0,1)  ; dot(\"$C$\",C,SW);\npoint D=(1,-1) ; dot(\"$D$\",D,SW);\n\nellipse el=ellipse((point)(0,0.5),2,1);\n\nline l1=line(A,B); draw(l1);\nline l2=line(C,D); draw(l2);\n\npoint[] J=intersectionpoints(l1,el);\npoint[] K=intersectionpoints(l2,el);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(ellipse,point,point,bool)\"/></asyxml>*/\ndraw(arc(el, J[0],K[0]), 1mm+0.8yellow);\ndraw(arc(el, K[0],J[1]), 1mm+0.8red);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(ellipse,abscissa,abscissa,bool)\"/></asyxml>*/\ndraw(arc(el,angabscissa(el,J[1]), angabscissa(el,K[1])), 1mm+0.8blue);\ndraw(arc(el,angabscissa(el,K[1]), angabscissa(el,J[0])), 1mm+0.8green);\n\ndot(\"$J_0$\", J[0], 2N); dot(\"$J_1$\", J[1], 2S);\ndot(\"$K_0$\", K[0], 2NE) ; dot(\"$K_1$\", K[1], 2dir(-35));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0368_052cf63.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(1,1);\ndot(\"$A$\",A,S,0.8red);\n\nreal R=2;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"\" signature=\"struct arc\"/></asyxml>*/\narc C=arc(ellipse(A,2R,R),45,180,fromCenter);\ndraw(C,Arrow);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"complementary(arc)\"/></asyxml>*/\ndraw(complementary(C),dashed+grey,Arrow(position=Relative(0.75)));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"*(transform,explicit arc)\"/></asyxml>*/\narc Cp=scale(0.5,A)*C;\ndraw(Cp,0.8red,Arrow);\n\narc Cp=scale(-0.5,A)*C;\ndraw(Cp,0.8blue,Arrow);\n\narc Cp=scale(1.1,A)*C;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"reverse(arc)\"/></asyxml>*/\ndraw(reverse(Cp),0.8*yellow,Arrow);\n\narc Cp=scale(0.9,A)*C;\ndraw(rotate(225,A)*Cp,0.8green,Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0369_03331ce.png",
    "code": "import geometry;\n\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,1),j=(-0.5,.75));\nshow(currentcoordsys);\n\npoint A=(-0.5,.75);\npoint B=(1,1);\ndot(\"$A$\",A,SE);\ndot(\"$B$\",B,NW);\n\nline l=line(A,B,false);\nline ll=hline()+B;\n\ncircle c=circle((point)(0.5,0.5),2);\ndraw(l^^ll);\ndraw(complementary(l),dashed+grey);\ndraw(c);\n\ndotfactor*=2;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,circle)\"/></asyxml>*/\ndot(intersectionpoints(l,c),red);\ndot(intersectionpoints(ll,c),red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0370_020ffc5.png",
    "code": "unitsize(1cm);\nimport geometry;\ndotfactor*=1.5;\nlinemargin=5mm;\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-1,1));\nshow(currentcoordsys);\n\npoint A=(-3,-3), B=(3,4), C=(1,-2);\n\nline l1=line(A,B);\ndraw(l1,red);\ndot(\"$A$\",A,SE);\ndot(\"$B$\",B,NW);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"line(real,point)\"/></asyxml>*/\nline l2=line(100,C);\ndraw(l2,blue);\ndot(\"$C$\",C);\n\npoint M=relpoint(A--C,0.6);\ndot(\"$M$\",M);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"projection(line,line,bool)\"/></asyxml>*/\npoint P=projection(l1,l2)*M;\ndot(\"$P$\",P,2W);\ndraw(line(M,P),blue+dashed);\n\ndraw(box((-5,-5),(5,5)),invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0371_055f5c2.png",
    "code": "import geometry;\nsize(12cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(2,-1.5);\ndot(\"$A$\",A,S,red);\n\nellipse el=ellipse(A,3,1,20);\ndraw(el);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"relpoint(explicit ellipse,real)\"/></asyxml>*/\ndot(\"relpoint(el, 0)\",relpoint(el,0),E);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(ellipse,abscissa)\"/></asyxml>*/\ndot(\"relpoint(el, 0.25)\",point(el,Relative(0.25)),NW);\n// point(el,Relative(0.25)) can be replaced by relpoint(el,0.25) OR point(el,relabscissa(0.25))\n\ndot(\"relpoint(el, 0.5)\",relpoint(el,0.5),W);\ndot(\"relpoint(el, 0.75)\",relpoint(el,0.75),SE);\ndot(\"relpoint(el, 1.125)\",relpoint(el,1.125),NW);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0372_087e7d5.png",
    "code": "import geometry;\nsize(12cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=expi(pi/18)*(1,0),j=expi(pi/18)*(0,1));\nshow(currentcoordsys,xpen=invisible);\n\npoint A=(-1.5,-1);\npoint C=(-1,1);\npoint B=(-1,0);\n\ndot(\"$A$\", A, 2W);\ndot(\"$B$\", B, 2E);\n\nline l1=hline()+C;\ndraw(\"$(l_1)$\", l1, blue);\ndot(\"$C$\", C, NE);\n\nline l2=line(A, B, false);\ndraw(Label(\"$(AB]$\",Relative(.25),SE), l2, green);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"complementary(explicit line)\"/></asyxml>*/\ndraw(\"Complementary of $(AB]$\", complementary(l2), dotted+roundcap);\n\npoint p=intersectionpoint(l1,l2);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"bool\" signature=\"defined(pair)\"/></asyxml>*/\nstring s=\"$(l_1)$\" + (defined(p) ? \" intersects \" : \" does not intersect \") + \"$(AB]$\";\nlabel(s, A+1.75*l2.u,W);\n\ndraw(box(locate((-2,-2)),locate((2,2))), invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0373_0043874.png",
    "code": "import geometry;\nunitsize(2cm);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-2,2);\ndot(\"$A$\",A,S);\npoint B=A+(cos(0.5),cos(1));\ndot(\"$B$\",B,S);\n\n\nellipse el=ellipse(A,3,2,0);\ndraw(el);\nline l=line(A,B);\ndraw(l);\npoint M=intersectionpoints(l,el)[0];\npoint P=intersectionpoints(l,el)[1];\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"dot(picture,Label,explicit point,align,string,pen)\"/></asyxml>*/\ndot(\"\",M,2E,linewidth(2mm));\ndot(\"$M$\",M,2W);\ndot(\"\",P,2E);\ndot(\"$P$\",P,2W,linewidth(2mm));\n\npair p=A-(4,2.5);\ntransform t=shift((0,-0.3));\ntransform T=shift((4,0));\nreal x;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"angabscissa(ellipse,point,polarconicroutine)\"/></asyxml>*/\nx=angabscissa(el,M).x;\nlabel(\"angabscissa(el,M).x=$\"+(string)x+\"^\\circ$\",p,E);\ndot(angpoint(el,x),1mm+red);\nx=angabscissa(el,P).x;\nlabel(\"angabscissa(el,P).x=$\"+(string)x+\"^\\circ$\",T*p,E);\ndot(angpoint(el,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"curabscissa(ellipse,point)\"/></asyxml>*/\nx=curabscissa(el,M).x;\ndot(curpoint(el,x),1mm+red);\nlabel(\"curabscissa(el,M).x=\"+(string)x,p,E);\nx=curabscissa(el,P).x;\nlabel(\"curabscissa(el,P).x=\"+(string)x,T*p,E);\ndot(curpoint(el,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"nodabscissa(ellipse,point)\"/></asyxml>*/\nx=nodabscissa(el,M).x;\nlabel(\"nodabscissa(el,M).x=\"+(string)x,p,E);\ndot(point(el,x),1mm+red);\nx=nodabscissa(el,P).x;\nlabel(\"nodabscissa(el,P).x=\"+(string)x,T*p,E);\ndot(point(el,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"relabscissa(ellipse,point)\"/></asyxml>*/\nx=relabscissa(el,M).x;\nlabel(\"relabscissa(el,M).x=\"+(string)x,p,E);\ndot(relpoint(el,x),1mm+red);\nx=relabscissa(el,P).x;\nlabel(\"relabscissa(el,P).x=\"+(string)x,T*p,E);\ndot(relpoint(el,x),1mm+red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0374_04d040a.png",
    "code": "import geometry;\nsize(10cm);\n\npoint F=(1,-1.5);\ndot(\"$F$\",F,N,red);\n\nparabola p=parabola(F,0.2,110);\n\ndraw(p);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"curpoint(explicit parabola,real)\"/></asyxml>*/\ndot(\"curpoint(p, 0)\",curpoint(p,0),SE);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(parabola,abscissa)\"/></asyxml>*/\ndot(\"curpoint(p, 0.5)\",point(p,curabscissa(0.5)),NE);\n// point(p,curabscissa(0.5)) can be replaced by curpoint(p,0.5)\n\ndot(\"curpoint(p, -0.5)\",curpoint(p,-0.5),W);\ndot(\"curpoint(p, -2)\",curpoint(p,-2),W);\ndot(\"curpoint(p, 2)\",curpoint(p,2),E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0375_00f2532.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-1,0);\npoint B=(0.5,-3sin(2));\ndot(\"$A$\",A,S,red);\ndot(\"$B$\",B,N,red);\n\nline l=line(A,B);\ncircle c=circle((point)(0,-sqrt(2)/2),exp(1));\ndraw(l);\ndraw(c);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,circle)\"/></asyxml>*/\npoint[] inter=intersectionpoints(l,c);\ndot(\"$M$\", inter[0], 2S, red);\ndot(\"$N$\", inter[1], 2N+0.5W, red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0376_027caac.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((1,2), i=(1,0.5), j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(1,1);\ndot(\"$A$\", A, S, red);\n\narc C=arc(circle(A,2), 45, 270);\ndraw(C, Arrow);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"real\" signature=\"degrees(arc)\"/></asyxml>*/\nwrite(degrees(C)); // Output is 225\n\ndraw(complementary(C), grey+dashed);\ndistance(\"$R=2$\",A,point(C,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"relpoint(arc,real)\"/></asyxml>*/\ndot(\"relpoint(C, 0)\", relpoint(C,0),E);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(arc,abscissa)\"/></asyxml>*/\ndot(\"relpoint(C, 0.25)\", point(C,Relative(0.25)),N);// point(C,Relative(0.25)) is similar to relpoint(C,0.25)\ndot(\"relpoint(C, -0.5)\", relpoint(C,-0.5),E);\ndot(\"relpoint(C, 0.5)\",  relpoint(C,0.5),W);\ndot(\"relpoint(C, 0.75)\", relpoint(C,0.75),W);\ndot(\"relpoint(C, 1.25)\", relpoint(C,1.25),E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0377_01ef409.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(4,2);\ndot(\"$A$\",A,S,red);\n\nreal R=2;\ncircle C=circle(A,R);\ndraw(C,linewidth(1mm));\ndraw(\"$R=\"+(string)R+\"$\", A--point(C,0), N, Arrows);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(explicit circle,explicit real)\"/></asyxml>*/\ndot(\"point(C, 15)\", point(C,15),2E,3mm+blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"nodabscissa(real)\"/></asyxml>*/\ndot(\"point(C, 40)\",\n    point(C,nodabscissa(40)),\n    2W,3mm+blue);\n// point(C,nodabscissa(40)) can be replaced by point(C,40)\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"int\" signature=\"circlenodesnumber(real)\"/></asyxml>*/\ndot(\"point(C, 3*circlenodesnumber(R)/4)\",\n    point(C, 3*circlenodesnumber(R)/4), S, 3mm+blue);\n\ndot((path)C, yellow);\n\nwrite(length((path)C));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0378_0026f6d.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(3.5,0.5);\ndot(\"$A$\", A, S, red);\n\narc C=arc(circle(A,2), 60, 270, CCW);\ndraw(C,Arrow);\ndraw(complementary(C), grey+dashed);\ndistance(\"$R=2$\",A,point(C.el,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"angpoint(arc,real)\"/></asyxml>*/\ndot(\"angpoint(C, 90)\",  angpoint(C,90), W);\n\ndot(\"angpoint(C, 180)\", point(C,angabscissa(180)), SW); // point(C,angabscissa(180)) is similar to angpoint(C,180)\n\ndot(\"angpoint(C, 270)\", angpoint(C,270), E);\ndot(\"angpoint(C, -45)\", angpoint(C,-45), E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0379_046b15a.png",
    "code": "import geometry;\nsize(10cm);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,0.75));\n// show(currentcoordsys);\n\npoint A=(-1,0), B=(2,0), C=(0,2);\n\ndraw(line(A,B), linewidth(bp));\ndraw(line(A,C), linewidth(bp));\ndraw(line(B,C), linewidth(bp));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"circle\" signature=\"circle(point,point,point)\"/></asyxml>*/\ncircle cc=circle(A,B,C);\ndraw(cc, blue);\ndot(cc.C, blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"circle\" signature=\"incircle(point,point,point)\"/></asyxml>*/\ncircle ic=incircle(A,B,C);\ndraw(ic, red);\ndot(ic.C, red);\n\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"circle\" signature=\"excircle(point,point,point)\"/></asyxml>*/\ncircle ec=excircle(A,B,C);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"clipdraw(picture,Label,path,align,pen,arrowbar,arrowbar,real,real,Label,marker)\"/></asyxml>*/\nclipdraw(ec, green);\ndot(ec.C, green);\n\nec=excircle(A,C,B);\nclipdraw(ec, green);\ndot(ec.C, green);\n\nec=excircle(C,B,A);\nclipdraw(ec, green);\ndot(ec.C, green);\n\ndot(\"G\",centroid(A,B,C),NE);\n\n// Enlarge the bounding box of the current picture\n// draw(box((-2.5,-3), (3.5,3.5)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0380_0119c07.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-0.5,-0.5);\npoint B=(1,0.5);\npoint C=(0.5,1);\ndot(\"$A$\",A,SW);\ndot(\"$B$\",B,2N+0.5W);\ndot(\"$C$\",C,2N+0.5W);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"circle\" signature=\"circle(point,point,point)\"/></asyxml>*/\ncircle c1=circle(A,B,C);\ndot(\"$\\Omega$\",c1.C,N);\ndraw(c1);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0381_06a49e7.png",
    "code": "unitsize(1cm);\nimport geometry;\n\npoint pA = (0,0);\npoint pB = (5,0);\npoint pC = (5,5);\n\ndot(pA^^pB^^pC);\ndraw(pA--pB--pC--cycle);\n\ndistance(Label(\"$x \\; \\mathrm{cm}$\",align=S),pA,pB,3mm);\ndistance(Label(\"$y \\; \\mathrm{cm}$\",align=E),pB,pC,3mm);\ndistance(Label(\"$z \\; \\mathrm{cm}$\",align=I*dir(pA--pC)),pA,pC,-3mm);\n\nshipout(bbox(xmargin=1mm,invisible));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0382_0853513.png",
    "code": "size(8cm,0);\nimport geometry;\n\ncoordsys R=defaultcoordsys;\nshow(R);\n\ncoordsys Rp=cartesiansystem((0.5,0.5), i=(0.35,0.35), j=(-0.35,0.35));\nshow(\"$O'$\", \"$\\vec{\\imath'}$\", \"$\\vec{\\jmath'}$\", Rp, ipen=blue, xpen=invisible);\n\ncoordsys Rpp=cartesiansystem((-1,-0.5),\n                                      i=rotate(-90)*(0.35,0.35),\n                                      j=rotate(-90)*(-0.35,0.35));\nshow(\"$O''$\", \"$\\vec{\\imath''}$\", \"$\\vec{\\jmath''}$\", Rpp, ipen=green, xpen=invisible);\n\n\npair m=(1,1);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(coordsys,pair,real)\"/></asyxml>*/\ndot(\"\",point(R,m),red); // Same as 'dot(\"\",m,red);'\ndot(\"\",point(Rp,m),blue);\n\npoint M=m;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(coordsys,explicit point,real)\"/></asyxml>*/\ndot(\"\",point(Rpp,M),green); // Works also with 'point'\n\npair p=(-0.75,0.75);\npoint P=point(R,(-0.75,0.75));\n\ndot(\"$P$\",P,2E,4mm+red);\n\n// There are two methods for changing\n// the coordinate system of a point (or a pair)\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"pair\" signature=\"/(pair,coordsys)\"/></asyxml>*/\ndot(\"$P'$\",point(Rp,p/Rp),2S,3mm+blue); // Necessary for 'pair'\ndot(\"$P'$\",point(Rp,P/Rp),2N,3mm+blue); // but works with 'point' by casting.\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"changecoordsys(coordsys,point)\"/></asyxml>*/\ndot(\"$P''$\",changecoordsys(Rpp,P),2W,1.5mm+green); // Useful for 'point'.\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0383_055376d.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-1,1));\ncoordsys Rp=currentcoordsys;\ncoordsys R=defaultcoordsys;\n\nshow(\"$O$\",\"$\\vec{\\imath}$\", \"$\\vec{\\jmath}$\", R);\nshow(\"$O'$\", \"$\\vec{u}$\", \"$\\vec{v}$\", Rp, xpen=invisible);\n\npair a=(0.5,0.5);\npair b=(-0.5,-1);\n\npoint A=point(R,a), B=point(R,b);\ndot(\"$A$\",A,NW); dot(\"$B$\",B,S);\nline l=line(A,B);\n\npoint Ap=a, Bp=b;\ndot(\"$A'$\",Ap,W); dot(\"$B'$\",Bp,SE);\nline lp=line(Ap,Bp);\n\ndraw(l^^lp);\n\ndraw(l.A--l.A+l.u,blue,Arrow);\ndraw(l.A--l.A+l.v,blue,Arrow);\ndraw(lp.A--lp.A+lp.u,blue,Arrow);\ndraw(lp.A--lp.A+lp.v,blue,Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0384_003a377.png",
    "code": "import geometry;\nsize(10cm,0);\n\npoint c2=(13,5);\nreal r=4, R=abs(c2)-r;\n\ncircle[] C={circle(origin, 4), circle(c2,R)};\ndraw(C[0]^^C[1], blue);\n\nsegment s=segment(origin, c2);\ndraw(s, red, dot);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"curpoint(line,real)\"/></asyxml>*/\npoint T=curpoint(s,r/(r-R)*abs(c2));\ndot(T);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangents(circle,point)\"/></asyxml>*/\nline[] tgt=tangents(C[1], T);\ndraw(tgt);\n\npoint[][] t= new point[2][2];\nfor (int i=0; i < 2 ; ++i)\n  for (int j=0; j < 2; ++j) {\n    /*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,circle)\"/></asyxml>*/\n    t[i][j]=intersectionpoints(C[i],tgt[j])[0];\n    draw(C[i].C--t[i][j], dot);\n    markrightangle(T, t[i][j], C[i].C, size=(i == 0 ? 2mm : 0));\n  }\n\naddMargins(cm/2,cm/2);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0385_028eabf.png",
    "code": "import geometry;\nsize(6cm,0);\n\ncurrentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-1,1);\npoint B=(2,2);\npoint M=(1,3);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arccircle(point,point,point)\"/></asyxml>*/\narc AMB=arccircle(A,M,B);\ndraw(AMB,linewidth(3mm),Arrow(5mm),TrueMargin(0,0.5mm));\ndot(\"$C$\",AMB.el.C);\ndraw(arccircle(A,B,M),1mm+red,Arrow(3mm));\n\ndot(\"$A$\",A,2SW,blue);\ndot(\"$B$\",B,2E,blue);\ndot(\"$M$\",M,2N,blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0386_061e557.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\nshow(currentcoordsys);\n\npoint F=(0.25,0.5);\n\ndot(\"$F$\",F,SW,red);\n\n// Enlarge the bounding box of the current picture\ndraw(box(locate((-1.5,0)),locate((1,1))), invisible);\n\nline l=rotateO(10)*line((0,-0.4),(1,-0.4));\ndraw(l);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"parabola\" signature=\"parabola(point,line)\"/></asyxml>*/\nparabola p=parabola(F,l);\ndraw(p,linewidth(3mm));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"parabola\" signature=\"parabola(point,point)\"/></asyxml>*/\ndraw(parabola(p.F,p.V),2mm+red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"parabola\" signature=\"parabola(point,real,real)\"/></asyxml>*/\ndraw(parabola(p.F,p.a,p.angle),1mm+green);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0387_069e269.png",
    "code": "import geometry;\nsize(15cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(4,2);\n\nellipse el=ellipse(A,3,2,20);\ndraw(el);\ndot(\"$C$\",el.C,S,red);\n\ndot(\"$F_1$\",el.F1,S);\ndot(\"$F_2$\",el.F2,S);\n\n\n///////////////////////////////////////\ncurrentpolarconicroutine=fromCenter;//\n/////////////////////////////////////\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"angpoint(explicit ellipse,real,polarconicroutine)\"/></asyxml>*/\npoint P=angpoint(el, 0);\ndot(\"angpoint(el, 0)\", P,E);\ndraw(el.C--P);\n\npoint P=angpoint(el, 90);\ndot(\"angpoint(el, 90)\", P,NW);\ndraw(el.C--P);\n\npoint P=angpoint(el, 90, fromFocus);\ndot(\"angpoint(el,90,fromFocus)\", P,NW);\ndraw(el.F1--P);\n\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"angabscissa(real,polarconicroutine)\"/></asyxml>*/\ndot(\"angpoint(el, 180)\", point(el,angabscissa(180)), W);\n\ndot(\"angpoint(el, 370)\", angpoint(el,370),NE);\ndot(\"angpoint(el, -45)\", angpoint(el,-45),SE);\n\npoint P=angpoint(el, -45, fromFocus);\ndot(\"angpoint(el,-45,fromFocus)\", P,S);\ndraw(el.F1--P);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0388_043f010.png",
    "code": "import geometry;\nunitsize(2cm);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-2,2);\ndot(\"$A$\",A,S);\npoint B=A+(cos(0.5),cos(1));\ndot(\"$B$\",B,S);\n\n\ncircle c=circle(A,2);\ndraw(c);\n\nline l=line(A,B);\ndraw(l);\npoint M=intersectionpoints(l,c)[0];\npoint P=intersectionpoints(l,c)[1];\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"dot(picture,Label,explicit point,align,string,pen)\"/></asyxml>*/\ndot(\"\",M,2E,linewidth(2mm));\ndot(\"$M$\",M,2W);\ndot(\"\",P,2E,linewidth(2mm));\ndot(\"$P$\",P,2W);\n\npair p=A-(4,2.5);\ntransform t=shift((0,-0.3));\ntransform T=shift((4,0));\nreal x;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"angabscissa(circle,point)\"/></asyxml>*/\nx=angabscissa(c,M).x;\nlabel(\"angabscissa(c,M).x=$\"+(string)x+\"^\\circ$\",p,E);\ndot(angpoint(c,x),1mm+red);\nx=angabscissa(c,P).x;\nlabel(\"angabscissa(c,P).x=$\"+(string)x+\"^\\circ$\",T*p,E);\ndot(angpoint(c,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"curabscissa(circle,point)\"/></asyxml>*/\nx=curabscissa(c,M).x;\ndot(curpoint(c,x),1mm+red);\nlabel(\"curabscissa(c,M).x=\"+(string)x,p,E);\nx=curabscissa(c,P).x;\nlabel(\"curabscissa(c,P).x=\"+(string)x,T*p,E);\ndot(curpoint(c,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"nodabscissa(circle,point)\"/></asyxml>*/\nx=nodabscissa(c,M).x;\nlabel(\"nodabscissa(c,M).x=\"+(string)x,p,E);\ndot(point(c,x),1mm+red);\nx=nodabscissa(c,P).x;\nlabel(\"nodabscissa(c,P).x=\"+(string)x,T*p,E);\ndot(point(c,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"relabscissa(circle,point)\"/></asyxml>*/\nx=relabscissa(c,M).x;\nlabel(\"relabscissa(c,M).x=\"+(string)x,p,E);\ndot(relpoint(c,x),1mm+red);\nx=relabscissa(c,P).x;\nlabel(\"relabscissa(c,P).x=\"+(string)x,T*p,E);\ndot(relpoint(c,x),1mm+red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0389_0653623.png",
    "code": "import geometry;\nsize(15cm,0);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.25),j=(-0.25,.75));\n// show(lj=Label(\"$\\vec{\\jmath}$\",EndPoint), currentcoordsys);\n\npoint A=(-1,-0.5);\npoint B=(1,-0.5);\npoint C=(-1,0.5);\n\nline l1=line(A,B);\ndraw(\"$(l_1)$\",l1,red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"\" signature=\"struct segment\"/></asyxml>*/\nsegment s=segment(A,B);\ndraw(s, linewidth(2bp));\ndot(\"$A$\", A, SW);\ndot(\"$B$\", B, SE);\ndot(\"$C$\", C, S);\n\nsegment s1=parallel(C,s);\ndraw(Label(\"$s_1$\",Relative(0.75)),s1);\n\nLabel lt=Label(\"Complementary of $s_1$\",Relative(0.5),align=N,grey);\nLabel[] L={lt, lt};\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line[]\" signature=\"complementary(explicit segment)\"/></asyxml>*/\nline[] cs1=complementary(s1);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"draw(picture,Label[],line[],align,pen,arrowbar,Label,marker)\"/></asyxml>*/\ndraw(L, cs1, 2mm+lightgrey);\n\ndraw(box(locate((-2.5,-1)),locate((2.5,1))), invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0390_053b52e.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((1.5,1.5),i=(1,0.5),j=(-1,1));\ncoordsys Rp=currentcoordsys;\ncoordsys Rs=cartesiansystem((-1.5,1.5),i=(-1,0.5),j=(-1,-1));\ncoordsys R=defaultcoordsys;\n\nshow(\"$O$\",\"$\\vec{\\imath}$\", \"$\\vec{\\jmath}$\", R);\nshow(\"$O'$\",\"$\\vec{u}$\",\"$\\vec{v}$\", Rp, xpen=invisible);\nshow(\"$O''$\",\"$\\vec{u'}$\",\"$\\vec{v'}$\", Rs, xpen=invisible);\n\npair w=(0.75,1.5);\ndraw(\"$\\overrightarrow{w}$\",(0,0)--w,Arrow);\n\npair P=(1,1);\ndot(\"$P$\",P);\ndot(\"$P$\",point(Rp,P/Rp),N);\ndot(\"$P$\",point(Rs,P/Rs),S);\n\nshow(\"$\\overrightarrow{w'}$\", vector(w));\nshow(\"$\\overrightarrow{w''}$\", vector(Rs,w));\n\ndot(\"$P'$\",point(Rp,P));\ndot(\"$P''$\",point(Rs,P));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0391_038cf31.png",
    "code": "import geometry;\nsize(12cm);\n\npoint C=(0,0);\ndot(C);\n\nhyperbola[] h;\nh[0]=hyperbola(C,2,2);\nh[1]=hyperbola(C,1.5,1);\n\ndraw(h[0], 2bp+0.8*red);\ndraw(h[1], 2bp+0.8*blue);\n\npoint[] P=intersectionpoints(h[0],h[1]);\n\nline[] l;\nfor (int i=0; i < P.length; ++i) {\n  for (int j=0; j < 2; ++j) {\n    /*<asyxml><view file=\"modules/geometry.asy\" type=\"line[]\" signature=\"tangents(hyperbola,point)\"/></asyxml>*/\n    l=tangents(h[j],P[i]);\n    draw(l[0], j == 0 ? red : blue);\n  }\n}\n\ndot(P, yellow);\n\n// Enlarge the bounding box of the current picture.\ndraw(box((-4,-3), (4,3)), invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0392_052121c.png",
    "code": "import geometry;\nsize(10cm);\n\npoint C=(4,2);\ndot(\"$C$\",C,E+NE,red);\n\nhyperbola h=hyperbola(C,1.5,1,-20);\ndraw(h, linewidth(bp));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangent(hyperbola,abscissa)\"/></asyxml>*/\nline l=tangent(h,angabscissa(85));\ndraw(l, grey);\ndot(intersectionpoints(h,l));\n\nl=tangent(h,angabscissa(0,fromCenter));\ndraw(l, grey);\ndot(intersectionpoints(h,l));\n\n// Enlarge the bounding box of the current picture.\ndraw(box((-1,-0.5), (9,4)), invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0393_01f6eba.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((1.5,1.5),i=(1,0.5),j=(-1,1));\ncoordsys Rp=currentcoordsys;\ncoordsys Rs=cartesiansystem((-1.5,1.5),i=(-1,0.5),j=(-1,-1));\ncoordsys R=defaultcoordsys;\n\nshow(\"$O$\",\"$\\vec{\\imath}$\", \"$\\vec{\\jmath}$\", R);\nshow(\"$O'$\",\"$\\vec{u}$\",\"$\\vec{v}$\", Rp, xpen=invisible);\nshow(\"$O''$\",\"$\\vec{u'}$\",\"$\\vec{v'}$\", Rs, xpen=invisible);\n\npair P=(1,1);\ndot(\"$P$\",P);\n\ndraw(format(\"$\\vert OP\\vert\\simeq %.2f$\",abs(P)),(0,0)--P,Arrows);\n\npoint Pp=P;\ndot(\"$P'$\",Pp);\nvector wp=Pp;\nshow(format(\"$\\vert O'P'\\vert= %.2f$\",abs(Pp)), wp, Arrows);\n\npoint Ps=point(Rs,P);\ndot(\"$P''$\",Ps,S);\nvector ws=Ps;\nshow(format(\"$\\vert O''P''\\vert\\simeq %.2f$\",abs(Ps)), ws, Arrows);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0394_0065e68.png",
    "code": "unitsize(2cm);\nimport geometry;\nlinemargin=5mm;\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.25),j=(-0.25,.75));\n// show(li=Label(\"$\\vec{\\imath}$\",align=S,EndPoint), currentcoordsys);\n\npoint A=(-1,-1), B=(1,0.5);\nline l1=line(A,B);\n\ndraw(\"$(l_1)$\",l1);\ndraw(\"$s_1$\",(segment) l1, 2pt+red,\n     marker(stickframe,markuniform(2,true)));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"bisector(segment,real)\"/></asyxml>*/\nline bis=bisector((segment) l1);\ndraw(bis,red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"show(picture,line,pen)\"/></asyxml>*/\nshow(bis,grey);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(line,real)\"/></asyxml>*/\ndot(point(bis,1.5));\n\ndraw(box(locate((-2,-2)),locate((2,2))),invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0395_0116709.png",
    "code": "import geometry;\nsize(12cm);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint C=(3,2);\ndot(\"$C$\", C, N, red);\n\n// Enlarge the bounding box of the current picture.\ndraw(box((0,0),(5,4.5)), invisible);\n\nhyperbola h=hyperbola(C, 1, 2);\n\ndraw(h, bp+dashed); /* Defered drawing to adjust the path to the final\n                       bounding box.*/\n\n// Define the bounding box to draw the hyperbola.\n// Try finalbounds(); to determine the final bounding box.\nh.bmin=(0,0.5); h.bmax=(5,4);\ndraw((path)h, linewidth(bp)); /* The path of 'p' is restricted to the box whose\n                                 the corners are p.bmin, p.bmax.*/\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(explicit hyperbola,explicit real)\"/></asyxml>*/\ndot(\"point(h, 0)\", point(h,0), 2W, 3mm+blue);\n\ndot(\"point(h, 15)\", point(h,15), 2W, 3mm+blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"nodabscissa(real)\"/></asyxml>*/\ndot(\"point(h, 40)\", point(h,nodabscissa(40)), 2W,3mm+blue);\n// point(h,nodabscissa(40)) can be replaced by point(h,40)\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"real[]\" signature=\"bangles(picture,hyperbola)\"/></asyxml>*/\nreal[][] bg=bangles(h);\n\ndot((path)h, yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0396_06bb2c3.png",
    "code": "import geometry;\nsize(12cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(4,2);\n\nellipse el=ellipse(A,3,2,20);\ndraw(el);\ndot(\"$C$\",el.C,2W,red);\n\ndot(\"$F_1$\",el.F1,S);\ndot(\"$F_2$\",el.F2,S);\n\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"angpoint(explicit ellipse,real,polarconicroutine)\"/></asyxml>*/\npoint P=angpoint(el, 0);\ndot(\"angpoint(el, 0)\", P,E);\ndraw(el.F1--P);\n\npoint P=angpoint(el, 90);\ndot(\"angpoint(el, 90)\", P,NW);\ndraw(el.F1--P);\n\npoint P=angpoint(el, 90, fromCenter);\ndot(\"angpoint(el,90,fromCenter)\", P,NW);\ndraw(el.C--P);\n\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"angabscissa(real,polarconicroutine)\"/></asyxml>*/\ndot(\"angpoint(el, 180)\", point(el,angabscissa(180)), W);\n// point(el,angabscissa(180)) can be replaced by angpoint(el,180)\n\ndot(\"angpoint(el, 270)\", angpoint(el,270),SE);\ndot(\"angpoint(el, 370)\", angpoint(el,370),NE);\ndot(\"angpoint(el, -45)\", angpoint(el,-45),SE);\n\npoint P=angpoint(el, -45, fromCenter);\ndot(\"angpoint(el,-45,fromCenter)\", P,S);\ndraw(el.C--P);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0397_096311d.png",
    "code": "import geometry;\nsize(10cm);\n\npoint F=(2,-1.5);\ndot(\"$F$\",F,N,red);\n\n// Enlarge the bounding box of the current picture.\ndraw(box((-1,-1),(3,1.5)),dashed);//,invisible);\n\nparabola p=parabola(F,0.2,90);\n\n// Define the bounding box to draw the parabola.\n// Try finalbounds(); to determine the final bounding box.\np.bmin=(-0.75,-0.4);\np.bmax=(2.75,0.75);\n\ndraw(box(p.bmin,p.bmax),red);\n\ndraw(p,dashed);/* Defered drawing to adjust the path to the final\n                  bounding box.*/\n\ndraw((path)p,red); /* The path of 'p' is restricted to the box whose\n                  the corners are p.bmin, p.bmax.*/\n\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0398_016f60c.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.25),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-1,-1);\npoint B=(0.75,0.5);\ndot(\"$A$\",A,NW,red);\ndot(\"$B$\",B,N,red);\n\ncircle c1=circle(A,1.5);\ncircle c2=circle(B,2);\ndraw(c1^^c2);\n\npoint[] inter=intersectionpoints(c1,c2);\ndot(\"$M$\", inter[0], 2NW, red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangent(circle,point)\"/></asyxml>*/\ndraw(tangent(c1,inter[0]), grey);\ndraw(tangent(c2,inter[0]), grey);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangent(circle,abscissa)\"/></asyxml>*/\ndraw(tangent(c2,angabscissa(135)), grey);\n\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0399_06b47ac.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\nreal R=2;\n\npoint A=(1,1);\ndot(\"$A$\", A, S, red);\npoint B=A+(2,1);\ndot(\"$B$\", B, N, blue);\n\narc a=arc(circle(A,R), -40, 180);\narc b=arc(circle(B,R), -45, 220);\nline l=line(A,B);\n\ndraw(a,red);\ndraw(b,blue);\ndraw(l);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(arc,arc)\"/></asyxml>*/\npoint[] inter=intersectionpoints(a,b);\ndot(inter);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,arc)\"/></asyxml>*/\npoint[] inter=intersectionpoints(l,a);\ndot(inter);\n\npoint[] inter=intersectionpoints(l,b);\ndot(inter);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0400_07eeded.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-1,1));\ncoordsys Rp=currentcoordsys;\ncoordsys Rs=cartesiansystem((-1,2),i=(-1,0.5),j=(-1,-1));\ncoordsys R=defaultcoordsys;\n\nshow(\"$O$\",\"$\\vec{\\imath}$\", \"$\\vec{\\jmath}$\", R);\nshow(\"$O'$\",\"$\\vec{u}$\",\"$\\vec{v}$\", Rp, xpen=invisible);\nshow(\"$O''$\", \"$\\vec{u'}$\", \"$\\vec{v'}$\", Rs, xpen=invisible);\n\npair a=(0.5,0.5);\npair b=(-0.5,-1);\n\npoint A=point(R,a), B=point(R,b);\ndot(\"$A$\",A,S); dot(\"$B$\",B,S);\nline l=line(A,B);\n\npoint Ap=a, Bp=b;\ndot(\"$A'$\",Ap); dot(\"$B'$\",Bp,SE);\nline lp=line(Ap,Bp);\n\npoint As=point(Rs,a), Bs=point(Rs,b);\ndot(\"$A''$\",As,S); dot(\"$B''$\",Bs,SE);\nline ls=line(As,Bs);\n\ndraw(l^^lp^^ls);\n\ndot(intersectionpoint(l,lp),2mm+red);\ndot(intersectionpoint(l,ls),2mm+red);\ndot(intersectionpoint(lp,ls),2mm+red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0401_00bf8c7.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((1.25,0.75),i=(1,1),j=(-1,1));\ncoordsys Rp=currentcoordsys;\ncoordsys R=defaultcoordsys;\n\nshow(\"$O$\", \"$\\vec{\\imath}$\", \"$\\vec{\\jmath}$\", R);\nshow(\"$O'$\",\"$\\vec{u}$\",\"$\\vec{u}$\", Rp, xpen=invisible);\n\nvector w=(0.125,0.5);\npoint P=(1,0.5);\n\ndot(\"$P$\",P);\ndraw(Label(\"$\\overrightarrow{w}$\",EndPoint), origin()--origin()+w, Arrow);\ndraw(\"$\\overrightarrow{O'P}+\\overrightarrow{w}$\",\n     origin()--P+w, Arrow);\n\ndot(\"$M$\",P+w,red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"pair\" signature=\"locate(explicit vector)\"/></asyxml>*/\ndraw(\"$\\overrightarrow{w}$\", (0,0)--locate(w), W,Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0402_077e21f.png",
    "code": "import geometry;\nsize(12cm,0);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint F=(0,0);\ndot(\"$F$\", F, SW);\nparabola p=parabola(F, 0.1, 30);\ndraw(p);\n\npoint C=shift(2*(p.V-p.F))*p.V;\ncircle cle=circle(C, 0.2);\ndraw(cle);\nfor (int i=0; i < 360; i+=90) {\n\n  point M=point(cle, angabscissa(i));\n  dot(\"$M$\", M, locate(unit(M-C)));\n\n  line[] tgt=tangents(p, M);\n  draw(tgt, 0.8*red);\n\n  for (int i=0; i < tgt.length; ++i) {\n    dot(intersectionpoints(p, tgt[i]), blue);\n  }\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0403_03311a4.png",
    "code": "import geometry; size(15cm);\n\ninversion inv=inversion(1,(-3.6,0));\npath g1=inv*line((-1,0),(-1,1)),\ng2=inv*line((1,0),(1,1));\nfill(g1,0.91*yellow); draw(g1,linewidth(bp));\nunfill(g2); //draw(g2,linewidth(bp));\n\nint n=40;\nfor (int i=-n; i <= n; ++i) {\n  path g=inv*circle((point) (0,2*i),1);\n  fill(g,(1-abs(i)/n)*orange);\n  // draw(g,bp+0.8*orange); //draw(g,black);\n}\nshipout(bbox(5mm,Fill(rgb(0.95,0.95,0.7))));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0404_074cb31.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\nshow(currentcoordsys);\n\npoint A=(1,1);\ndot(\"$A$\",A,S,red);\n\nreal R=2;\ncircle C=circle(A,R);\ndraw(C,Arrow);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"ellipse\" signature=\"*(transform,circle)\"/></asyxml>*/\nellipse el=xscale(2)*C;\ndraw(el,blue,Arrow);\n\n// /*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"xscale(real,point)\"/></asyxml>*/\nellipse el=xscale(2,A)*C;\ndraw(el,red,Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0405_094068a.png",
    "code": "import geometry;\nsize(12cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(3.5,0.5);\ndot(\"$A$\", A, S, red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"reverse(arc)\"/></asyxml>*/\narc C=reverse(arc(ellipse(A,2,1,20), 45, 270, fromCenter));\ndraw(C,Arrow);\ndraw(complementary(C), grey+dashed);\ndistance(\"$R=2$\",A,point(C.el,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"angpoint(arc,real)\"/></asyxml>*/\ndot(\"angpoint(C, 90)\",  angpoint(C,90), SW);\n\ndot(\"angpoint(C, 180)\", point(C,angabscissa(180)), NW); // point(C,angabscissa(180)) is similar to angpoint(C,180)\n\ndot(\"angpoint(C, 270)\", angpoint(C,270), E);\ndot(\"angpoint(C, -45)\", angpoint(C,-45), E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0406_05fca3c.png",
    "code": "import geometry;\nsize(12cm,0);\n\n// currentcoordsys=cartesiansystem((1,2), i=(1,0.5), j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(1,1);\ndot(\"$A$\", A, S, red);\n\narc C=arc(ellipse(A,2,1,45), 45, 270, fromCenter);\n// arc C=arc(ellipse(A,2,1), 45, -45);\n\ndraw(C, Arrow);\ndraw(complementary(C), grey+dashed);\ndistance(\"$R=2$\",A,point(C.el,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"relpoint(arc,real)\"/></asyxml>*/\ndot(\"relpoint(C, 0)\", relpoint(C,0),W);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(arc,abscissa)\"/></asyxml>*/\ndot(\"relpoint(C, 0.25)\", point(C,Relative(0.25)),W);// point(C,Relative(0.25)) is similar to relpoint(C,0.25)\ndot(\"relpoint(C, -0.5)\", relpoint(C,-0.5),E);\ndot(\"relpoint(C, 0.5)\",  relpoint(C,0.5),W);\ndot(\"relpoint(C, 0.75)\", relpoint(C,0.75),SE);\ndot(\"relpoint(C, 1.25)\", relpoint(C,1.25),E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0407_0243643.png",
    "code": "import geometry;\nsize(12cm);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\ncoordsys R=currentcoordsys;\nshow(R);\n\npoint C=(4,2);\ndot(\"$C$\", C, NW, red);\n\nhyperbola h=hyperbola(C, 2, 1.5, -10);\ndraw(h);\n\n///////////////////////////////////////\ncurrentpolarconicroutine=fromCenter;//\n/////////////////////////////////////\n\ncoordsys Rp=canonicalcartesiansystem(h);\nshow(Label(\"$O'$\", align=SW,blue),\n     Label(\"$\\vec{u}$\",blue),\n     Label(\"$\\vec{v}$\",blue),\n     Rp, ipen=blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"angpoint(explicit hyperbola,real,polarconicroutine)\"/></asyxml>*/\ndot(\"angpoint(h, 0)\", angpoint(h,0), E+NE);\ndot(rotate(80)*\"angpoint(h, 180)\", angpoint(h,180),E);\n\ndraw(arcfromcenter(h,0,30), bp+red);\n\n// point(p,angbscissa(150)) can be replaced by angpoint(p,150)\ndot(\"angpoint(h, 150)\", point(h, angabscissa(150)), E);\n\npoint P=point(h, angabscissa(210));\ndot(\"angpoint(h, 210)\", P, E);\n\npoint P=angpoint(h, 30);\ndot(\"angpoint(h, 30)\", P, E);\n\nsegment s=segment(C, P);\ndraw(s);\nmarkangle(\"$30^\\circ$\", Ox(Rp),(line) s, radius=1.5cm, Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0408_02174a4.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\nreal R=2;\n\npoint A=(1,1);\ndot(\"$A$\", A, S, red);\npoint B=A+(2,1);\ndot(\"$B$\", B, N, blue);\n\narc a=arc(ellipse(A,R,R/2), -40, 180);\narc b=arc(ellipse(B,R,R/2), -45, 220);\n\nline l=line(A,B);\n\ndraw(a,red);\ndraw(b,blue);\ndraw(l);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(arc,arc)\"/></asyxml>*/\npoint[] inter=intersectionpoints(a,b);\ndot(inter);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,arc)\"/></asyxml>*/\npoint[] inter=intersectionpoints(l,a);\ndot(inter);\n\npoint[] inter=intersectionpoints(l,b);\ndot(inter);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0409_08ffb92.png",
    "code": "import geometry;\nsize(12cm);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint F1=(0,0);\ndot(\"$F1$\",F1,NW);\npoint F2=(-0.25,0.5);\ndot(\"$F2$\",F2,SE);\n\nparabola p=parabola(F1, 0.1, 120);\ndraw(p, bp+red);\n\nparabola pp=parabola(F2, 0.06, 280);\ndraw(pp, bp+blue);\n\nabscissa x=angabscissa(180);\ndot(point(p,x));\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangent(parabola,abscissa)\"/></asyxml>*/\ndraw(tangent(p,x), 0.8*red);\n\npoint[] P=intersectionpoints(p,pp);\ndot(P);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line[]\" signature=\"tangents(parabola,point)\"/></asyxml>*/\ndraw(tangents(p,P[0]), 0.8*red);\ndraw(tangents(pp,P[0]), 0.8*blue);\n\n// Enlarge the bounding box\ndraw(box((-1,-0.4), (0.5,0.6)),invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0410_07254ec.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((1.5,1.5),i=(1,0.5),j=(-1,1));\ncoordsys Rp=currentcoordsys;\ncoordsys R=defaultcoordsys;\n\nshow(\"$O$\",\"$\\vec{\\imath}$\", \"$\\vec{\\jmath}$\", R);\nshow(\"$O'$\", \"$\\vec{u}$\", Label(\"$\\vec{v}$\",align=NE), Rp, xpen=invisible);\n\npair w=(1.5,0.75);\ndraw(\"$\\overrightarrow{w}$\",(0,0)--w,Arrow);\n\npair P=(1,-1);\ndot(\"$P$\",P);\n\nshow(\"$\\overrightarrow{w'}$\", vector(w));\n\ndot(\"$P'$\",point(Rp,P),N);\n\npoint Ip=I;\ndot(\"$I'$\",Ip,N);\ndot(\"$I'*P'$\",Ip*point(Rp,P),S);\ndot(\"$I*P'$\",I*point(Rp,P),N);\n\nvector wp=Ip*vector(w);\nshow(Label(\"$I'*\\overrightarrow{w'}$\",EndPoint), wp);\n\nvector foo=I*vector(w);\nshow(\"$I*\\overrightarrow{w'}$\", foo);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0411_0432c86.png",
    "code": "import geometry;\nsize(12cm,0);\n\ncurrentcoordsys=cartesiansystem((1.25,0.75),i=(1,0.5),j=(-1,1));\ncoordsys Rp=currentcoordsys;\ncoordsys R=defaultcoordsys;\n\nshow(Label(\"$O$\",align=SE), \"$\\vec{\\imath}$\", Label(\"$\\vec{\\jmath}$\",align=E), R);\nshow(\"$O'$\", \"$\\vec{u}$\", \"$\\vec{v}$\", Rp, xpen=invisible);\n\nvector w=(0.25,0.5);\npoint P=(1,0.5);\n\ndot(\"$P$\",P,W);\nshow(\"$\\overrightarrow{w}$\", w);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"rotateO(real)\"/></asyxml>*/\npoint Pp=rotateO(90)*P;\n\ndot(\"Pp=rotateO(90)*P\", Pp, W);\n\ndot(\"rotate(90,Pp)*P\", rotate(90,Pp)*P, W);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"scale(real,point)\"/></asyxml>*/\ndot(\"scale(-2,Pp)*P\", scale(-2,Pp)*P, NE);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"scaleO(real)\"/></asyxml>*/\ndot(\"scaleO(2)*P\", scaleO(2)*P,red);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"xscaleO(real)\"/></asyxml>*/\ndot(\"xscaleO(2)*P\", xscaleO(2)*P);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"yscaleO(real)\"/></asyxml>*/\ndot(\"yscaleO(2)*P\", yscaleO(2)*P,W);\n\nvector wp=rotateO(90)*w;\n\nshow(\"$\\overrightarrow{w'}$\", wp);\n\ndraw(\"$\\overrightarrow{w}$\", (0,0)--locate(w), W, Arrow);\ndraw(\"$\\overrightarrow{w'}$\", (0,0)--locate(wp), S, Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0412_05b71b1.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,0.75));\n// show(currentcoordsys);\n\ntriangle t=rotate(-20)*triangle((-1,0), (2,0), (0,2));\ndrawline(t, linewidth(bp));\nlabel(t, alignAngle=90, alignFactor=2);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"incenter(triangle)\"/></asyxml>*/\npoint incenter=incenter(t);\n\nline ba=bisector(t.VA);\ndraw(ba, blue);\nmarkangle((line) t.AB, (line) t.AC,StickIntervalMarker(i=2,n=1));\n\nline bb=bisector(t.VB);\ndraw(bb, blue);\nmarkangle((line) t.BC, (line) t.BA, radius=2cm, StickIntervalMarker(i=2,n=2));\n\nline bc=bisector(t.VC);\ndraw(bc, blue);\nmarkangle((line) t.CA, (line) t.CB, radius=1.5cm, StickIntervalMarker(i=2,n=3));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0413_00cc6aa.png",
    "code": "import geometry;\nsize(12cm,0);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint A=(2.5,-1);\ndot(\"$A$\",A,SW);\nellipse el1=ellipse(A,2,1,10);\ndraw(el1);\n\ncircle C=circle(A,3);\ndraw(C);\nfor (int i=0; i < 360; i+=90) {\n\n  point B=point(C,angabscissa(i));\n  dot(\"$B$\",B,locate(unit(B-A)));\n\n\n  line[] tgt=tangents(el1,B);\n  draw(tgt,0.8*red);\n\n  for (int i=0; i < tgt.length; ++i) {\n    dot(intersectionpoints(el1,tgt[i]),blue);\n  }\n\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0414_014e708.png",
    "code": "import geometry;\nunitsize(1.5cm);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\nreal R=2;\npoint A=(3.5,1.5);\n\ndot(\"$A$\",A,S,red);\n\narc C=arc(circle(A,2), 45, 270);\ndraw(C,Arrow);\ndraw(complementary(C),grey+dashed);\ndistance(\"$R=2$\",A,point(C,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(arc,real)\"/></asyxml>*/\ndot(\"point(C, 15)\", point(C,15), 2N, 3mm+blue);\n\ndot(\"point(C, 30)\",\n    point(C,nodabscissa(30)), // OR point(C,40)\n    2W,3mm+blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"int\" signature=\"arcnodesnumber(explicit arc)\"/></asyxml>*/\ndot(Label(\"point(C, 3*arcnodesnumber(R)/4)\",UnFill),\n    point(C, 3*arcnodesnumber(C)/4), 2E, 3mm+blue);\n\ndot((path)C, yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0415_00280ae.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint C=(1,1);\ndot(\"$C$\", C, NE, red);\n\nreal R=2;\narc a=arc(ellipse(C,R,R/2), 90, 0, fromCenter);\ndraw(a, linewidth(4mm));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"markarc(picture,Label,int,real,real,arc,arrowbar,pen,pen,margin,marker)\"/></asyxml>*/\nmarkarc(format(\"%0g\", degrees(a)), radius=-0.5*markangleradius(), a);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"*(real, explicit arc)\"/></asyxml>*/\ndraw(0.5*a, 2mm+yellow);\n\narc ap=a/3;\ndraw(ap, 1mm+blue);\nmarkarc(format(\"%0g\", degrees(ap)), radius=1.5*markangleradius(), ap, blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0416_04fb413.png",
    "code": "import geometry;\n\nsize(5cm,0);\n\npoint M=(1,1);\npoint N=(0.25,0.28);\npoint P=(0.75,0.66);\n\npath g=origin--M;\nline l=line(origin,M);\npen p=linewidth(5mm);\ndraw(l,p);\n\ndot(N,p+red);\ndot(N,blue);\n\ndot(P,p+red);\ndot(P,blue);\n\ndraw(box(origin,(1,1)),invisible);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"bool\" signature=\"@(point,line)\"/></asyxml>*/\nwrite(N@l);// Return 'false'\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"bool\" signature=\"onpath(picture,path,point,pen)\"/></asyxml>*/\nwrite(onpath(g,N,p));// Return 'true'\nwrite(onpath(g,P,p));// Return 'false'\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0417_004f06d.png",
    "code": "import geometry;\nsize(12cm);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint F=(2,-1.5);\ndot(\"$F$\",F,N,red);\n\n// Enlarge the bounding box of the current picture.\ndraw(box((-0.5,-0.4),(4,1.5)),invisible);\n\nparabola p=parabola(F,0.2,90);\n\ndraw(p,bp+dashed); /* Defered drawing to adjust the path to the final\n                   bounding box.*/\n\n// Define the bounding box to draw the parabola.\n// Try finalbounds(); to determine the final bounding box.\np.bmin=(-0.5,-0.4);\np.bmax=(3.7,0.75);\ndraw((path)p, linewidth(bp)); /* The path of 'p' is restricted to the box whose\n                  the corners are p.bmin, p.bmax.*/\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(explicit parabola,explicit real)\"/></asyxml>*/\ndot(\"point(p, 0)\", point(p,0),2E,3mm+blue);\n\ndot(\"point(p, 15)\", point(p,15),2W,3mm+blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"nodabscissa(real)\"/></asyxml>*/\ndot(\"point(p, 40)\", point(p,nodabscissa(40)), 2W,3mm+blue);\n// point(p,nodabscissa(40)) can be replaced by point(p,40)\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"real[]\" signature=\"bangles(picture,parabola)\"/></asyxml>*/\nreal[] bg=bangles(p);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"int\" signature=\"parabolanodesnumber(parabola,real,real)\"/></asyxml>*/\ndot(\"point(p, parabolanodesnumber(p,bg[0],bg[1])/2)\",\n    point(p, parabolanodesnumber(p,bg[0],bg[1])/2), S, 3mm+blue);\n\ndot((path)p, yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0418_07316df.png",
    "code": "import geometry;\nsize(10cm);\n\npoint C=(4,2);\ndot(\"$C$\",C,E+NE,red);\n\nhyperbola h=hyperbola(C,1.5,1,-20);\ndraw(h, linewidth(bp));\n\ncoordsys R=currentcoordsys;\nshow(R);\n\ncoordsys Rp=canonicalcartesiansystem(h);\nshow(Label(\"$O'$\",align=SW,blue), Label(\"$\\vec{u}$\",blue), Label(\"$\\vec{v}$\",blue), Rp, ipen=blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"angpoint(explicit hyperbola,real,polarconicroutine)\"/></asyxml>*/\ndot(rotate(70)*\"angpoint(h, 180)\",angpoint(h,180),E);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(hyperbola,abscissa)\"/></asyxml>*/\npoint P=point(h,angabscissa(55));\n// point(h,angbscissa(0.5)) can be replaced by angpoint(h,0.5)\ndot(\"angpoint(h, 55)\",P,SE);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"path\" signature=\"arcfromfocus(conic,real,real,int,bool)\"/></asyxml>*/\ndraw(arcfromfocus(h,55,180), bp+red);\n\nsegment s=segment(h.F1,P);\ndraw(s);\ndot(\"$F_1$\",h.F1,N+NW);\nline l=line(h.F1,h.F1-Rp.i);\nmarkangle(\"$55^\\circ$\",l,(line)s,Arrow);\n\ndot(\"angpoint(p, -50)\",angpoint(h,-50),W);\ndot(\"angpoint(p, -55)\",angpoint(h,-55),NE);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0419_062841b.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(3.5,0.5);\ndot(\"$A$\",A,S,red);\n\narc C=arc(circle(A,2),45,270,CCW);\ndraw(C,Arrow);\ndraw(complementary(C),grey+dashed);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"distance(picture pic,Label,point,point,bool,real,pen,pen,arrow)\"/></asyxml>*/\ndistance(\"$R=2$\",A,point(C.el,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"curpoint(arc,real)\"/></asyxml>*/\ndot(\"curpoint(C, 0)\", curpoint(C,0),E);\ndot(\"curpoint(C, pi/2)\", curpoint(C,pi/2),N);\ndot(\"curpoint(C, -pi/2)\", curpoint(C,-pi/2));\n\n// dot(\"curpoint(C, pi)\", point(C,curabscissa(pi)),W); // OR curpoint(C,pi)\ndot(\"curpoint(C, pi)\", curpoint(C,pi),W);\n\ndot(\"curpoint(C, 2*pi)\", curpoint(C,2*pi),SW);\ndot(\"curpoint(C, 3*pi)\", curpoint(C,3*pi),E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0420_05c0c8b.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\nshow(currentcoordsys);\n\npoint A=(1,1);\ndot(\"$A$\",A,S,red);\n\nreal R=2;\ncircle C=circle(A,R);\ndraw(C,Arrow);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"ellipse\" signature=\"*(transform,circle)\"/></asyxml>*/\ndraw(scale(0.5)*C,red,Arrow);\n\ndraw(scale(0.5,A)*C,2mm+0.8*blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"circle\" signature=\"/(explicit circle,real)\"/></asyxml>*/\ndraw(C/2,0.75mm+green,Arrow(4mm));\n\n// Note that the point 'point(C,0)' is always at the same place relatively to 'C'.\ndraw(rotateO(180)*C/2,0.8*yellow,Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0421_032580e.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\nshow(currentcoordsys);\n\npoint A=(1,1);\ndot(\"$A$\",A,S,red);\n\nreal a=3, b=2;\nellipse el=ellipse(A,a,b,0);\ndraw(el,Arrow);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"ellipse\" signature=\"*(transform,ellipse)\"/></asyxml>*/\ndraw(scale(0.5)*el,red,Arrow);\n\ndraw(scale(0.5,A)*el,2mm+0.8*blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"ellipse\" signature=\"/(ellipse,real)\"/></asyxml>*/\ndraw(el/2,0.75mm+green,Arrow(4mm));\n\n// Note that the point 'point(el,0)' is always at the same place relatively to 'el'.\ndraw(rotateO(135)*el/2,0.8*yellow,Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0422_02e832c.png",
    "code": "import geometry;\nsize(10cm);\n\npoint F=(1,0.5);\ndot(\"$F$\",F,E,red);\n\nparabola p=parabola(F,0.2,110);\n\ndraw(p);\n\ncoordsys R=currentcoordsys;\nshow(R);\n\ncoordsys Rp=canonicalcartesiansystem(p);\nshow(Label(\"$O'$\",align=NW+W,blue), Label(\"$\\vec{u}$\",blue), Label(\"$\\vec{v}$\",blue), Rp, ipen=blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"angpoint(explicit parabola,real)\"/></asyxml>*/\ndot(\"angpoint(p, 180)\",angpoint(p,180),SE+E);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(parabola,abscissa)\"/></asyxml>*/\npoint P=point(p,angabscissa(55));\n// point(p,angbscissa(0.5)) can be replaced by angpoint(p,0.5)\ndot(\"angpoint(p, 55)\",P,NE);\n\nsegment s=segment(F,P);\ndraw(s);\nline l=line(F,F+Rp.i);\nmarkangle(\"$\"+(string)degrees(l,s)+\"^\\circ$\",l,(line)s,Arrow);\n\ndot(\"angpoint(p, -45)\",angpoint(p,-45),W);\ndot(\"angpoint(p, -55)\",angpoint(p,-55),W);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0423_05739b8.png",
    "code": "import geometry;\nsize(12cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(3.5,0.5);\ndot(\"$A$\",A,SW,red);\n\narc C=arc(ellipse(A,2,1,-30),90,270,fromCenter,CCW);\nreal l=arclength(C);\n\ndraw(C,Arrow);\ndraw(complementary(C),grey+dashed);\ndistance(\"$R=2$\",A,point(C.el,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"curpoint(arc,real)\"/></asyxml>*/\ndot(\"curpoint(C, 0)\", curpoint(C,0),E);\ndot(\"curpoint(C, l/4)\", curpoint(C,l/4),0.5N+E);\ndot(\"curpoint(C, -l/4)\", curpoint(C,-l/4));\n\ndot(\"curpoint(C, l/2)\", point(C,curabscissa(l/2)),W); // point(C,curabscissa(l/2)) is similar to curpoint(C,pi)\ndot(\"curpoint(C, l)\", curpoint(C,l), SW);\ndot(\"curpoint(C, 3*l/2)\", curpoint(C,3*l/2),E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0424_0070286.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint A=(4,2);\n\nreal a=2, b=3;\nellipse el=ellipse(A,a,b);\n\ndot(\"$C$\",el.C,N,red);\ndraw(el,linewidth(1mm));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(explicit ellipse,explicit real)\"/></asyxml>*/\ndot(\"point(el, 0)\", point(el,0),N,3mm+blue);\n\ndot(\"point(el, 15)\", point(el,15),2W,3mm+blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"nodabscissa(real)\"/></asyxml>*/\ndot(\"point(el, 40)\",\n    point(el,nodabscissa(40)),\n    2W,3mm+blue);\n// point(el,nodabscissa(40)) can be replaced by point(el,40)\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"int\" signature=\"circlenodesnumber(real)\"/></asyxml>*/\ndot(\"point(el, 3*circlenodesnumber(max(a,b))/4)\",\n    point(el, 3*circlenodesnumber(max(a,b))/4), S, 3mm+blue);\n\ndot((path)el, yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0425_06cd6c9.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,1),j=(-0.5,.75));\nshow(\"\",\"$\\vec{u}$\", \"$\\vec{v}$\", currentcoordsys, ipen=blue);\nshow(defaultcoordsys);\n\npoint A=(0,0);\n\nreal R=2;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"\" signature=\"struct circle\"/></asyxml>*/\ncircle C=circle(A,R);\ndraw(C,1.5mm+red);\n\ncircle Cp=circle(point(defaultcoordsys,A),R);\ndraw(Cp,0.75mm+blue);\n\n// One can draw in the 'currentcoordsys' a circle definided in\n// the 'defaultcoordsys'\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"path\" signature=\"*(coordsys,path)\"/></asyxml>*/\ndraw(currentcoordsys*Cp, red+blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0426_0028911.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint C=(1,1);\ndot(\"$C$\", C, dir(30), red);\n\narc a=arc(ellipse(C,2,1,30), -45, 45);\ndraw(a, linewidth(4mm));\ndot(\"$F_1$\", a.el.F1, dir(210), red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"markarc(picture,Label,int,real,real,arc,arrowbar,pen,pen,margin,marker)\"/></asyxml>*/\nmarkarc(format(\"%0g\", degrees(a)), radius=2.5*markangleradius(), a);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"*(real, explicit arc)\"/></asyxml>*/\ndraw(0.5*a, 2mm+yellow);\n\narc ap=a/3;\ndraw(ap, 1mm+blue);\nmarkarc(format(\"%0g\", degrees(ap)), radius=1.5*markangleradius(), ap, blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0427_07acf96.png",
    "code": "import geometry;\nunitsize(1.5cm);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\nreal R=2;\npoint A=(3.5,1.5);\n\ndot(\"$A$\",A,S,red);\n\narc C=arc(ellipse(A,2,1,45), 45, 270, fromCenter);\ndraw(C,Arrow);\ndraw(complementary(C),grey+dashed);\ndistance(\"$R=2$\",A,point(C.el,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(arc,real)\"/></asyxml>*/\ndot(\"point(C, 15)\", point(C,15), W, 3mm+blue);\n\ndot(\"point(C, 30)\",\n    point(C,nodabscissa(30)), // OR point(C,40)\n    S,3mm+blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"int\" signature=\"arcnodesnumber(explicit arc)\"/></asyxml>*/\ndot(Label(\"point(C, 3*arcnodesnumber(R)/4)\",UnFill),\n    point(C, 3*arcnodesnumber(C)/4), 2E, 3mm+blue);\n\ndot((path)C, yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0428_067ab9b.png",
    "code": "import geometry;\nsize(8cm);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\n// show(currentcoordsys);\n\ndotfactor *=1.5;\ntriangle t=triangleabc(3,4,5);\ndrawline(t, linewidth(bp));\nlabel(t, alignFactor=3);\n\nline l=line((-1,-2), (1,0.5));\ndraw(l, 0.8*red);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(triangle,line,bool)\"/></asyxml>*/\ndot(intersectionpoints(t,l), 0.8*red);\n\ncircle C=2*circle(t);\ndraw(C, 0.8*blue);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(triangle,conic,bool)\"/></asyxml>*/\ndot(intersectionpoints(t,C, true), 0.8*blue);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0429_04c1658.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(2.5,-1);\npoint B=A+(3,1);\ndot(\"$A$\",A,SW);\ndot(\"$B$\",B,2N+0.5W);\n\ncircle c1=circle(A,1.5);\ndraw(c1);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line[]\" signature=\"tangents(circle,point)\"/></asyxml>*/\nline[] tgt=tangents(c1,B);\ndraw(tgt,red);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"circle\" signature=\"circle(point,point)\"/></asyxml>*/\ndraw(circle(B,A),grey);\n\n// dot(intersectionpoints(c1,circle(B,A)),red);\nfor (int i=0; i<tgt.length; ++i) {\n  dot(intersectionpoints(c1,tgt[i]),2mm+red);\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0430_045d48f.png",
    "code": "import geometry;\nsize(15cm);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-1,0.5));\ncoordsys R=currentcoordsys;\nshow(R, xpen=invisible);\n\npoint A=(2,2);\ndot(\"A\",A,SE);\n\npoint B=(3,1.5);\ndot(\"B\",B,SE);\n\npoint C=A+(4,2);\ndot(\"C\",C);\n\ndrawline(A,B,red);\ndrawline(A,C,blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"scale(real,point,point,point,point,bool)\"/></asyxml>*/\ntransform t=scale(2,A,B,A,C);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"transform\" signature=\"projection(point,point,point,point,bool)\"/></asyxml>*/\ntransform proj=projection(A,B,A,C);\n\npoint M=(2,4);\npoint Mh=proj*M;\ndot(\"$H_M$\",Mh,SE);\ndot(\"$M$\",M);\npoint Mp=t*M;\ndot(\"\\small$scale(2,A,B,A,C)*M=M'$\",Mp,W);\ndrawline(M,Mh);\n\npoint P=(1,-1);\npoint Ph=proj*P;\ndot(\"$H_P$\",Ph,NW);\ndrawline(P,Ph);\ndot(\"$P$\",P);\n\ntransform t=scale(-1,A,B,A,C);\npoint Pp=t*P;\ndot(\"\\small$P'=scale(-1,A,B,A,C)*P$\",Pp);\ndraw(P--Pp);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0431_079d206.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((1.5,1.5),i=(1,0.5),j=(-1,1));\ncoordsys Rp=currentcoordsys;\ncoordsys Rs=cartesiansystem((-1.5,1.5),i=(-1,0.5),j=(-1,-1));\ncoordsys R=defaultcoordsys;\n\nshow(\"$O$\",\"$\\vec{\\imath}$\", \"$\\vec{\\jmath}$\", R);\nshow(\"$O'$\",\"$\\vec{u}$\",\"$\\vec{v}$\", Rp, xpen=invisible);\nshow(\"$O''$\",\"$\\vec{u'}$\",\"$\\vec{v'}$\", Rs, xpen=invisible);\n\nint n=64;\nreal step=2pi/n;\n\nfor (int i=0; i<n; ++i) {\n  pen p=(i/n)*red;\n  dot(point(R,R.polar(1,step*i)),p);\n  dot(point(Rp,Rp.polar(1,step*i)),p);\n  dot(point(Rs,Rs.polar(1,step*i)),p);\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0432_04bdb68.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\nreal R=2;\n\npoint A=(1,1.5);\ndot(\"$A$\",A,S,red);\npoint B=A+(2,1);\ndot(\"$B$\",B,S,blue);\n\narc a=arc(circle(A,R),-40,180);\narc b=arc(circle(B,R),-45,220);\n\ndraw(a,red);\ndraw(b,blue);\n\npoint M=intersectionpoints(a,b)[0];\ndot(M);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangent(explicit arc,point)\"/></asyxml>*/\ndraw(tangent(a,M), grey);\ndraw(tangent(b,M), grey);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangent(explicit arc,abscissa)\"/></asyxml>*/\ndraw(tangent(a,angabscissa(45)), grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0433_0823486.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(-1,-1);\npoint B=(0.75,0.5);\ndot(\"$A$\",A,NW,red);\ndot(\"$B$\",B,N,red);\n\nellipse el1=ellipse(A,2,1.5);\nellipse el2=ellipse(B,3,2);\ndraw(el1);\ndraw(el2,Arrow);\n\npoint[] inter=intersectionpoints(el1,el2);\ndot(\"$M$\", inter[0], 2NW, red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line[]\" signature=\"tangents(ellipse,point)\"/></asyxml>*/\ndraw(tangents(el1,inter[0]), grey);\ndraw(tangents(el2,inter[0]), grey);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangent(ellipse,abscissa)\"/></asyxml>*/\ndraw(tangent(el2,angabscissa(90)), grey);\n\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0434_032bdb9.png",
    "code": "import geometry;\n\nsize(10cm);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\n// show(currentcoordsys);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"triangle\" signature=\"triangleabc(real,real,real,real,point)\"/></asyxml>*/\ntriangle t=triangleabc(3,4,5);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"show(picture,Label,Label,Label,Label,Label,Label,triangle,pen,filltype)\"/></asyxml>*/\nshow(La=\"3\", Lb=\"4\", Lc=\"5\",t);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0435_067dc10.png",
    "code": "size(12cm);\nimport geometry;\ndotfactor*=1.5;\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,1),j=(-4,1));\nshow(currentcoordsys);\n\npoint A=(1,1), B=(2,1);\nline l1=line(A,B);\n\ndraw(l1);\ndot(\"$A$\",A);\ndot(\"$B$\",B);\n\npoint C=(-1,0), D=(-2,-2);\nline l2=line(C,D);\n\ndraw(l2);\ndot(\"$C$\",C,S);\ndot(\"$D$\",D,N);\n\npoint M=(2,-0.5);\ndot(\"$M$\",M,0.8*red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"sameside(point,line,line)\"/></asyxml>*/\npoint[] Ms=sameside(M,l1,l2);\ndraw(M--Ms[0]^^M--Ms[1],0.8red);\ndot(Ms[0]^^Ms[1],0.8red);\n\npoint P=(-3,-1);\ndot(\"$P$\",P,S,blue);\n\npoint[] Ps=sameside(P,l1,l2);\ndraw(P--Ps[0]^^P--Ps[1],blue);\ndot(Ps[0]^^Ps[1],blue);\n\npoint Q=(2,1.5);\ndot(\"$Q$\",Q,N,green);\n\npoint[] Qs=sameside(Q,l1,l2);\ndraw(Q--Qs[0]^^Q--Qs[1],green);\ndot(Qs[0]^^Qs[1],green);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0436_0549bc2.png",
    "code": "import geometry;\nsize(8cm);\n\ncurrentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint A=(-1,0) ; dot(\"$A$\",A,S);\npoint B=(1,1)  ; dot(\"$B$\",B,S);\npoint C=(0,1)  ; dot(\"$C$\",C,SW);\npoint D=(1,-1) ; dot(\"$D$\",D,SW);\n\ncircle c=circle(origin(),2);\n\nline l1=line(A,B); draw(l1);\nline l2=line(C,D); draw(l2);\n\npoint[] J=intersectionpoints(l1,c);\npoint[] K=intersectionpoints(l2,c);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(ellipse,point,point,bool)\"/></asyxml>*/\ndraw(arc(c,J[0],K[0]),1mm+0.8yellow);\ndraw(arc(c,K[0],J[1]),1mm+0.8red);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(ellipse,abscissa,abscissa,bool)\"/></asyxml>*/\ndraw(arc(c,angabscissa(c,J[1]),angabscissa(c,K[1])),1mm+0.8blue);\ndraw(arc(c,angabscissa(c,K[1]),angabscissa(c,J[0])),1mm+0.8green);\n\ndot(\"$J_0$\",J[0],2W); dot(\"$J_1$\",J[1],2N);\ndot(\"$K_0$\",K[0],2E) ; dot(\"$K_1$\",K[1],2N+W);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0437_044103c.png",
    "code": "import geometry;\nsize(6cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint A=(-1,1);\ndot(\"$A$\",A,S);\n\narc a=arc(circle(A,2), 45, 270);\ndraw(a,linewidth(3mm),ArcArrow(5mm));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(explicit arc,abscissa,abscissa)\"/></asyxml>*/\ndraw(arc(a,angabscissa(135),angabscissa(225)),1mm+red,ArcArrow(3mm),TrueMargin(0,0.5mm));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0438_0626c0d.png",
    "code": "import geometry;\nsize(12cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(4,2);\n\nellipse el=ellipse(A,3,2,30);\ndraw(el);\ndot(\"$C$\",el.C,S,red);\n\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"pair\" signature=\"curpoint(explicit ellipse,real)\"/></asyxml>*/\ndot(\"curpoint(el, 0)\", curpoint(el,0), E);\n\nreal L=arclength(el);\n\n\ndot(\"curpoint(el, L/8)\", curpoint(el,L/8),NW);\n\ndot(\"curpoint(el, -L/8)\", curpoint(el,-L/8));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"curabscissa(real)\"/></asyxml>*/\ndot(\"point(el,curabscissa(L/4))\", point(el,curabscissa(L/4)),NW);\n// point(el,curabscissa(pi)) can be replaced by curpoint(el,pi)\n\ndot(\"curpoint(el, L/2)\", curpoint(el,L/2),W);\ndot(\"curpoint(el, 3*L/4)\", curpoint(el,3*L/4),SE);\ndot(\"curpoint(el, 9*L/8)\", curpoint(el,9*L/8),4N+4W);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0439_05a305f.png",
    "code": "import geometry;\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\nshow(currentcoordsys);\n\npoint A=(-1,0);\npoint B=(0.5,-3sin(2));\ndot(\"$A$\",A,S,red);\ndot(\"$B$\",B,N,red);\n\nline l=line(A,B);\nellipse el=ellipse((0,-sqrt(2)/2),3,2,90);\ndraw(l);\ndraw(el,Arrow);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,ellipse)\"/></asyxml>*/\npoint[] inter=intersectionpoints(l,el);\ndot(\"$M$\", inter[0], 4N+2W, red);\ndot(\"$N$\", inter[1], 2S+0.5E, red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0440_021a014.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\nreal R=2;\n\npoint A=(1,1.5);\ndot(\"$A$\",A,S,red);\npoint B=A+(2.5,1);\ndot(\"$B$\",B,E,blue);\n\narc a=arc(ellipse(A,R,R/2,30),-40,180);\n// ellispenodesnumberfactor=400;\narc b=arc(ellipse(B,2R,R/2,-10),-30,180);\n\ndraw(a,red);\ndraw(b,blue);\n\npoint M=intersectionpoints(a,b)[0];\ndot(M);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangent(explicit arc,point)\"/></asyxml>*/\ndraw(tangent(a,M), grey);\ndraw(tangent(b,M), grey);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"tangent(explicit arc,abscissa)\"/></asyxml>*/\ndraw(tangent(a,angabscissa(45)), grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0441_01752e1.png",
    "code": "import geometry;\nsize(10cm);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\n// show(currentcoordsys);\n\npoint A=(-1,-1);\npoint B=(2,1);\ndot(\"$A$\",A,S,red);\ndot(\"$B$\",B,NW,red);\n\nline l=line(A,B,false);\nline ll=hline()+0.5*B;\ndraw(l^^ll);\ndraw(complementary(l),dashed+grey);\n\npoint F=(2,-1.5);\ndot(\"$F$\",F,N);\n\nparabola p=parabola(F,0.2,110);\ndraw(p);\n\ndotfactor*=2;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,parabola)\"/></asyxml>*/\ndot(intersectionpoints(l,p), red);\ndot(intersectionpoints(ll,p), red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0442_076423a.png",
    "code": "size(10cm);\nimport geometry;\ndotfactor*=1.5;\nlinemargin = 5mm;\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,1),j=(-4,1));\nshow(currentcoordsys);\n\npoint A=(1,1), B=(2,1);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"\" signature=\"struct line\"/></asyxml>*/\nline l1=line(A,B);/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"line(point,bool,point,bool)\"/></asyxml>*/\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"draw(picture,Label,line,bool,bool,align,pen,arrowbar,Label,marker)\"/></asyxml>*/\ndraw(l1,red);\ndot(\"$A$\",A);\ndot(\"$B$\",B);\n\nfor (int i=0; i<10; ++i){\n  pair bad=(i,l1.slope*i+l1.origin);\n  point good=bad;\n  draw(Label(\"bad\",align=S),bad,linewidth(2bp));\n  draw(Label(good @ l1 ? \"good\":\"bad\",align=W),good,linewidth(2bp));\n}\n\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0443_063034d.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,0.75));\n// show(currentcoordsys);\n\ntriangle t=triangle((-1,0), (2,0), (0,2));\n\ndrawline(t, linewidth(bp));\nlabel(t,alignFactor=2, alignAngle=90);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"triangle\" signature=\"symmedial(triangle)\"/></asyxml>*/\ntriangle st=symmedial(t);\ndraw(st, bp+0.8green);\nlabel(\"$A'$\", \"$B'$\", \"$C'$\", st, alignAngle=45, 0.8green);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"median(vertex)\"/></asyxml>*/\nline mA=median(t.VA);\ndraw(mA, blue);\ndot(\"$M_A$\",midpoint(t.BC), 1.5E, blue);\ndraw(segment(t.BC), bp+blue, StickIntervalMarker(2,2,blue));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"bisector(vertex,real)\"/></asyxml>*/\nline bA=bisector(t.VA);\ndraw(bA, grey);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"bisectorpoint(side)\"/></asyxml>*/\ndot(\"$B_A$\", bisectorpoint(t.BC));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"symmedian(vertex)\"/></asyxml>*/\nline sA=symmedian(t.VA);\ndraw(sA, 0.8*green);\n\ndraw(symmedian(t.VB), 0.8*green);\ndraw(symmedian(t.VC), 0.8*green);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"symmedian(triangle)\"/></asyxml>*/\npoint sP=symmedian(t);\ndot(sP);\n\nmarkangle(sA, (line) t.AC, radius=2cm, StickIntervalMarker(1,1));\nmarkangle((line) t.AB, mA, radius=2cm, StickIntervalMarker(1,1));\nmarkangle(mA, sA, radius=10cm, StickIntervalMarker(2,2));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0444_04c1889.png",
    "code": "import geometry;\nsize(10cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(2,-2);\ndot(\"$A$\",A,S,red);\n\ncircle C=circle(A,2);\ndraw(C);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"distance(picture pic,Label,point,point,bool,real,pen,pen,arrow)\"/></asyxml>*/\ndistance(\"$R=2$\",A,point(C,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"relpoint(explicit circle,real)\"/></asyxml>*/\ndot(\"relpoint(C, 0)\",relpoint(C,0),E);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(circle,abscissa)\"/></asyxml>*/\ndot(\"relpoint(C, 0.25)\",point(C,Relative(0.25)),NW);\n// point(C,Relative(0.25)) can be replaced by relpoint(C,0.25) OR point(C,relabscissa(0.25))\n\ndot(\"relpoint(C, 0.5)\",relpoint(C,0.5),W);\ndot(\"relpoint(C, 0.75)\",relpoint(C,0.75),SE);\ndot(\"relpoint(C, 1.125)\",relpoint(C,1.125),NE);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0445_01a3b4e.png",
    "code": "import geometry;\nunitsize(2cm);\nlinemargin=0.5cm;\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(3.5,0.75);\ndot(\"$A$\",A,S);\npoint B=A+(cos(0.5),cos(1));\ndot(\"$B$\",B,S);\n\n\narc c=arc(circle(A,2), 45, 270, CCW);\narc cc=complementary(c);\ndraw(c,Arrow);\ndraw(cc,dashed+grey);\n\nline l=line(A,B);\ndraw(l);\npoint M=intersectionpoints(l,c)[0];\npoint P=intersectionpoints(l,cc)[0];\n\ndot(\"\", M, 2E);\ndot(\"$M$\", M, 2W, linewidth(2mm));\ndot(\"\", P, 2E);\ndot(\"$P$\", P, 2W, linewidth(2mm));\ndot(\"$O$\", point(c,0), SE);\n\npoint p=A-(4,2.5);\ntransform t=shift((0,-0.3));\ntransform T=shift((4,0));\nreal x;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"angabscissa(arc,point)\"/></asyxml>*/\nx=angabscissa(c,M).x;\nlabel(\"angabscissa(c,M).x=$\"+(string)x+\"^\\circ$\",p,E);\ndot(angpoint(c,x),1mm+red);\nx=angabscissa(c,P).x;\nlabel(\"angabscissa(c,P).x=$\"+(string)x+\"^\\circ$\",T*p,E);\ndot(angpoint(c,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"curabscissa(arc,point)\"/></asyxml>*/\nx=curabscissa(c,M).x;\ndot(curpoint(c,x),1mm+red);\nlabel(\"curabscissa(c,M).x=\"+(string)x,p,E);\nx=curabscissa(c,P).x;\nlabel(\"curabscissa(c,P).x=\"+(string)x,T*p,E);\ndot(curpoint(c,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"nodabscissa(arc,point)\"/></asyxml>*/\nx=nodabscissa(c,M).x;\nlabel(\"nodabscissa(c,M).x=\"+(string)x,p,E);\ndot(point(c,x),1mm+red);\nlabel(\"nodabscissa(c,P).x= \\scriptsize{ERROR (point is not on the arc!)}\",T*p,E);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"relabscissa(arc,point)\"/></asyxml>*/\nx=relabscissa(c,M).x;\nlabel(\"relabscissa(c,M).x=\"+(string)x,p,E);\ndot(relpoint(c,x),1mm+red);\nx=relabscissa(c,P).x;\nlabel(\"relabscissa(c,P).x=\"+(string)x,T*p,E);\ndot(relpoint(c,x),1mm+red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0446_024fd93.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(1,1);\ndot(\"$A$\",A,S,red);\n\nreal R=2;\narc C=arc(circle(A,R), 45, 210);\ndraw(C,linewidth(4mm));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"markarc(picture,Label,int,real,real,arc,arrowbar,pen,pen,margin,marker)\"/></asyxml>*/\nmarkarc(format(\"%0g\",degrees(C)), C, Arrow);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"*(real, explicit arc)\"/></asyxml>*/\ndraw(0.5*C,2mm+yellow);\n\narc Cp=C/3;\ndraw(Cp,1mm+blue);\nmarkarc(format(\"%0g\",degrees(Cp)), radius=25mm, Cp, blue, Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0447_010239a.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(1,1);\ndot(\"$A$\", A, NW, red);\n\nreal R=2;\narc C=arc(circle(A,R), 45, 210, CW);\ndraw(C,linewidth(4mm));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"markarc(picture,Label,int,real,real,arc,arrowbar,pen,pen,margin,marker)\"/></asyxml>*/\nmarkarc(format(\"%0g\",degrees(C)), C, radius=markangleradius(), Arrow);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"*(real, explicit arc)\"/></asyxml>*/\ndraw(0.5*C, 2mm+yellow);\n\narc Cp=C/3;\ndraw(Cp, 1mm+blue);\nmarkarc(format(\"%0g\",degrees(Cp)), radius=-25mm, Cp, blue, Arrow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0448_02acbe2.png",
    "code": "import geometry;\nunitsize(2cm);\nlinemargin=0.5cm;\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(3.5,0.75);\ndot(\"$A$\",A,S);\npoint B=A+(cos(0.5),cos(1));\ndot(\"$B$\",B,S);\n\n\narc c=rotate(45,B)*xscale(2,A)*arc(circle(A,2), 45, 270, CCW);\narc cc=complementary(c);\ndraw(c,Arrow);\ndraw(cc,dashed+grey);\n\nline l=line(A,B);\ndraw(l);\npoint M=intersectionpoints(l,c)[0];\npoint P=intersectionpoints(l,cc)[0];\n\ndot(\"\", M, 2E);\ndot(\"$M$\", M, 2W, linewidth(2mm));\ndot(\"\", P, 2E);\ndot(\"$P$\", P, 2W, linewidth(2mm));\ndot(\"$O$\", point(c,0), SE);\n\npoint p=A-(4,2.5);\ntransform t=shift((0,-0.3));\ntransform T=shift((4,0));\nreal x;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"angabscissa(arc,point)\"/></asyxml>*/\nx=angabscissa(c,M).x;\nlabel(\"angabscissa(c,M).x=$\"+(string)x+\"^\\circ$\",p,E);\ndot(angpoint(c,x),1mm+red);\nx=angabscissa(c,P).x;\nlabel(\"angabscissa(c,P).x=$\"+(string)x+\"^\\circ$\",T*p,E);\ndot(angpoint(c,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"curabscissa(arc,point)\"/></asyxml>*/\nx=curabscissa(c,M).x;\ndot(curpoint(c,x),1mm+red);\nlabel(\"curabscissa(c,M).x=\"+(string)x,p,E);\nx=curabscissa(c,P).x;\nlabel(\"curabscissa(c,P).x=\"+(string)x,T*p,E);\ndot(curpoint(c,x),1mm+red);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"nodabscissa(arc,point)\"/></asyxml>*/\nx=nodabscissa(c,M).x;\nlabel(\"nodabscissa(c,M).x=\"+(string)x,p,E);\ndot(point(c,x),1mm+red);\nlabel(\"nodabscissa(c,P).x= \\scriptsize{ERROR (point is not on the arc!)}\",T*p,E);\n\np=t*p;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"relabscissa(arc,point)\"/></asyxml>*/\nx=relabscissa(c,M).x;\nlabel(\"relabscissa(c,M).x=\"+(string)x,p,E);\ndot(relpoint(c,x),1mm+red);\nx=relabscissa(c,P).x;\nlabel(\"relabscissa(c,P).x=\"+(string)x,T*p,E);\ndot(relpoint(c,x),1mm+red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0449_01ccb28.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,0.75));\n// show(currentcoordsys);\n\ntriangle t=rotate(-20)*triangle((-1,0), (2,0), (0,2));\ndrawline(t, linewidth(bp));\nlabel(t,alignFactor=4);\n\nline bab=bisector(t.AB);\ndraw(bab, blue);\nperpendicularmark(t.AB,bab,quarter=4);\n\nline bac=bisector(t.AC);\ndraw(bac, blue);\nperpendicularmark(t.AC,bac,quarter=4);\n\nline bbc=bisector(t.BC);\ndraw(bbc, blue);\nperpendicularmark(t.BC,bbc,quarter=4);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0450_026e4ff.png",
    "code": "import geometry;\nsize(10cm,0);\n\n// currentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint A=(0,0), B=(2,1);\n\nline l=line(A,B);\ndraw(l);\nshow(l, blue);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"relpoint(line,real)\"/></asyxml>*/\npoint P=relpoint(l, 1);\ndot(\"relpoint(l, 1)\", P, 2E,linewidth(2mm));\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"relabscissa(line,point)\"/></asyxml>*/\ndot(point(l,relabscissa(l,P)), red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"curpoint(line,real)\"/></asyxml>*/\npoint P=curpoint(l, 1);\ndot(\"curpoint(l, 1)\", P, SE, blue+2mm);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"curabscissa(line,point)\"/></asyxml>*/\ndot(point(l,curabscissa(l,P)), yellow);\n\n\npoint P=relpoint(l, 2);\ndot(\"relpoint(l, 2)\", P, NW,linewidth(2mm));\ndot(point(l,relabscissa(l,P)), red);\n\npoint P=curpoint(l, 2);\ndot(\"curpoint(l, 2)\", P, NW, blue+2mm);\ndot(point(l,curabscissa(l,P)), yellow);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0451_0322b5e.png",
    "code": "size(8cm,0);\nimport geometry;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"\" signature=\"struct coordsys\"/></asyxml>*/\nshow(currentcoordsys);\n\npair a=(0,0.5), b=(1,0.5);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"\" signature=\"struct point\"/></asyxml>*/\npoint A=a, B=b;\n\ndot(\"$A$\",A);\ndot(\"$B$\",B);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0452_08df80f.png",
    "code": "unitsize(1cm);\nimport geometry;\ndotfactor*=1.5;\nlinemargin=5mm;\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-1,1));\nshow(currentcoordsys);\n\npoint A=(-3,-1), B=(3,4);\nline l1=line(A,B);\n\ndraw(l1,red);\ndot(\"$A$\",A,SE);\ndot(\"$B$\",B,NW);\n\npoint M=(2,-2);\ndot(\"$M$\",M);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"parallel(point,line)\"/></asyxml>*/\ndraw(parallel(M,l1),red);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"line\" signature=\"perpendicular(point,line)\"/></asyxml>*/\nline perp=perpendicular(M,l1);\ndraw(perp);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"intersectionpoint(line,line)\"/></asyxml>*/\npoint interp=intersectionpoint(l1,perp);\ndot(interp,green);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"markrightangle(picture,point,point,point,real,pen,margin,filltype)\"/></asyxml>*/\nmarkrightangle(l1.A,interp,rotate(180,interp)*M,size=5mm);\n\ndraw(box((-5,-5),(5,5)),invisible);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0453_0713356.png",
    "code": "import geometry;\nsize(8cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint A=(0.25,0.25);\npoint B=A+(1,0.25);\ndot(\"$A$\",A,S,red);\ndot(\"$B$\",B,N,red);\n\nsegment s=segment(A,B);\nline bis=bisector(s);\n\ndraw(s,StickIntervalMarker(2,2));\ndraw(bis);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"path\" signature=\"compassmark(pair,pair,real,real)\"/></asyxml>*/\ndraw(compassmark(A, point(bis,0.75), position=0.25,angle=25), grey);\ndraw(compassmark(B, point(bis,0.75), position=0.75,angle=25), grey);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point\" signature=\"point(line,real)\"/></asyxml>*/\ndraw(compassmark(A, point(bis,0.25), position=0.5,angle=15), grey);\ndraw(compassmark(B, point(bis,0.25), position=0.5,angle=15), grey);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0454_04c29a0.png",
    "code": "import geometry;\n\nsize(8cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,1),j=(-0.5,.75));\nshow(currentcoordsys);\n\npoint A=(-0.5,.75);\npoint B=(1,1);\ndot(\"$A$\",A,SE);\ndot(\"$B$\",B,NW);\n\nline l=line(A,B,false);\nline ll=hline()+B;\n\nellipse el=ellipse((point)(0.5,0.5),3,2);\ndraw(l^^ll);\ndraw(complementary(l),dashed+grey);\ndraw(el);\n\ndotfactor*=2;\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,ellipse)\"/></asyxml>*/\ndot(intersectionpoints(l,el),red);\ndot(intersectionpoints(ll,el),red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0455_078f201.png",
    "code": "import geometry;\nsize(10cm);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\n// show(currentcoordsys);\n\npoint A=(-1,-1);\npoint B=(2,1);\ndot(\"$A$\",A,S,red);\ndot(\"$B$\",B,N,red);\n\nline l=line(A,B);\ndraw(l);\n\npoint F=(2,-1.5);\ndot(\"$F$\",F,N);\n\nparabola p=parabola(F,0.2,110);\ndraw(p);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(line,parabola)\"/></asyxml>*/\npoint[] inter=intersectionpoints(l,p);\ndot(\"$M$\", inter[0], 2N+E, red);\ndot(\"$N$\", inter[1], S+2E, red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0456_062d53a.png",
    "code": "import geometry;\nsize(11cm,0);\n\ncurrentcoordsys=cartesiansystem((0,0),i=(1,0.5),j=(-0.5,.75));\nshow(currentcoordsys, xpen=invisible);\n\npoint A=(2,-2);\ndot(\"$A$\",A,S,red);\n\ncircle C=circle(A,2);\ndraw(C);\ndistance(\"$R=2$\",A,point(C,0),0);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"pair\" signature=\"curpoint(explicit circle,real)\"/></asyxml>*/\ndot(\"curpoint(C, pi/2)\", curpoint(C,pi/2),NE);\n\ndot(\"curpoint(C, -pi/2)\", curpoint(C,-pi/2));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"abscissa\" signature=\"curabscissa(real)\"/></asyxml>*/\ndot(\"curpoint(C, pi)\", point(C,curabscissa(pi)),NW);\n// point(C,curabscissa(pi)) can be replaced by curpoint(C,pi)\n\ndot(\"curpoint(C, 2*pi)\", curpoint(C,2*pi),W);\ndot(\"curpoint(C, 3*pi)\", curpoint(C,3*pi),SE);\ndot(\"curpoint(C, 4.25*pi)\", curpoint(C,4.25*pi),E);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0457_08258ba.png",
    "code": "import geometry;\nsize(12cm);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,0.75));\n// currentcoordsys=cartesiansystem((2,1),i=rotate(45)*(1,0),j=rotate(45)*(0,1));\n// show(currentcoordsys);\n\nconic co[];\nco[0]=circle((point)(0,0),1);\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"draw(picture,Label,explicit conic,align,pen,arrowbar,arrowbar,margin,Label,marker)\"/></asyxml>*/\ndraw(co[0]);\n\nco[1]=ellipse((point)(0,0),4,1);\ndraw(co[1]);\n\nco[2]=parabola((0,0),1,90);\ndraw(co[2]);\n\nhyperbola h=hyperbola((-1,0),(1,0),1.2,byvertices);\nco[3]=h;\ndraw(co[3]);\ndraw(h.A1,grey);\ndraw(h.A2,grey);\n\ndotfactor *= 1;\n\nfor (int i=0; i < 4; ++i) {\n  dot(intersectionpoints(h.A1,co[i]),blue);\n  dot(intersectionpoints(h.A2,co[i]),blue);\n  for (int j=i+1; j < 4; ++j)\n    /*<asyxml><view file=\"modules/geometry.asy\" type=\"point[]\" signature=\"intersectionpoints(conic,conic)\"/></asyxml>*/\n    dot(intersectionpoints(co[i],co[j]), red);\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0458_0543ca9.png",
    "code": "import geometry;\nsize(6cm,0);\n\n// currentcoordsys=cartesiansystem((1,2),i=(1,0.5),j=(-0.5,.75));\n// show(currentcoordsys, xpen=invisible);\n\npoint A=(-1,1);\ndot(\"$A$\",A,S);\n\narc a=arc(ellipse(A,2,1,45), 45, 270, fromCenter);\ndraw(a,linewidth(3mm),ArcArrow(5mm));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"arc\" signature=\"arc(explicit arc,abscissa,abscissa)\"/></asyxml>*/\ndraw(arc(a,angabscissa(135),angabscissa(225)),1mm+red,ArcArrow(3mm),TrueMargin(0,0.5mm));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0459_037cb37.png",
    "code": "size(12cm);\nimport geometry;\n\ncurrentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,1));\nshow(currentcoordsys);\n\npoint A=(1,1);\nline l1=line(45,A);\ndraw(\"$(l_1)$\",l1);\ndot(\"$A$\",A);\n\npoint B=(3,1);\nline l2=line(-60,B);\ndraw(\"$(l_2)$\",l2);\ndot(\"$B$\",B);\n\nmarkangleradiusfactor*=5;\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"void\" signature=\"markangle(picture,Label,int,real,real,line,line,arrowbar,pen,filltype,margin,marker)\"/></asyxml>*/\nmarkangle(2,l2,l1,0.8*green,StickIntervalMarker(i=1,n=2));\n\nmarkangle(2,radius=-0.5*markangleradius(),\n          l2,l1,0.8*blue);\n\nmarkangle(reverse(l2),reverse(l1),Arrow,StickIntervalMarker(i=1,n=2));\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"real\" signature=\"sharpdegrees(line,line)\"/></asyxml>*/\nmarkangle((string) sharpdegrees(l2,l1),\n          radius=-1.5*markangleradius(),\n          reverse(l2),l1,Arrow,red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0460_00df463.png",
    "code": "import geometry;\n\nsize(10cm);\n\n// currentcoordsys=cartesiansystem((2,1),i=(1,0.5),j=(-0.25,.75));\n// show(currentcoordsys);\n\n/*<asyxml><view file=\"modules/geometry.asy\" type=\"triangle\" signature=\"triangleAbc(real,real,real,real,point)\"/></asyxml>*/\ntriangle t=triangleAbc(60,3,5,angle=90);\nshow(Lb=\"3\", Lc=\"5\",t);\nmarkangle(\"$60^\\circ$\",t.B,t.A,t.C);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0468_033b156.png",
    "code": "import grid3;\n\nsize(10cm,0,IgnoreAspect);\ncurrentprojection=orthographic(0.25, 1, 0.25);\n\nlimits((-2,-2,0), (0,2,2));\n\ngrid3(\n      pic=currentpicture,            // picture (default=currentpicture)\n\n      gridroutine=XYZgrid(           // gridtype3droutine or gridtype3droutine [] (alias gridtype3droutines)\n                          //                         or gridtype3droutines []:\n                          //                         The routine(s) to draw the grid(s);\n                          //                         the values can be as follows:\n                          //                            * XYgrid : draw grid from X in direction of Y\n                          //                            * YXgrid : draw grid from Y in direction of X\n                          //                                etc...\n                          //                            * An array of previous values XYgrid, YXgrid, ...\n                          //                            * XYXgrid : draw XYgrid and YXgrid grids\n                          //                            * YXYgrid : draw XYgrid and YXgrid grids\n                          //                            * ZXZgrid : draw ZXgrid and XZgrid grids\n                          //                            * YX_YZgrid : draw YXgrid and YZgrid grids\n                          //                            * XY_XZgrid : draw XYgrid and XZgrid grids\n                          //                            * YX_YZgrid : draw YXgrid and YZgrid grids\n                          //                            * An array of previous values XYXgrid, YZYgrid, ...\n                          //                            * XYZgrid : draw XYXgrid, ZYZgrid and XZXgrid grids.\n                          pos=Relative(0)), // position (default=Relative(0)) :\n      //                          this is the position of the grid relatively to\n      //                          the perpendicular axe of the grid.\n      //                          If 'pos' is a the real, 'pos' is a coordinate relativly to this axe.\n      //                          Alias 'top=Relative(1)', 'middle=Relative(0.5)'\n      //                          and 'bottom=Relative(0)' can be used as value.\n\n      // Following arguments are similar as the function 'Ticks'.\n      N=0,                // int (default=0)\n      n=0,                // int (default=0)\n      Step=0,             // real (default=0)\n      step=0,             // real (default=0)\n      begin=true,         // bool (default=true)\n      end=true,           // bool (default=true)\n      pGrid=grey,         // pen (default=grey)\n      pgrid=lightgrey,    // pen (default=lightgrey)\n      above=false         // bool (default=false)\n      );\n\nxaxis3(Label(\"$x$\",position=EndPoint,align=S), Bounds(Min,Min), OutTicks());\nyaxis3(Label(\"$y$\",position=EndPoint,align=S), Bounds(Min,Min), OutTicks());\nzaxis3(Label(\"$z$\",position=EndPoint,align=(0,0.5)+W), Bounds(Min,Min), OutTicks(beginlabel=false));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0469_0783689.png",
    "code": "import grid3;\n\nsize(10cm,0,IgnoreAspect);\ncurrentprojection=orthographic(0.25, 1, 0.25);\nlimits((-2,-2,0), (0,2,2));\n\ngrid3(new grid3routines [] {XYXgrid(Relative(1)), XZXgrid(0)});\n\nxaxis3(Label(\"$x$\",position=EndPoint,align=S), Bounds(Min,Min), OutTicks());\nyaxis3(Label(\"$y$\",position=EndPoint,align=S), Bounds(Min,Min), OutTicks());\nzaxis3(Label(\"$z$\",position=EndPoint,align=(0,.5)+W), Bounds(Min,Min), OutTicks(beginlabel=false));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0470_02c6b02.png",
    "code": "import grid3;\n\nsize(10cm,0,IgnoreAspect);\ncurrentprojection=orthographic(0.25,1,0.25);\nlimits((-2,-2,0),(0,2,2));\n\nreal Step=0.5, step=0.25;\nxaxis3(Label(\"$x$\",position=EndPoint,align=Z), YZEquals(-2,0),\n       InOutTicks(Label(align=0.5*(Z-Y)),\n                  Step=Step, step=step,\n                  gridroutine=XYgrid,\n                  pGrid=red, pgrid=0.5red));\n\nyaxis3(Label(\"$y$\",position=EndPoint,align=Z), XZEquals(-2,0),\n       InOutTicks(Label(align=-0.5*(X-Z)), Step=Step, step=step,\n                  gridroutine=YXgrid,\n                  pGrid=red, pgrid=0.5red));\n\nzaxis3(\"$z$\", XYEquals(-1,0), OutTicks(Label(align=-0.5*(X+Y))));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0471_005c2c1.png",
    "code": "import grid3;\n\nsize(10cm,0,IgnoreAspect);\ncurrentprojection=orthographic(0.25, 1, 0.25);\n\nlimits((-2,-2,0), (0,2,2));\n\nscale(Linear, Linear, Log(automax=false));\ngrid3(XZXgrid);\ngrid3(XYXgrid);\nxaxis3(Label(\"$x$\",position=EndPoint,align=S), Bounds(Min,Min), OutTicks());\nyaxis3(Label(\"$y$\",position=EndPoint,align=S), Bounds(Min,Min), OutTicks());\nzaxis3(Label(\"$z$\",position=EndPoint,align=(0,0.5)+W), Bounds(Min,Min), OutTicks(beginlabel=false));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0472_03e9cb4.png",
    "code": "import grid3;\n\nsize(10cm,0,IgnoreAspect);\ncurrentprojection=orthographic(0.25, 1, 0.25);\nlimits((-2,-2,0),(0,2,2));\n\ngrid3(new grid3routines [] {XYXgrid(-0.5), XYXgrid(1.5)},\n      pGrid=new pen[] {red, blue},\n      pgrid=new pen[] {0.5red, 0.5blue});\nxaxis3(Label(\"$x$\",position=EndPoint,align=Z), YZEquals(-2,0), OutTicks());\nyaxis3(Label(\"$y$\",position=EndPoint,align=Z), XZEquals(-2,0), OutTicks());\nzaxis3(Label(\"$z$\",position=EndPoint,align=X), XYEquals(-2,-2), OutTicks(Label(\"\",align=-X-Y)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0473_06a57ed.png",
    "code": "import grid3;\n\nsize(10cm,0,IgnoreAspect);\ncurrentprojection=orthographic(0.25,1,0.25);\nlimits((-2,-2,0),(0,2,2));\n\nxaxis3(Label(\"$x$\",position=EndPoint,align=Z), YZEquals(-2,0),\n       OutTicks(Label(align=0.5*(Z-Y)),Step=0.5, gridroutine=XYgrid));\n\nyaxis3(Label(\"$y$\",position=EndPoint,align=-X), XZEquals(-2,0),\n       InOutTicks(Label(align=0.5*(Z-X)),N=8,n=2, gridroutine=YX_YZgrid));\n\nzaxis3(\"$z$\", OutTicks(ZYgrid));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0474_039784b.png",
    "code": "import solids;\ncurrentlight=light(paleyellow, specularfactor=3, (2,4,6));\n\nsize(6cm,0);\ndraw(sphere(1,n=4*nslice), linewidth(bp), m=10);\ndraw(surface(sphere(1,n=4*nslice)), orange);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0476_030e4ab.png",
    "code": "// PRC/OpenGL version\n\nsize(10cm,0);\nimport graph3;\n\ncurrentprojection=orthographic(10,3,-2);\n// currentlight=nolight;\n\nguide achteck=polygon(8);\nreal lge=length(point(achteck,1)-point(achteck,0));\nint n=8;\nguide3[] sq;\nguide3[] tr;\ntriple a,b,c,d;\n\na=(point(achteck,0).x,point(achteck,0).y,-lge/2);\nb=(point(achteck,1).x,point(achteck,1).y,-lge/2);\nc=(point(achteck,1).x,point(achteck,1).y,lge/2);\nd=(point(achteck,0).x,point(achteck,0).y,lge/2);\n\nsq[0]=a--b--c--d--cycle;\nfor(int i=1;i<n;i=i+1) sq[i]=rotate(45*i,Z)*sq[0];\nfor(int i=0;i<3;i=i+1) sq[n+i]=rotate(90,Y)*sq[i];\nfor(int i=4;i<7;i=i+1) sq[n-1+i]=rotate(90,Y)*sq[i];\nfor(int i=2;i<3;i=i+1) sq[12+i]=rotate(90,X)*sq[i];\nsq[14]=rotate(90,X)*sq[2];\nsq[15]=rotate(90,X)*sq[4];\nsq[16]=rotate(90,X)*sq[6];\nsq[17]=rotate(90,X)*sq[0];\n\ntr[0]=point(sq[2],3)--point(sq[2],2)--point(sq[14],1)--cycle;\nfor(int i=1;i<4;i=i+1) tr[i]=rotate(90*i,Z)*tr[0];\ntr[4]=reverse(point(sq[2],0)--point(sq[2],1)--point(sq[9],2)--cycle);\nfor(int i=5;i<8;i=i+1) tr[i]=rotate(90*(i-4),Z)*tr[4];\n\nreal hgtsq=3;\ntriple[][][] pyrsq=new triple[18][4][3];\npath3[] pyrsqfc=new path3[4*18];\nint nofface=0;\nfor(int i=0;i<18;i=i+1){\n  triple cog=0.5(point(sq[i],0)+point(sq[i],2));\n  triple sp=cog+\n    hgtsq*unit(cross(point(sq[i],1)-point(sq[i],0),point(sq[i],3)-point(sq[i],0)));\n  for(int j=0;j<3;j=j+1){\n    pyrsq[i][j][0]=point(sq[i],j);\n    pyrsq[i][j][1]=point(sq[i],j+1);\n    pyrsq[i][j][2]=sp;\n    pyrsqfc[nofface]=pyrsq[i][j][0]--pyrsq[i][j][1]--pyrsq[i][j][2]--cycle;\n    nofface=nofface+1;\n  }\n  pyrsq[i][3][0]=point(sq[i],3);\n  pyrsq[i][3][1]=point(sq[i],0);\n  pyrsq[i][3][2]=sp;\n  pyrsqfc[nofface]=pyrsq[i][3][0]--pyrsq[i][3][1]--pyrsq[i][3][2]--cycle;\n  nofface=nofface+1;\n }\n\nfor(int i=0;i<18*4;i=i+1)\n  draw(surface(pyrsqfc[i]),yellow,black+2.5bp);\n\npath3[] pyrtrfc=new path3[3*8];\nreal hgttr=2;\nint nuoftr=0;\n\nfor(int i=0;i<8;i=i+1){\n  triple cog=(1/3)*(point(tr[i],0)+point(tr[i],1)+point(tr[i],2));\n  triple sp=cog+hgttr*unit(cross(point(tr[i],1)-point(tr[i],0),point(tr[i],2)-point(tr[i],0)));\n  pyrtrfc[nuoftr]=point(tr[i],0)--point(tr[i],1)--sp--cycle;\n  pyrtrfc[nuoftr+1]=point(tr[i],1)--point(tr[i],2)--sp--cycle;\n  pyrtrfc[nuoftr+2]=point(tr[i],2)--point(tr[i],0)--sp--cycle;\n  nuoftr=nuoftr+3;\n }\n\nfor(int j=0;j<24;j=j+1)\n  draw(surface(pyrtrfc[j]),orange+yellow,black+2bp);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0477_047d29e.png",
    "code": "// Author: John Bowman.\nsize(6cm, 0);\nimport solids;\ncurrentprojection=orthographic(0, 10, 5);\n\nnslice=4*nslice;\n\nrevolution r=sphere(O, 1);\ndraw(surface(r), lightgrey+opacity(0.75));\n\nskeleton s;\nr.transverse(s, reltime(r.g, 0.6), currentprojection);\nr.transverse(s, reltime(r.g, 0.5), currentprojection);\ndraw(s.transverse.back, linetype(\"8 8\", 8));\ndraw(s.transverse.front);\n\nr.longitudinal(s, currentprojection);\ndraw(s.longitudinal.front);\ndraw(s.longitudinal.back, linetype(\"8 8\", 8));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0478_008660c.png",
    "code": "import solids;\nsize(6cm,0);\n\ncurrentprojection=orthographic(100,150,30);\n\nreal r=1;\n\nskeleton s;\nrevolution sph=sphere(O,r);\ndraw(surface(sph), palegray);\n\npath3 cle=rotate(90,X)*scale3(r)*unitcircle3;\n\ntriple cam=unit(currentprojection.camera);\nreal a=degrees(xypart(cam),false)-90;\nreal b=-sgn(cam.z)*aCos(sqrt(cam.x^2+cam.y^2)/abs(cam));\ncle=rotate(b,cross(Z,cam))*rotate(a,Z)*cle;\ndraw(cle,4pt+red);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0479_07ff050.png",
    "code": "import solids;\n\nsize(10cm, 0);\ncurrentprojection=orthographic(-50, 100, 40);\n\n//Draw right angle (MA, MB) in 3D\nvoid drawrightangle(picture pic=currentpicture,\n                    triple M, triple A, triple B,\n                    real radius=0,\n                    pen p=currentpen,\n                    pen fillpen=nullpen,\n                    projection P=currentprojection)\n{\n  p=linejoin(0)+linecap(0)+p;\n  if (radius==0) radius=arrowfactor*sqrt(2);\n  transform3 T=shift(-M);\n  triple OA=radius/sqrt(2)*unit(T*A),\n    OB=radius/sqrt(2)*unit(T*B),\n    OC=OA+OB;\n  path3 _p=OA--OC--OB;\n  picture pic_;\n    draw(pic_, _p, p=p);\n    if (fillpen!=nullpen) draw(pic_, surface(O--_p--cycle), fillpen);\n  add(pic, pic_, M);\n}\n\n// *...............Construction starts here................*\n\nreal r=1, h=.75;\nreal gle=60;\nreal gleA=20;\ntransform3 tR=rotate(gle, Z);\ntransform3 tT=shift((0, 0, -h));\n\ntriple H=(0, 0, h),//the label is O in the picture.\n  A=rotate(gleA, Z)*(0, r, h),\n  F=tR*A,\n  B=tR*F,\n  D=tT*A,\n  C=tT*B,\n  Ei=intersectionpoint(H--F, A--B);\n\nrevolution r=cylinder(O, r, h, Z);\n// draw(surface(r));\ndraw(r);\n\ndraw(O--H, dashed);\ndraw(O--D--C--cycle^^O--H^^B--C, dashed);\n\ndrawrightangle(Ei, H, B, fillpen=black);\n\ndot(Label(\"$O'$\", align=invert(NE+E, O)), O);\n// layer();\ndraw(surface(A--B--C--D--cycle), lightgrey+opacity(.5));\n\ndot(Label(\"$A$\", align=NW), A);\ndot(Label(\"$B$\", align=N), B);\ndot(Label(\"$C$\", align=S), C);\ndot(Label(\"$D$\", align=NW), D);\ndot(Label(\"$E$\", align=S), Ei);\ndot(Label(\"$F$\", align=S), F);\ndot(Label(\"$O$\", align=N), H);\n\ndraw(H--B--F--A--cycle^^H--F^^A--B^^A--D);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0480_08cb4fa.png",
    "code": "import solids;\nimport palette;\nsize(14cm,0);\ncurrentlight=light(\n  gray(0.4),\n  specularfactor=3,\n  (-0.5,-0.25,0.45),\n  (0.5,-0.5,0.5),(0.5,0.5,0.75)\n);\n\nnslice=4*nslice;\nsurface s=surface(sphere(O,1));\ndraw(s,lightgrey);\n\npath3 pl=plane((1,0,0),(0,1,0),(0,0,-1));\nsurface pls=shift(3,3,-1e-3)*scale(-6,-6,1)*surface(pl);\ndraw(pls,0.7*red);\n\nreal dist(triple z){return abs(z-Z);}\n\nsurface shade;\nfor (int i=0; i < currentlight.position.length; ++i) {\n  shade=planeproject(pl,currentlight.position[i])*s;\n  draw(shade,mean(palette((shade.map(dist)),\n                          Gradient(black,gray(0.6)))),\n       nolight);\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0481_0864d64.png",
    "code": "size(8cm, 0);\nimport solids;\nimport graph3;\n\n//Draw 3D right angle (MA, MB)\nvoid drawrightangle(picture pic=currentpicture,\n                    triple M, triple A, triple B,\n                    real radius=0,\n                    pen p=currentpen,\n                    pen fillpen=nullpen,\n                    projection P=currentprojection)\n{\n  p=linejoin(0)+linecap(0)+p;\n  if (radius==0) radius=arrowfactor*sqrt(2);\n  transform3 T=shift(-M);\n  triple OA=radius/sqrt(2)*unit(T*A),\n    OB=radius/sqrt(2)*unit(T*B),\n    OC=OA+OB;\n  path3 tp=OA--OC--OB;\n  picture tpic;\n  draw(tpic, tp, p=p);\n  if (fillpen!=nullpen) draw(tpic, surface(O--tp--cycle), fillpen);\n  add(pic, tpic, M);\n}\n\ncurrentprojection=orthographic(10, 15, 3);\n\nreal r=10, h=6; // r=sphere radius; h=altitude section\ntriple Op=(0, 0, h);\n\nlimits((0, 0, 0), 1.1*(r, r, r));\naxes3(\"x\", \"y\", \"z\");\n\nreal rs=sqrt(r^2-h^2); // section radius\nreal ch=180*acos(h/r)/pi;\npath3 arcD=Arc(O, r, 180, 0, ch, 0, Y, 50);\n\nrevolution sphereD=revolution(O, arcD, Z);\ndraw(surface(sphereD), opacity(0.5)+lightblue);\ndraw(shift(0, 0, h)*scale3(rs)*surface(unitcircle3), opacity(0.5));\n\npath3 arcU=Arc(O, r, ch, 0, 0, 0, Y, 10);\nrevolution sphereU=revolution(O, arcU, Z);\ndraw(surface(sphereU), opacity(0.33)+lightgrey);\n\n// right triangle OO'A\ntriple A=rotate(100, Z)*(rs, 0, h);\ndot(\"$O$\", O, NW);\ndot(\"$O'$\", Op, W);\ndot(\"$A$\", A, N);\ndraw(A--O--Op--A);\ndrawrightangle(Op, O, A);\n\nif(!is3D())\n  shipout(format=\"pdf\", bbox(Fill(paleyellow)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0482_05bd6aa.png",
    "code": "import solids;\nsize(8cm,0);\ncurrentprojection=orthographic((2, 1, 2));\n\nrevolution r=cylinder((0, 0, 0), 1, -10, X);\n\ndraw(r);\ndraw(\"$x$\",O--X,Arrow3);\ndraw(\"$y$\",O--Y,Arrow3);\ndraw(\"$z$\",O--Z,Arrow3);\n\nlabel(XY()*(scale(2.5)*\"This is not a cylinder\"), (-5,0,1), align=Z);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0483_064d079.png",
    "code": "import solids;\nsize(6cm,0);\ncurrentlight=light(diffuse=yellow, specular=blue, specularfactor=5, (5,-5,10));\n// currentprojection=orthographic(100,100,30);\nreal r=2;\n\nskeleton s;\nrevolution sph=sphere(O,r);\ndraw(surface(sph),red);\n\ntriple cam=unit(currentprojection.camera);\nrevolution cle=revolution(O,r*(rotate(90,Z)*cam),cam);\ndraw(cle, 8pt+black);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0484_004240d.png",
    "code": "unitsize(1cm);\nimport solids;\n\ncurrentprojection=orthographic(0, 100, 25);\n\nreal r=4, h=7;\ntriple O=(0, 0, 0);\ntriple Oprime=(0, 0, 3);\ntriple pS=(0, 0, h);\ntriple pA=(r*sqrt(2)/2, r*sqrt(2)/2, 0);\nrevolution rC=cone(O, r, h, axis=Z, n=1);\n\ndraw(surface(rC), blue+opacity(0.5));\n\nskeleton s;\nreal tOprime=abs(Oprime)/h;\nrC.transverse(s, reltime(rC.g, tOprime), currentprojection);\ntriple pAprime=relpoint(pA--pS, tOprime);\ndraw(s.transverse.back, dashed);\ndraw(s.transverse.front);\n\nlabel(\"$S$\", pS, N);\ndot(Label(\"$O$\", align=SE), O);\ndot(Label(\"$O'$\", align=SE), Oprime);\ndot(Label(\"$A$\", align=Z), pA);\ndot(Label(\"$A'$\", align=Z), pAprime);\n\ndraw(pS--O^^O--pA^^Oprime--pAprime, dashed);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0486_02578f2.png",
    "code": "import solids;\nsize(6cm,0);\ncurrentprojection=orthographic(1,2,2);\n\nsurface s=surface(sphere(1,n=10));\n\nmaterial m = material(\n  diffusepen = 0.8*red,\n  emissivepen= yellow,\n  specularpen= red\n);\n\nmaterial[] p={m, red, 0.8*(red+blue) , green, 0.8*blue};\np.cyclic=true;\n\ndraw(s,p);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0487_0782a04.png",
    "code": "import solids;\nunitsize(4cm);\n\ncurrentprojection=orthographic(2,2,1);\n\ndraw(cylinder(c=(0,0,-1.5),r=1,h=3), m=3);\ndraw(sphere(r=1), m=2, frontpen=defaultbackpen);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0489_0560a6b.png",
    "code": "size(10cm,0);\n\ntransform scale(pair center, real k) {\n  return shift(center)*scale(k)*shift(-center);\n}\n\npath trk=(0,0)--(0,1);\n\nvoid tree(path p, int n, real a=30, real b=40, real r=.75) {\n  if (n!=0) {\n    pair h=point(p,length(p));\n    transform tb=rotate(180-b,h)*scale(h,r);\n    transform ta=rotate(-180+a,h)*scale(h,r);\n    draw(p,n/3+1/(n+1)*green+n/(n+1)*brown);\n    tree(tb*reverse(p),n-1,a,b,r);\n    tree(ta*reverse(p),n-1,a,b,r);\n  }\n}\n\ntree(trk,12,a=25,b=40,r=.75);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0490_001802e.png",
    "code": "// Barnsley's fern\n// Foug\u00e8re de Barnsley\n\nsize(5cm,0);\n\nreal ab=85, ac=-5;\nreal rc=.85, rb=-.31;\npath trk=(0,0)--(0,1);\n\ntransform ta=shift(0,1)*rotate(ab)*scale(rb);\ntransform tb=shift(0,1)*rotate(-ab)*scale(rb);\ntransform tc=shift(0,1)*rotate(ac)*scale(rc);\n\npicture fern(int n) {\n  picture opic;\n  draw(opic,trk^^ta*trk^^tb*trk^^tc*trk);\n  if (n==0) return opic;\n  picture branch=fern(n-1);\n  add(opic,branch);\n  add(opic,ta*branch);\n  add(opic,tb*branch);\n  add(opic,tc*branch);\n  return opic;\n}\n\nadd(fern(6));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0491_024f251.png",
    "code": "// Barnsley's fern\n// Foug\u00e8re de Barnsley\nsize(10cm,0);\n\nreal ab=72, ac=-7;\nreal rc=0.85, rb=0.35;\npath trk=(0,0)--(0,1);\n\ntransform ta=shift(0,1)*rotate(ab)*scale(rb);\ntransform tb=shift(0,1)*rotate(-ab)*scale(rb);\ntransform tc=shift(0,1)*rotate(ac)*scale(rc);\ntransform td=shift(0,1)*rotate((ab+ac)/2)*scale(rb);\ntransform te=shift(0,1)*rotate(-(ab+ac)/2)*scale(rb);\n\npicture pic;\ndraw(pic,trk,red+.8green);\n\n//Construct a fern branch as atractor\nint nbit=7;\nfor(int i=1; i<=nbit; ++i) {\n  picture pict;\n  add(pict,ta*pic);\n  add(pict,tb*pic);\n  add(pict,tc*pic);\n  draw(pict,(0,0)--(0,1), (2*(i/nbit)^2)*bp+((1-i/nbit)*green+i/nbit*brown));\n  pic=pict;\n}\n\n//Use the fern branch to construct... a fern branch\npicture pict;\nadd(pict,ta*pic);\nadd(pict,tb*pic);\n\npair x=(0,1);\nnbit=23;\nfor(int i=1; i<=nbit; ++i) {\n  add(shift(x)*rotate(ac*i)*scale(rc^i)*pict);\n  draw(tc^i*((0,0)--(0,1)), 2*(1.5-i/nbit)^2*bp+brown);\n  x=tc*x;\n}\n\nshipout(bbox(3mm, 2mm+black, FillDraw(paleyellow)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0492_06dd4db.png",
    "code": "size(12cm,0);\n\nimport geometry;\n\ntriangle T=triangleAbc(90,Tan(30),1);\n\ntriangle[] reverse(triangle[] arr)\n{\n  triangle[] or;\n  int l=arr.length;\n  for(int i=0; i < l; ++i) {\n    or.push(arr[l-i-1]);\n  }\n  return or;\n}\n\ntriangle[] dissect(triangle T, int n, bool reverse=false)\n{\n  if(n <= 0) return new triangle[]{T};\n  triangle[] OT;\n\n  point M=curpoint(T.AB,T.b()*Tan(30));\n  point H=projection(T.BC)*M;\n  triangle[] OT1, OT2, OT3;\n  OT.append(dissect(triangle(H,T.B,M),n-1,!reverse));\n  OT.append(reverse((dissect(triangle(H,T.C,M),n-1,!reverse))));\n  OT.append(dissect(triangle(T.A,T.C,M),n-1,!reverse));\n  return OT;\n}\n\ntriangle[] DT=dissect(T,5);\npoint O=centroid(DT[0]);\npath g;\ntransform Ro=rotate(30,T.B), Re=reflect(T.BC), Roj;\n\nfor(int i : DT.keys) {\n  O=incenter(DT[i]);\n  g=g--O;\n}\n\ng=reverse(g);\npath G, g=g--Re*reverse(g) ;\nfor (int j=0; j < 12; j += 2) G=G--Ro^(-j)*g;\n\nfill(G--cycle,0.3*blue);\n\nfor(int i : DT.keys) {\n  for (int j=0; j < 12; j += 2) {\n    Roj=Ro^j;\n    draw(Roj*DT[i],miterjoin+0.8*red);\n    draw(Roj*(Re*DT[i]),miterjoin+0.8*red);\n  }\n}\n\ndraw(G--cycle,bp+miterjoin+0.9*yellow);\n\nshipout(bbox(2mm, FillDraw(black, 1mm+miterjoin+deepblue)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0493_05f3a9e.png",
    "code": "size(10cm,0);\n\nreal mandelbrot(pair c, real r, int count=100) {\n  int i=0;\n  pair z=c;\n  do {\n    ++i;\n    z=z^2+c;\n  } while (length(z) <= r && i<count);\n\n  return (i<count) ? i/count : 0;\n}\n\nreal r=4;\nreal step=.01;\nreal xmin=-2.25, xmax=.75;\nreal ymin=-1.3, ymax=0;\n\nreal x=xmin, y=ymin;\nint xloop=round((xmax-xmin)/step);\nint yloop=round((ymax-ymin)/step);\npen p;\npath sq=scale(step)*unitsquare;\n\nfor(int i=0; i < xloop; ++i) {\n  for(int j=0; j < yloop; ++j) {\n    p=mandelbrot((x,y),r,20)*red;\n    filldraw(shift(x,y)*sq,p,p);\n    y += step;\n  }\n  x += step;\n  y=ymin;\n}\n\nadd(reflect((0,0),(1,0))*currentpicture);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0494_0935fe7.png",
    "code": "size(10cm,0);\n\nreal a=-1.5, b=2a/3;\n\npicture H(pen p=currentpen) {\n  picture H;\n  draw(H,(-a,0)--(a,0)^^(-a,-b)--(-a,b)^^(a,-b)--(a,b),p);\n  return H;\n}\n\ntransform sc=scale(0.5);\ntransform[] t={identity(),\n               shift(-a,b)*sc, shift(-a,-b)*sc,\n               shift(a,b)*sc,  shift(a,-b)*sc};\n\npicture Hfractal(int n, pen p=currentpen)\n{\n  picture pic;\n  if(n == 0) return H(p);\n  picture Ht=Hfractal(n-1,p);\n  for (int i=0; i < 5; ++i) add(pic,t[i]*Ht);\n  return pic;\n}\n\nadd(Hfractal(4, bp+0.5*red));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0495_044c246.png",
    "code": "// Barnsley's fern\n// Foug\u00e8re de Barnsley\nsize(5cm,0);\n\nreal ab=85, ac=-5;\nreal rc=0.8, rb=0.3;\npath trk=(0,0)--(0,1);\n\ntransform [] t;\nt[1] =shift(0,1)*rotate(ab)*scale(rb);\nt[2] =shift(0,1)*rotate(-ab)*scale(rb);\nt[3] =shift(0,1)*rotate(ac)*scale(rc);\nreal sum=0;\n\nfor(int i=0; i<100; ++i) sum+=(rc*cos(ac*pi/180))^i;\nt[4] =xscale(0.01)*yscale(1/sum);\n\npicture pic;\ndraw(pic,trk);\npair pt=(0,0);\n\nfor(int i=0; i < 1000; ++i) {\n  pt=t[ 1+floor((3.0*rand()/randMax)) ]*pt;\n}\n\nint nbt;\nfor(int i=0; i < 200000; ++i) {\n  nbt=1+floor((4.0*rand()/randMax));\n  pt=t[nbt]*pt;\n  draw(pt);\n}\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0496_07ab372.png",
    "code": "size(10cm,0);\n\nreal a=-1.5, b=2a/3;\n\npath[] H=(-a,0)--(a,0)^^(-a,-b)--(-a,b)^^(a,-b)--(a,b);\n\ntransform sc=scale(0.5);\ntransform[] t={shift(-a,b)*sc, shift(-a,-b)*sc,\n               shift(a,b)*sc,  shift(a,-b)*sc};\n\nvoid Hfractal(path[] g, int n, pen[] p=new pen[]{currentpen})\n{\n  p.cyclic=true;\n  if(n == 0) draw(H,p[0]); else {\n    for (int i=0; i < 4; ++i) {\n      draw(t[i]*g,p[n]);\n      Hfractal(t[i]*g,n-1,p);\n    }\n  }\n}\n\nHfractal(H, 5, new pen[] {0.8*red, 0.8*green, 0.8*blue, black, blue+red});\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0497_012044e.png",
    "code": "//From documentation of Asymptote\nsize(10cm);\n\n// Draw Sierpinski triangle with top vertex A, side s, and depth q.\nvoid Sierpinski(pair A, real s, int q,\n                bool top=true, bool randcolor=false) {\n  pair B=A-(1,sqrt(2))*s/2;\n  pair C=B+s;\n  if(top) draw(A--B--C--cycle);\n  if (randcolor) {\n    filldraw((A+B)/2--(B+C)/2--(A+C)/2--cycle,\n             (.33*rand()/randMax*red+.33*rand()/randMax*green+.33*rand()/randMax*blue));\n  } else draw((A+B)/2--(B+C)/2--(A+C)/2--cycle);\n  if(q > 0) {\n    Sierpinski(A,s/2,q-1,false,randcolor);\n    Sierpinski((A+B)/2,s/2,q-1,false,randcolor);\n    Sierpinski((A+C)/2,s/2,q-1,false,randcolor);\n  }\n}\n\nSierpinski((0,1), 1, 5, randcolor=true);\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0498_01ef7ec.png",
    "code": "size(8cm);\nvoid koch(pair A, pair B, int n) {\n  pair C;\n  C =rotate(120, point(A--B,1/3))*A;\n  if (n>0) {\n    koch( A,        point(A--B,1/3), n-1);\n    koch( point(A--B,1/3), C,        n-1);\n    koch( C,        point(A--B,2/3), n-1);\n    koch( point(A--B,2/3), B,        n-1);\n  } else draw(A--point(A--B,1/3)--C--point(A--B,2/3)--B);\n}\n\npair z0=(1,0);\npair z1=rotate(120)*z0;\npair z2=rotate(120)*z1;\nkoch( z0, z1, 3 );\nkoch( z1, z2, 3 );\nkoch( z2, z0, 3 );\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0499_02672ef.png",
    "code": "import geometry;\nsize(10cm,0);\n\ntriangle[] dissect(triangle T, int n)\n{\n  if(n <= 0) return new triangle[]{T};\n  triangle[] OT;\n  point M=midpoint(T.BC);\n  triangle[] Tp=dissect(triangle(M,T.A,T.B),n-1);\n  for(triangle t : Tp) OT.insert(0,t);\n  triangle[] Tp=dissect(triangle(M,T.C,T.A),n-1);\n  for(triangle t : Tp) OT.insert(0,t);\n  return OT;\n}\n\ntriangle T=rotate(45)*triangle((1,1),(0,0),(2,0));\ntriangle[] DT=dissect(T,9);\npath g;\ntransform R=reflect(T.BC);\n\nfor(int i : DT.keys) {\n  draw(DT[i],miterjoin+0.9*red);\n  draw(R*DT[i],miterjoin+0.9*red);\n  g=g--centroid(DT[i]);\n}\n\ndraw(scale(sqrt(2))*unitsquare,bp+miterjoin+0.8*blue);\ndraw(g--reverse(R*g)--cycle,bp+miterjoin+yellow);\n\nshipout(bbox(sqrt(2)*mm, Fill(black)));\n"
  },
  {
    "instruction": "Generate the Asymptote code for this diagram.",
    "image_path": "asy_images/fig0500_0005de3.png",
    "code": "// From documentation of Asymptote\nsize(250);\n\nreal a=3;\nreal b=4;\nreal c=hypot(a,b);\n\ntransform ta=shift(c,c)*rotate(-aCos(a/c))*scale(a/c)*shift(-c);\ntransform tb=shift(0,c)*rotate(aCos(b/c))*scale(b/c);\n\npicture Pythagorean(int n) {\n  picture pic;\n  fill(pic,scale(c)*unitsquare,1/(n+1)*green+n/(n+1)*brown);\n  if(n == 0) return pic;\n  picture branch=Pythagorean(--n);\n  add(pic,ta*branch);\n  add(pic,tb*branch);\n  return pic;\n}\n\nadd(Pythagorean(12));\n"
  }
]